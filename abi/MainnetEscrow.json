{
    "abi": [
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "receiver",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "assetContract",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "bool",
            "name": "isERC721",
            "type": "bool"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amountOrNftIdToReceiver",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "increaseTotalAmountClaimable",
            "type": "uint256"
          }
        ],
        "name": "CallbackReceived",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "currency",
            "type": "address"
          }
        ],
        "name": "ERC20CurrencyAdded",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "currency",
            "type": "address"
          }
        ],
        "name": "ERC20CurrencyRemoved",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint8",
            "name": "version",
            "type": "uint8"
          }
        ],
        "name": "Initialized",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "oldOpeningFee",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "newOpeningFee",
            "type": "uint256"
          }
        ],
        "name": "OpeningFeeUpdated",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "previousOwner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "Paused",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "oldPriceFeedAddress",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "newPriceFeedAddress",
            "type": "address"
          }
        ],
        "name": "PriceFeedUpdated",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "assetRaffled",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "raffleOwner",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "enum MainnetEscrow.RaffleType",
            "name": "raffleType",
            "type": "uint8"
          },
          {
            "indexed": false,
            "internalType": "uint128",
            "name": "nftIdOrAmount",
            "type": "uint128"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "paymentcurrency",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint128",
            "name": "pricePerTicket",
            "type": "uint128"
          },
          {
            "indexed": false,
            "internalType": "uint64",
            "name": "numberOfTotalTickets",
            "type": "uint64"
          },
          {
            "indexed": false,
            "internalType": "uint64",
            "name": "minimumTicketsSold",
            "type": "uint64"
          },
          {
            "indexed": false,
            "internalType": "uint64",
            "name": "endTimestamp",
            "type": "uint64"
          },
          {
            "indexed": false,
            "internalType": "bytes32",
            "name": "merkleRoot",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "fairRaffleFee",
            "type": "uint256"
          }
        ],
        "name": "RaffleCreated",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "oldRelayerAddress",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "newRelayerAddress",
            "type": "address"
          }
        ],
        "name": "RelayerUpdated",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "Unpaused",
        "type": "event"
      },
      {
        "inputs": [],
        "name": "FAIR_RAFFLE_FEE_DENOMINATOR",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "FAIR_RAFFLE_FEE_NUMERATOR",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "OPENING_FEE",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_ERC20TokenAddressPolygon",
            "type": "address"
          }
        ],
        "name": "blacklistCurrency",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_tokenAddress",
            "type": "address"
          },
          {
            "internalType": "uint128",
            "name": "_amount",
            "type": "uint128"
          },
          {
            "internalType": "address",
            "name": "_currencyInPolygon",
            "type": "address"
          },
          {
            "internalType": "uint128",
            "name": "_pricePerTicket",
            "type": "uint128"
          },
          {
            "internalType": "uint64",
            "name": "_numberOfTickets",
            "type": "uint64"
          },
          {
            "internalType": "uint64",
            "name": "_minimumTicketsSold",
            "type": "uint64"
          },
          {
            "internalType": "uint64",
            "name": "_durationInSeconds",
            "type": "uint64"
          },
          {
            "internalType": "bytes32",
            "name": "_merkleRoot",
            "type": "bytes32"
          }
        ],
        "name": "createERC20Raffle",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_nftCollection",
            "type": "address"
          },
          {
            "internalType": "uint128",
            "name": "_nftId",
            "type": "uint128"
          },
          {
            "internalType": "address",
            "name": "_currencyInPolygon",
            "type": "address"
          },
          {
            "internalType": "uint128",
            "name": "_pricePerTicket",
            "type": "uint128"
          },
          {
            "internalType": "uint64",
            "name": "_numberOfTickets",
            "type": "uint64"
          },
          {
            "internalType": "uint64",
            "name": "_minimumTicketsSold",
            "type": "uint64"
          },
          {
            "internalType": "uint64",
            "name": "_durationInSeconds",
            "type": "uint64"
          },
          {
            "internalType": "bytes32",
            "name": "_merkleRoot",
            "type": "bytes32"
          }
        ],
        "name": "createERC721Raffle",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "currencyPriceFeed",
        "outputs": [
          {
            "internalType": "contract ICurrencyPriceFeed",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_tokenAddress",
            "type": "address"
          },
          {
            "internalType": "uint128",
            "name": "_amount",
            "type": "uint128"
          },
          {
            "internalType": "address",
            "name": "_currencyInPolygon",
            "type": "address"
          },
          {
            "internalType": "uint128",
            "name": "_pricePerTicket",
            "type": "uint128"
          },
          {
            "internalType": "uint64",
            "name": "_numberOfTickets",
            "type": "uint64"
          },
          {
            "internalType": "uint64",
            "name": "_minimumTicketsSold",
            "type": "uint64"
          }
        ],
        "name": "fairRaffleFeeERC20",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_currencyInPolygon",
            "type": "address"
          },
          {
            "internalType": "uint128",
            "name": "_pricePerTicket",
            "type": "uint128"
          },
          {
            "internalType": "uint64",
            "name": "_minimumTicketsSold",
            "type": "uint64"
          }
        ],
        "name": "fairRaffleFeeERC721",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_relayer",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_priceFeedContract",
            "type": "address"
          }
        ],
        "name": "initialize",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_erc20Token",
            "type": "address"
          }
        ],
        "name": "isCurrencyWhitelisted",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "paused",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "components": [
              {
                "internalType": "address",
                "name": "receiver",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "assetContract",
                "type": "address"
              },
              {
                "internalType": "bool",
                "name": "isERC721",
                "type": "bool"
              },
              {
                "internalType": "uint256",
                "name": "amountOrNftIdToReceiver",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "increaseTotalAmountClaimable",
                "type": "uint256"
              }
            ],
            "internalType": "struct MainnetEscrow.CallbackInfo[]",
            "name": "callbackArr",
            "type": "tuple[]"
          }
        ],
        "name": "polygonCallback",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "name": "polygonTokenToMainnetAddress",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "priceFeedsEnabled",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "relayer",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_openingFee",
            "type": "uint256"
          }
        ],
        "name": "setOpeningFee",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_currencyPriceFeed",
            "type": "address"
          }
        ],
        "name": "setPriceFeed",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_relayer",
            "type": "address"
          }
        ],
        "name": "setRelayer",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "togglePause",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "togglePriceFeed",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "name": "totalAmountClaimable",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_ERC20TokenAddressPolygon",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_ERC20TokenAddressMainnet",
            "type": "address"
          }
        ],
        "name": "whitelistCurrency",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "name": "whitelistedCurrencies",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address[]",
            "name": "_tokenAddress",
            "type": "address[]"
          },
          {
            "internalType": "uint256[]",
            "name": "_amounts",
            "type": "uint256[]"
          },
          {
            "internalType": "address",
            "name": "_receiver",
            "type": "address"
          }
        ],
        "name": "withdrawFees",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "allSourcePaths": {
      "1": "contracts/MainnetEscrow.sol",
      "26": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
      "27": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
      "28": "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
      "31": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
      "34": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
      "36": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
      "37": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
      "39": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
      "4": "contracts/interfaces/IWETH.sol",
      "42": "node_modules/@openzeppelin/contracts/utils/Address.sol"
    },
    "ast": {
      "absolutePath": "contracts/MainnetEscrow.sol",
      "exportedSymbols": {
        "Address": [
          19728
        ],
        "AddressUpgradeable": [
          20325
        ],
        "ContextUpgradeable": [
          19397
        ],
        "ICurrencyPriceFeed": [
          92
        ],
        "IERC165": [
          19740
        ],
        "IERC20": [
          16526
        ],
        "IERC20Extended": [
          100
        ],
        "IERC20Permit": [
          19433
        ],
        "IERC721": [
          16923
        ],
        "IWETH": [
          16189
        ],
        "Initializable": [
          19346
        ],
        "MainnetEscrow": [
          1324
        ],
        "OwnableUpgradeable": [
          16321
        ],
        "PausableUpgradeable": [
          16448
        ],
        "SafeERC20": [
          16807
        ]
      },
      "id": 1325,
      "license": "MIT",
      "nodeType": "SourceUnit",
      "nodes": [
        {
          "id": 77,
          "literals": [
            "solidity",
            "0.8",
            ".15"
          ],
          "nodeType": "PragmaDirective",
          "src": "32:23:1"
        },
        {
          "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
          "file": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
          "id": 78,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 1325,
          "sourceUnit": 16322,
          "src": "677:88:1",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
          "file": "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
          "id": 79,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 1325,
          "sourceUnit": 16449,
          "src": "766:91:1",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
          "file": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
          "id": 80,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 1325,
          "sourceUnit": 16924,
          "src": "858:71:1",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "file": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "id": 81,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 1325,
          "sourceUnit": 16527,
          "src": "930:69:1",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
          "file": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
          "id": 82,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 1325,
          "sourceUnit": 16808,
          "src": "1000:78:1",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "contracts/interfaces/IWETH.sol",
          "file": "./interfaces/IWETH.sol",
          "id": 84,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 1325,
          "sourceUnit": 16190,
          "src": "1079:45:1",
          "symbolAliases": [
            {
              "foreign": {
                "id": 83,
                "name": "IWETH",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 16189,
                "src": "1087:5:1",
                "typeDescriptions": {}
              },
              "nameLocation": "-1:-1:-1"
            }
          ],
          "unitAlias": ""
        },
        {
          "abstract": false,
          "baseContracts": [],
          "canonicalName": "ICurrencyPriceFeed",
          "contractDependencies": [],
          "contractKind": "interface",
          "fullyImplemented": false,
          "id": 92,
          "linearizedBaseContracts": [
            92
          ],
          "name": "ICurrencyPriceFeed",
          "nameLocation": "1136:18:1",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "functionSelector": "a4b943fb",
              "id": 91,
              "implemented": false,
              "kind": "function",
              "modifiers": [],
              "name": "getUsdPriceOfToken",
              "nameLocation": "1170:18:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 87,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 86,
                    "mutability": "mutable",
                    "name": "token_",
                    "nameLocation": "1197:6:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 91,
                    "src": "1189:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 85,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1189:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1188:16:1"
              },
              "returnParameters": {
                "id": 90,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 89,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 91,
                    "src": "1228:7:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 88,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1228:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1227:9:1"
              },
              "scope": 92,
              "src": "1161:76:1",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            }
          ],
          "scope": 1325,
          "src": "1126:113:1",
          "usedErrors": []
        },
        {
          "abstract": false,
          "baseContracts": [
            {
              "baseName": {
                "id": 93,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16526,
                "src": "1269:6:1"
              },
              "id": 94,
              "nodeType": "InheritanceSpecifier",
              "src": "1269:6:1"
            }
          ],
          "canonicalName": "IERC20Extended",
          "contractDependencies": [],
          "contractKind": "interface",
          "fullyImplemented": false,
          "id": 100,
          "linearizedBaseContracts": [
            100,
            16526
          ],
          "name": "IERC20Extended",
          "nameLocation": "1251:14:1",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "functionSelector": "313ce567",
              "id": 99,
              "implemented": false,
              "kind": "function",
              "modifiers": [],
              "name": "decimals",
              "nameLocation": "1291:8:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 95,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1299:2:1"
              },
              "returnParameters": {
                "id": 98,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 97,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 99,
                    "src": "1325:5:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "typeName": {
                      "id": 96,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "1325:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1324:7:1"
              },
              "scope": 100,
              "src": "1282:50:1",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            }
          ],
          "scope": 1325,
          "src": "1241:93:1",
          "usedErrors": []
        },
        {
          "abstract": false,
          "baseContracts": [
            {
              "baseName": {
                "id": 101,
                "name": "Initializable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 19346,
                "src": "1362:13:1"
              },
              "id": 102,
              "nodeType": "InheritanceSpecifier",
              "src": "1362:13:1"
            },
            {
              "baseName": {
                "id": 103,
                "name": "OwnableUpgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16321,
                "src": "1377:18:1"
              },
              "id": 104,
              "nodeType": "InheritanceSpecifier",
              "src": "1377:18:1"
            },
            {
              "baseName": {
                "id": 105,
                "name": "PausableUpgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16448,
                "src": "1397:19:1"
              },
              "id": 106,
              "nodeType": "InheritanceSpecifier",
              "src": "1397:19:1"
            }
          ],
          "canonicalName": "MainnetEscrow",
          "contractDependencies": [],
          "contractKind": "contract",
          "fullyImplemented": true,
          "id": 1324,
          "linearizedBaseContracts": [
            1324,
            16448,
            16321,
            19397,
            19346
          ],
          "name": "MainnetEscrow",
          "nameLocation": "1345:13:1",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "global": false,
              "id": 110,
              "libraryName": {
                "id": 107,
                "name": "SafeERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16807,
                "src": "1429:9:1"
              },
              "nodeType": "UsingForDirective",
              "src": "1423:27:1",
              "typeName": {
                "id": 109,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 108,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16526,
                  "src": "1443:6:1"
                },
                "referencedDeclaration": 16526,
                "src": "1443:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$16526",
                  "typeString": "contract IERC20"
                }
              }
            },
            {
              "canonicalName": "MainnetEscrow.RaffleType",
              "id": 113,
              "members": [
                {
                  "id": 111,
                  "name": "ERC721",
                  "nameLocation": "1482:6:1",
                  "nodeType": "EnumValue",
                  "src": "1482:6:1"
                },
                {
                  "id": 112,
                  "name": "ERC20",
                  "nameLocation": "1498:5:1",
                  "nodeType": "EnumValue",
                  "src": "1498:5:1"
                }
              ],
              "name": "RaffleType",
              "nameLocation": "1461:10:1",
              "nodeType": "EnumDefinition",
              "src": "1456:53:1"
            },
            {
              "canonicalName": "MainnetEscrow.CallbackInfo",
              "id": 124,
              "members": [
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1602:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1594:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1594:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "assetContract",
                  "nameLocation": "1723:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1715:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1715:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "isERC721",
                  "nameLocation": "1815:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1810:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1810:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 121,
                  "mutability": "mutable",
                  "name": "amountOrNftIdToReceiver",
                  "nameLocation": "1889:23:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1881:31:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1881:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "increaseTotalAmountClaimable",
                  "nameLocation": "1984:28:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1976:36:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1976:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "CallbackInfo",
              "nameLocation": "1522:12:1",
              "nodeType": "StructDefinition",
              "scope": 1324,
              "src": "1515:504:1",
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "436cc138",
              "id": 128,
              "mutability": "mutable",
              "name": "whitelistedCurrencies",
              "nameLocation": "2096:21:1",
              "nodeType": "VariableDeclaration",
              "scope": 1324,
              "src": "2064:53:1",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "typeName": {
                "id": 127,
                "keyType": {
                  "id": 125,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2072:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2064:24:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 126,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2083:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              },
              "visibility": "public"
            },
            {
              "constant": true,
              "id": 134,
              "mutability": "constant",
              "name": "WETH",
              "nameLocation": "2147:4:1",
              "nodeType": "VariableDeclaration",
              "scope": 1324,
              "src": "2124:79:1",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWETH_$16189",
                "typeString": "contract IWETH"
              },
              "typeName": {
                "id": 130,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 129,
                  "name": "IWETH",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16189,
                  "src": "2124:5:1"
                },
                "referencedDeclaration": 16189,
                "src": "2124:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IWETH_$16189",
                  "typeString": "contract IWETH"
                }
              },
              "value": {
                "arguments": [
                  {
                    "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2160:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  ],
                  "id": 131,
                  "name": "IWETH",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16189,
                  "src": "2154:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_IWETH_$16189_$",
                    "typeString": "type(contract IWETH)"
                  }
                },
                "id": 133,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "typeConversion",
                "lValueRequested": false,
                "names": [],
                "nodeType": "FunctionCall",
                "src": "2154:49:1",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IWETH_$16189",
                  "typeString": "contract IWETH"
                }
              },
              "visibility": "private"
            },
            {
              "constant": false,
              "functionSelector": "2bf78dd8",
              "id": 136,
              "mutability": "mutable",
              "name": "OPENING_FEE",
              "nameLocation": "2224:11:1",
              "nodeType": "VariableDeclaration",
              "scope": 1324,
              "src": "2209:26:1",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 135,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2209:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "public"
            },
            {
              "constant": true,
              "functionSelector": "4e4d58bb",
              "id": 139,
              "mutability": "constant",
              "name": "FAIR_RAFFLE_FEE_NUMERATOR",
              "nameLocation": "2318:25:1",
              "nodeType": "VariableDeclaration",
              "scope": 1324,
              "src": "2294:55:1",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 137,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2294:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "353030",
                "id": 138,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2346:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_500_by_1",
                  "typeString": "int_const 500"
                },
                "value": "500"
              },
              "visibility": "public"
            },
            {
              "constant": true,
              "functionSelector": "66998e50",
              "id": 142,
              "mutability": "constant",
              "name": "FAIR_RAFFLE_FEE_DENOMINATOR",
              "nameLocation": "2379:27:1",
              "nodeType": "VariableDeclaration",
              "scope": 1324,
              "src": "2355:59:1",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 140,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2355:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "3130303030",
                "id": 141,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2409:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10000_by_1",
                  "typeString": "int_const 10000"
                },
                "value": "10000"
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "documentation": {
                "id": 143,
                "nodeType": "StructuredDocumentation",
                "src": "2420:123:1",
                "text": "Token address => Amount that owners of the contract can claim as fee rewards\naddress(0) = Ether"
              },
              "functionSelector": "a21afc76",
              "id": 147,
              "mutability": "mutable",
              "name": "totalAmountClaimable",
              "nameLocation": "2583:20:1",
              "nodeType": "VariableDeclaration",
              "scope": 1324,
              "src": "2548:55:1",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "typeName": {
                "id": 146,
                "keyType": {
                  "id": 144,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2556:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2548:27:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 145,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2567:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "8406c079",
              "id": 149,
              "mutability": "mutable",
              "name": "relayer",
              "nameLocation": "2705:7:1",
              "nodeType": "VariableDeclaration",
              "scope": 1324,
              "src": "2690:22:1",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "typeName": {
                "id": 148,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2690:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "7b631da5",
              "id": 152,
              "mutability": "mutable",
              "name": "currencyPriceFeed",
              "nameLocation": "2836:17:1",
              "nodeType": "VariableDeclaration",
              "scope": 1324,
              "src": "2810:43:1",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICurrencyPriceFeed_$92",
                "typeString": "contract ICurrencyPriceFeed"
              },
              "typeName": {
                "id": 151,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 150,
                  "name": "ICurrencyPriceFeed",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 92,
                  "src": "2810:18:1"
                },
                "referencedDeclaration": 92,
                "src": "2810:18:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ICurrencyPriceFeed_$92",
                  "typeString": "contract ICurrencyPriceFeed"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "95e3d9ab",
              "id": 156,
              "mutability": "mutable",
              "name": "polygonTokenToMainnetAddress",
              "nameLocation": "2983:28:1",
              "nodeType": "VariableDeclaration",
              "scope": 1324,
              "src": "2948:63:1",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "typeName": {
                "id": 155,
                "keyType": {
                  "id": 153,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2956:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2948:27:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 154,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2967:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "697ca930",
              "id": 158,
              "mutability": "mutable",
              "name": "priceFeedsEnabled",
              "nameLocation": "3102:17:1",
              "nodeType": "VariableDeclaration",
              "scope": 1324,
              "src": "3090:29:1",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "typeName": {
                "id": 157,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "3090:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "id": 162,
              "mutability": "mutable",
              "name": "__gap",
              "nameLocation": "3187:5:1",
              "nodeType": "VariableDeclaration",
              "scope": 1324,
              "src": "3167:25:1",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$20_storage",
                "typeString": "uint256[20]"
              },
              "typeName": {
                "baseType": {
                  "id": 159,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3167:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 161,
                "length": {
                  "hexValue": "3230",
                  "id": 160,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3175:2:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_20_by_1",
                    "typeString": "int_const 20"
                  },
                  "value": "20"
                },
                "nodeType": "ArrayTypeName",
                "src": "3167:11:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$20_storage_ptr",
                  "typeString": "uint256[20]"
                }
              },
              "visibility": "private"
            },
            {
              "anonymous": false,
              "eventSelector": "b26c0bf32d8d3eff0d0561d0b30f4bf8962a18678833b276fcbbe06c48e9eaaa",
              "id": 187,
              "name": "RaffleCreated",
              "nameLocation": "3205:13:1",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 186,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 164,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "assetRaffled",
                    "nameLocation": "3236:12:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 187,
                    "src": "3228:20:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 163,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3228:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 166,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "raffleOwner",
                    "nameLocation": "3266:11:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 187,
                    "src": "3258:19:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 165,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3258:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 169,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "raffleType",
                    "nameLocation": "3298:10:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 187,
                    "src": "3287:21:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RaffleType_$113",
                      "typeString": "enum MainnetEscrow.RaffleType"
                    },
                    "typeName": {
                      "id": 168,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 167,
                        "name": "RaffleType",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 113,
                        "src": "3287:10:1"
                      },
                      "referencedDeclaration": 113,
                      "src": "3287:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleType_$113",
                        "typeString": "enum MainnetEscrow.RaffleType"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 171,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "nftIdOrAmount",
                    "nameLocation": "3326:13:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 187,
                    "src": "3318:21:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "typeName": {
                      "id": 170,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "3318:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 173,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "paymentcurrency",
                    "nameLocation": "3358:15:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 187,
                    "src": "3350:23:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 172,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3350:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 175,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "pricePerTicket",
                    "nameLocation": "3392:14:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 187,
                    "src": "3384:22:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "typeName": {
                      "id": 174,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "3384:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 177,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "numberOfTotalTickets",
                    "nameLocation": "3424:20:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 187,
                    "src": "3417:27:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "typeName": {
                      "id": 176,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "3417:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 179,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "minimumTicketsSold",
                    "nameLocation": "3462:18:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 187,
                    "src": "3455:25:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "typeName": {
                      "id": 178,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "3455:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 181,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "endTimestamp",
                    "nameLocation": "3498:12:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 187,
                    "src": "3491:19:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "typeName": {
                      "id": 180,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "3491:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 183,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "merkleRoot",
                    "nameLocation": "3529:10:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 187,
                    "src": "3521:18:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 182,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3521:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 185,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "fairRaffleFee",
                    "nameLocation": "3557:13:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 187,
                    "src": "3549:21:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 184,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3549:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "3218:358:1"
              },
              "src": "3199:378:1"
            },
            {
              "anonymous": false,
              "eventSelector": "5c6cf68a9d7e416d0eee740661627dd794257920f1c63ddae6c6af81d02d12ea",
              "id": 191,
              "name": "ERC20CurrencyAdded",
              "nameLocation": "3588:18:1",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 190,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 189,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "currency",
                    "nameLocation": "3615:8:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 191,
                    "src": "3607:16:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 188,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3607:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "3606:18:1"
              },
              "src": "3582:43:1"
            },
            {
              "anonymous": false,
              "eventSelector": "0dc0548bc90523a9e943ea77d199875fdc1e4f8a419b6d53a595b5e6671480e5",
              "id": 195,
              "name": "ERC20CurrencyRemoved",
              "nameLocation": "3636:20:1",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 194,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 193,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "currency",
                    "nameLocation": "3665:8:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 195,
                    "src": "3657:16:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 192,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3657:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "3656:18:1"
              },
              "src": "3630:45:1"
            },
            {
              "anonymous": false,
              "eventSelector": "fdf87137985fce097c2059f7e3bd28b9104995cad66709fdecbaa5e8e48da9af",
              "id": 207,
              "name": "CallbackReceived",
              "nameLocation": "3686:16:1",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 206,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 197,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "receiver",
                    "nameLocation": "3720:8:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 207,
                    "src": "3712:16:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 196,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3712:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 199,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "assetContract",
                    "nameLocation": "3746:13:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 207,
                    "src": "3738:21:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 198,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3738:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 201,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "isERC721",
                    "nameLocation": "3774:8:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 207,
                    "src": "3769:13:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 200,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "3769:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 203,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "amountOrNftIdToReceiver",
                    "nameLocation": "3800:23:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 207,
                    "src": "3792:31:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 202,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3792:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 205,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "increaseTotalAmountClaimable",
                    "nameLocation": "3841:28:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 207,
                    "src": "3833:36:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 204,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3833:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "3702:173:1"
              },
              "src": "3680:196:1"
            },
            {
              "anonymous": false,
              "eventSelector": "605ca4e43489fb38b91aa63dd9147cd3847957694b080b9285ec898b34269f0c",
              "id": 213,
              "name": "RelayerUpdated",
              "nameLocation": "3887:14:1",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 212,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 209,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "oldRelayerAddress",
                    "nameLocation": "3910:17:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 213,
                    "src": "3902:25:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 208,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3902:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 211,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "newRelayerAddress",
                    "nameLocation": "3937:17:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 213,
                    "src": "3929:25:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 210,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3929:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "3901:54:1"
              },
              "src": "3881:75:1"
            },
            {
              "anonymous": false,
              "eventSelector": "a8abe0398416476db5b05737cd4da3b3cbde5012d978a6a6c3fd49d321753536",
              "id": 219,
              "name": "PriceFeedUpdated",
              "nameLocation": "3967:16:1",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 218,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 215,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "oldPriceFeedAddress",
                    "nameLocation": "3992:19:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 219,
                    "src": "3984:27:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 214,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3984:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 217,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "newPriceFeedAddress",
                    "nameLocation": "4021:19:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 219,
                    "src": "4013:27:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 216,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4013:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "3983:58:1"
              },
              "src": "3961:81:1"
            },
            {
              "anonymous": false,
              "eventSelector": "9dc2340c6769757c8d7dfe3a65a3f1e297ed8f919bed31501223ac8aa85dc63d",
              "id": 225,
              "name": "OpeningFeeUpdated",
              "nameLocation": "4053:17:1",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 224,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 221,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "oldOpeningFee",
                    "nameLocation": "4079:13:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 225,
                    "src": "4071:21:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 220,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4071:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 223,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "newOpeningFee",
                    "nameLocation": "4102:13:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 225,
                    "src": "4094:21:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 222,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4094:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "4070:46:1"
              },
              "src": "4047:70:1"
            },
            {
              "body": {
                "id": 273,
                "nodeType": "Block",
                "src": "4208:480:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 234,
                        "name": "__Ownable_init",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16216,
                        "src": "4218:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                          "typeString": "function ()"
                        }
                      },
                      "id": 235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4218:16:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 236,
                    "nodeType": "ExpressionStatement",
                    "src": "4218:16:1"
                  },
                  {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 237,
                        "name": "__Pausable_init",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16352,
                        "src": "4244:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                          "typeString": "function ()"
                        }
                      },
                      "id": 238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4244:17:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 239,
                    "nodeType": "ExpressionStatement",
                    "src": "4244:17:1"
                  },
                  {
                    "expression": {
                      "id": 242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 240,
                        "name": "relayer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "4272:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 241,
                        "name": "_relayer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "4282:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4272:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 243,
                    "nodeType": "ExpressionStatement",
                    "src": "4272:18:1"
                  },
                  {
                    "expression": {
                      "id": 248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 244,
                        "name": "currencyPriceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "4300:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICurrencyPriceFeed_$92",
                          "typeString": "contract ICurrencyPriceFeed"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 246,
                            "name": "_priceFeedContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 229,
                            "src": "4339:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 245,
                          "name": "ICurrencyPriceFeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "4320:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICurrencyPriceFeed_$92_$",
                            "typeString": "type(contract ICurrencyPriceFeed)"
                          }
                        },
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4320:38:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICurrencyPriceFeed_$92",
                          "typeString": "contract ICurrencyPriceFeed"
                        }
                      },
                      "src": "4300:58:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICurrencyPriceFeed_$92",
                        "typeString": "contract ICurrencyPriceFeed"
                      }
                    },
                    "id": 249,
                    "nodeType": "ExpressionStatement",
                    "src": "4300:58:1"
                  },
                  {
                    "expression": {
                      "id": 252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 250,
                        "name": "priceFeedsEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 158,
                        "src": "4368:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "74727565",
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4388:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "4368:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 253,
                    "nodeType": "ExpressionStatement",
                    "src": "4368:24:1"
                  },
                  {
                    "expression": {
                      "id": 258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 254,
                          "name": "whitelistedCurrencies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 128,
                          "src": "4437:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 256,
                        "indexExpression": {
                          "hexValue": "307837636542323366443662433061644435394536326163323535373832373063466631623966363139",
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4459:42:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "4437:65:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "74727565",
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4505:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "4437:72:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 259,
                    "nodeType": "ExpressionStatement",
                    "src": "4437:72:1"
                  },
                  {
                    "expression": {
                      "id": 267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 260,
                          "name": "polygonTokenToMainnetAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 156,
                          "src": "4559:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 262,
                        "indexExpression": {
                          "hexValue": "307837636542323366443662433061644435394536326163323535373832373063466631623966363139",
                          "id": 261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4588:42:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "4559:72:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 265,
                            "name": "WETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "4642:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IWETH_$16189",
                              "typeString": "contract IWETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IWETH_$16189",
                              "typeString": "contract IWETH"
                            }
                          ],
                          "id": 264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4634:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 263,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4634:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4634:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4559:88:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 268,
                    "nodeType": "ExpressionStatement",
                    "src": "4559:88:1"
                  },
                  {
                    "expression": {
                      "id": 271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 269,
                        "name": "OPENING_FEE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "4657:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "302e3033",
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4671:10:1",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30000000000000000_by_1",
                          "typeString": "int_const 30000000000000000"
                        },
                        "value": "0.03"
                      },
                      "src": "4657:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 272,
                    "nodeType": "ExpressionStatement",
                    "src": "4657:24:1"
                  }
                ]
              },
              "functionSelector": "485cc955",
              "id": 274,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 232,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 231,
                    "name": "initializer",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 19266,
                    "src": "4196:11:1"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "4196:11:1"
                }
              ],
              "name": "initialize",
              "nameLocation": "4132:10:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 230,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 227,
                    "mutability": "mutable",
                    "name": "_relayer",
                    "nameLocation": "4151:8:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 274,
                    "src": "4143:16:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 226,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4143:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 229,
                    "mutability": "mutable",
                    "name": "_priceFeedContract",
                    "nameLocation": "4169:18:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 274,
                    "src": "4161:26:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 228,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4161:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "4142:46:1"
              },
              "returnParameters": {
                "id": 233,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "4208:0:1"
              },
              "scope": 1324,
              "src": "4123:565:1",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 285,
                "nodeType": "Block",
                "src": "4715:73:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 277,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4733:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4733:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 279,
                            "name": "relayer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 149,
                            "src": "4747:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4733:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "4f6e6c7952656c61796572",
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4756:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_fb59d85d0023f926819a2b0cc435a89c2c9fd24b01ad767f56a4424f316af093",
                            "typeString": "literal_string \"OnlyRelayer\""
                          },
                          "value": "OnlyRelayer"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_fb59d85d0023f926819a2b0cc435a89c2c9fd24b01ad767f56a4424f316af093",
                            "typeString": "literal_string \"OnlyRelayer\""
                          }
                        ],
                        "id": 276,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "4725:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4725:45:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 283,
                    "nodeType": "ExpressionStatement",
                    "src": "4725:45:1"
                  },
                  {
                    "id": 284,
                    "nodeType": "PlaceholderStatement",
                    "src": "4780:1:1"
                  }
                ]
              },
              "id": 286,
              "name": "onlyRelayer",
              "nameLocation": "4703:11:1",
              "nodeType": "ModifierDefinition",
              "parameters": {
                "id": 275,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "4715:0:1"
              },
              "src": "4694:94:1",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 427,
                "nodeType": "Block",
                "src": "6082:1419:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 309,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6100:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6100:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 315,
                                "name": "_nftId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 291,
                                "src": "6146:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 312,
                                    "name": "_nftCollection",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 289,
                                    "src": "6122:14:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 311,
                                  "name": "IERC721",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16923,
                                  "src": "6114:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721_$16923_$",
                                    "typeString": "type(contract IERC721)"
                                  }
                                },
                                "id": 313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6114:23:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721_$16923",
                                  "typeString": "contract IERC721"
                                }
                              },
                              "id": 314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16856,
                              "src": "6114:31:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6114:39:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6100:53:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "596f7520646f206e6f74206f776e2074686973204e4654",
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6155:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ea429e64dc8be3b9b81e5ef4dd1edcbaa9ded156548c2a1a1b36d78d2dc3b9af",
                            "typeString": "literal_string \"You do not own this NFT\""
                          },
                          "value": "You do not own this NFT"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_ea429e64dc8be3b9b81e5ef4dd1edcbaa9ded156548c2a1a1b36d78d2dc3b9af",
                            "typeString": "literal_string \"You do not own this NFT\""
                          }
                        ],
                        "id": 308,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "6092:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6092:89:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 320,
                    "nodeType": "ExpressionStatement",
                    "src": "6092:89:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 322,
                            "name": "whitelistedCurrencies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "6199:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 324,
                          "indexExpression": {
                            "id": 323,
                            "name": "_currencyInPolygon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 293,
                            "src": "6221:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6199:41:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "546869732063757272656e6379206973206e6f742077686974656c6973746564",
                          "id": 325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6242:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_e6e79c33916e338d6d55620301a9b8b688543376846a0ab9b39c2c41eb09d772",
                            "typeString": "literal_string \"This currency is not whitelisted\""
                          },
                          "value": "This currency is not whitelisted"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_e6e79c33916e338d6d55620301a9b8b688543376846a0ab9b39c2c41eb09d772",
                            "typeString": "literal_string \"This currency is not whitelisted\""
                          }
                        ],
                        "id": 321,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "6191:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6191:86:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 327,
                    "nodeType": "ExpressionStatement",
                    "src": "6191:86:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 329,
                            "name": "_numberOfTickets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 297,
                            "src": "6295:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6314:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "6295:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "526166666c6573206d7573742068617665206174206c656173742032207469636b657473",
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6317:38:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_7660643d80dd9192ee623d00569baaf2c967faabaa847adee71041e77f41d86e",
                            "typeString": "literal_string \"Raffles must have at least 2 tickets\""
                          },
                          "value": "Raffles must have at least 2 tickets"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_7660643d80dd9192ee623d00569baaf2c967faabaa847adee71041e77f41d86e",
                            "typeString": "literal_string \"Raffles must have at least 2 tickets\""
                          }
                        ],
                        "id": 328,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "6287:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6287:69:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 334,
                    "nodeType": "ExpressionStatement",
                    "src": "6287:69:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 336,
                            "name": "_minimumTicketsSold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 299,
                            "src": "6374:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 337,
                            "name": "_numberOfTickets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 297,
                            "src": "6397:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "6374:39:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "5f6d696e696d756d5469636b657473536f6c642073686f756c64203c3d205f6e756d6265724f665469636b657473",
                          "id": 339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6415:48:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ac4d16b3d913981722bd2cab2e368bba364c7e45d84c336bacc6c435f110deeb",
                            "typeString": "literal_string \"_minimumTicketsSold should <= _numberOfTickets\""
                          },
                          "value": "_minimumTicketsSold should <= _numberOfTickets"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_ac4d16b3d913981722bd2cab2e368bba364c7e45d84c336bacc6c435f110deeb",
                            "typeString": "literal_string \"_minimumTicketsSold should <= _numberOfTickets\""
                          }
                        ],
                        "id": 335,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "6366:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6366:98:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 341,
                    "nodeType": "ExpressionStatement",
                    "src": "6366:98:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 343,
                            "name": "_durationInSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 301,
                            "src": "6482:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "3433323030",
                            "id": 344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6504:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_43200_by_1",
                              "typeString": "int_const 43200"
                            },
                            "value": "43200"
                          },
                          "src": "6482:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "4d696e696d756d206475726174696f6e20697320313220686f757273",
                          "id": 346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6511:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_f6ecce682c7d2f371b2ac2285c9d5506451577dde58a239feb6bcc18a09cb625",
                            "typeString": "literal_string \"Minimum duration is 12 hours\""
                          },
                          "value": "Minimum duration is 12 hours"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_f6ecce682c7d2f371b2ac2285c9d5506451577dde58a239feb6bcc18a09cb625",
                            "typeString": "literal_string \"Minimum duration is 12 hours\""
                          }
                        ],
                        "id": 342,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "6474:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6474:68:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 348,
                    "nodeType": "ExpressionStatement",
                    "src": "6474:68:1"
                  },
                  {
                    "assignments": [
                      350
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 350,
                        "mutability": "mutable",
                        "name": "FAIR_RAFFLE_FEE",
                        "nameLocation": "6646:15:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 427,
                        "src": "6638:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 349,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6638:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 356,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 352,
                          "name": "_currencyInPolygon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 293,
                          "src": "6684:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 353,
                          "name": "_pricePerTicket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 295,
                          "src": "6704:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 354,
                          "name": "_minimumTicketsSold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 299,
                          "src": "6721:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 351,
                        "name": "fairRaffleFeeERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1323,
                        "src": "6664:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint128_$_t_uint64_$returns$_t_uint256_$",
                          "typeString": "function (address,uint128,uint64) view returns (uint256)"
                        }
                      },
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6664:77:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6638:103:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 358,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6760:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "6760:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 362,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 360,
                                  "name": "OPENING_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 136,
                                  "src": "6774:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 361,
                                  "name": "FAIR_RAFFLE_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 350,
                                  "src": "6788:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6774:29:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 363,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "6773:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6760:44:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "496e636f727265637420666565732073656e74",
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6806:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ecfcb372796e10e3e3235af9350c84c2e9f43065bee6b8ef2766eba6fc5fe099",
                            "typeString": "literal_string \"Incorrect fees sent\""
                          },
                          "value": "Incorrect fees sent"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_ecfcb372796e10e3e3235af9350c84c2e9f43065bee6b8ef2766eba6fc5fe099",
                            "typeString": "literal_string \"Incorrect fees sent\""
                          }
                        ],
                        "id": 357,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "6752:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6752:76:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 367,
                    "nodeType": "ExpressionStatement",
                    "src": "6752:76:1"
                  },
                  {
                    "expression": {
                      "id": 375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 368,
                          "name": "totalAmountClaimable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 147,
                          "src": "6838:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 373,
                        "indexExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6867:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6859:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 369,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6859:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6859:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "6838:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "id": 374,
                        "name": "OPENING_FEE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "6874:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6838:47:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 376,
                    "nodeType": "ExpressionStatement",
                    "src": "6838:47:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 381,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6982:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6982:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 385,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "7002:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MainnetEscrow_$1324",
                                "typeString": "contract MainnetEscrow"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MainnetEscrow_$1324",
                                "typeString": "contract MainnetEscrow"
                              }
                            ],
                            "id": 384,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6994:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 383,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6994:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6994:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 387,
                          "name": "_nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "7009:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 378,
                              "name": "_nftCollection",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 289,
                              "src": "6953:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 377,
                            "name": "IERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16923,
                            "src": "6945:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC721_$16923_$",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6945:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC721_$16923",
                            "typeString": "contract IERC721"
                          }
                        },
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16888,
                        "src": "6945:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256) external"
                        }
                      },
                      "id": 388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6945:71:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 389,
                    "nodeType": "ExpressionStatement",
                    "src": "6945:71:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 393,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7042:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MainnetEscrow_$1324",
                                  "typeString": "contract MainnetEscrow"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MainnetEscrow_$1324",
                                  "typeString": "contract MainnetEscrow"
                                }
                              ],
                              "id": 392,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7034:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 391,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7034:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7034:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 399,
                                "name": "_nftId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 291,
                                "src": "7083:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 396,
                                    "name": "_nftCollection",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 289,
                                    "src": "7059:14:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 395,
                                  "name": "IERC721",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16923,
                                  "src": "7051:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721_$16923_$",
                                    "typeString": "type(contract IERC721)"
                                  }
                                },
                                "id": 397,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7051:23:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721_$16923",
                                  "typeString": "contract IERC721"
                                }
                              },
                              "id": 398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16856,
                              "src": "7051:31:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7051:39:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7034:56:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "5472616e73666572206661696c6564",
                          "id": 402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7092:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                            "typeString": "literal_string \"Transfer failed\""
                          },
                          "value": "Transfer failed"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                            "typeString": "literal_string \"Transfer failed\""
                          }
                        ],
                        "id": 390,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "7026:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7026:84:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 404,
                    "nodeType": "ExpressionStatement",
                    "src": "7026:84:1"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 406,
                          "name": "_nftCollection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 289,
                          "src": "7153:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 407,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7181:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7181:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 409,
                            "name": "RaffleType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "7205:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_RaffleType_$113_$",
                              "typeString": "type(enum MainnetEscrow.RaffleType)"
                            }
                          },
                          "id": 410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ERC721",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 111,
                          "src": "7205:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleType_$113",
                            "typeString": "enum MainnetEscrow.RaffleType"
                          }
                        },
                        {
                          "id": 411,
                          "name": "_nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "7236:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 412,
                          "name": "_currencyInPolygon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 293,
                          "src": "7257:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 413,
                          "name": "_pricePerTicket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 295,
                          "src": "7290:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 414,
                          "name": "_numberOfTickets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 297,
                          "src": "7320:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "id": 415,
                          "name": "_minimumTicketsSold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 299,
                          "src": "7351:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 418,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "7392:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "7392:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 420,
                                "name": "_durationInSeconds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 301,
                                "src": "7410:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "src": "7392:36:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7385:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint64_$",
                              "typeString": "type(uint64)"
                            },
                            "typeName": {
                              "id": 416,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "7385:6:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7385:44:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "id": 423,
                          "name": "_merkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 303,
                          "src": "7444:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 424,
                          "name": "FAIR_RAFFLE_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "7469:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_enum$_RaffleType_$113",
                            "typeString": "enum MainnetEscrow.RaffleType"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 405,
                        "name": "RaffleCreated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "7126:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_enum$_RaffleType_$113_$_t_uint128_$_t_address_$_t_uint128_$_t_uint64_$_t_uint64_$_t_uint64_$_t_bytes32_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,enum MainnetEscrow.RaffleType,uint128,address,uint128,uint64,uint64,uint64,bytes32,uint256)"
                        }
                      },
                      "id": 425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7126:368:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 426,
                    "nodeType": "EmitStatement",
                    "src": "7121:373:1"
                  }
                ]
              },
              "documentation": {
                "id": 287,
                "nodeType": "StructuredDocumentation",
                "src": "4794:1030:1",
                "text": " @notice  Allows users to create a raffle of an ERC721 asset\n @param   _nftCollection Address of the NFT to raffle\n @param   _nftId NFTid of the _nftCollection\n @param   _currencyInPolygon Polygon ERC20 token address used to buy tickets. address(0) should be put here if the currency will be MATIC\n @param   _pricePerTicket Price per ticket. It can be zero in case of an \"airdrop\"\n @param   _numberOfTickets Number of tickets that will be sold as maximum in the raffle\n @param   _minimumTicketsSold Number of tickets that should be sold in order to be a success raffle. If this minimum amount is not\nreached the owner of the raffle will be able to cancel the raffle, returning the users their payment plus a little collateral to cover\nfor the gas fees. If this amount is reached, normal flow will be followed.\n @param   _durationInSeconds Duration in seconds of the raffle\n @param   _merkleRoot Used so only whitelisted users can buy raffle tickets"
              },
              "functionSelector": "23bbcb29",
              "id": 428,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 306,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 305,
                    "name": "whenNotPaused",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 16370,
                    "src": "6068:13:1"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "6068:13:1"
                }
              ],
              "name": "createERC721Raffle",
              "nameLocation": "5838:18:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 304,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 289,
                    "mutability": "mutable",
                    "name": "_nftCollection",
                    "nameLocation": "5865:14:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 428,
                    "src": "5857:22:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 288,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5857:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 291,
                    "mutability": "mutable",
                    "name": "_nftId",
                    "nameLocation": "5889:6:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 428,
                    "src": "5881:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "typeName": {
                      "id": 290,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "5881:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 293,
                    "mutability": "mutable",
                    "name": "_currencyInPolygon",
                    "nameLocation": "5905:18:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 428,
                    "src": "5897:26:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 292,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5897:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 295,
                    "mutability": "mutable",
                    "name": "_pricePerTicket",
                    "nameLocation": "5933:15:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 428,
                    "src": "5925:23:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "typeName": {
                      "id": 294,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "5925:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 297,
                    "mutability": "mutable",
                    "name": "_numberOfTickets",
                    "nameLocation": "5957:16:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 428,
                    "src": "5950:23:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "typeName": {
                      "id": 296,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "5950:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 299,
                    "mutability": "mutable",
                    "name": "_minimumTicketsSold",
                    "nameLocation": "5982:19:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 428,
                    "src": "5975:26:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "typeName": {
                      "id": 298,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "5975:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 301,
                    "mutability": "mutable",
                    "name": "_durationInSeconds",
                    "nameLocation": "6010:18:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 428,
                    "src": "6003:25:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "typeName": {
                      "id": 300,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "6003:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 303,
                    "mutability": "mutable",
                    "name": "_merkleRoot",
                    "nameLocation": "6038:11:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 428,
                    "src": "6030:19:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 302,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6030:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "5856:194:1"
              },
              "returnParameters": {
                "id": 307,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "6082:0:1"
              },
              "scope": 1324,
              "src": "5829:1672:1",
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 593,
                "nodeType": "Block",
                "src": "8832:1594:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 451,
                            "name": "whitelistedCurrencies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "8850:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 453,
                          "indexExpression": {
                            "id": 452,
                            "name": "_currencyInPolygon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "8872:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8850:41:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "546869732063757272656e6379206973206e6f742077686974656c6973746564",
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8893:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_e6e79c33916e338d6d55620301a9b8b688543376846a0ab9b39c2c41eb09d772",
                            "typeString": "literal_string \"This currency is not whitelisted\""
                          },
                          "value": "This currency is not whitelisted"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_e6e79c33916e338d6d55620301a9b8b688543376846a0ab9b39c2c41eb09d772",
                            "typeString": "literal_string \"This currency is not whitelisted\""
                          }
                        ],
                        "id": 450,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "8842:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8842:86:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 456,
                    "nodeType": "ExpressionStatement",
                    "src": "8842:86:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 458,
                            "name": "_numberOfTickets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 439,
                            "src": "8946:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8965:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "8946:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "526166666c6573206d7573742068617665206174206c656173742032207469636b657473",
                          "id": 461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8968:38:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_7660643d80dd9192ee623d00569baaf2c967faabaa847adee71041e77f41d86e",
                            "typeString": "literal_string \"Raffles must have at least 2 tickets\""
                          },
                          "value": "Raffles must have at least 2 tickets"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_7660643d80dd9192ee623d00569baaf2c967faabaa847adee71041e77f41d86e",
                            "typeString": "literal_string \"Raffles must have at least 2 tickets\""
                          }
                        ],
                        "id": 457,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "8938:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8938:69:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 463,
                    "nodeType": "ExpressionStatement",
                    "src": "8938:69:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 465,
                            "name": "_minimumTicketsSold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 441,
                            "src": "9025:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 466,
                            "name": "_numberOfTickets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 439,
                            "src": "9048:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "9025:39:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "5f6d696e696d756d5469636b657473536f6c642073686f756c64203c3d205f6e756d6265724f665469636b657473",
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9066:48:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ac4d16b3d913981722bd2cab2e368bba364c7e45d84c336bacc6c435f110deeb",
                            "typeString": "literal_string \"_minimumTicketsSold should <= _numberOfTickets\""
                          },
                          "value": "_minimumTicketsSold should <= _numberOfTickets"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_ac4d16b3d913981722bd2cab2e368bba364c7e45d84c336bacc6c435f110deeb",
                            "typeString": "literal_string \"_minimumTicketsSold should <= _numberOfTickets\""
                          }
                        ],
                        "id": 464,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "9017:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9017:98:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 470,
                    "nodeType": "ExpressionStatement",
                    "src": "9017:98:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 472,
                            "name": "_durationInSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "9133:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "3433323030",
                            "id": 473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9155:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_43200_by_1",
                              "typeString": "int_const 43200"
                            },
                            "value": "43200"
                          },
                          "src": "9133:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "4d696e696d756d206475726174696f6e20697320313220686f757273",
                          "id": 475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9162:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_f6ecce682c7d2f371b2ac2285c9d5506451577dde58a239feb6bcc18a09cb625",
                            "typeString": "literal_string \"Minimum duration is 12 hours\""
                          },
                          "value": "Minimum duration is 12 hours"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_f6ecce682c7d2f371b2ac2285c9d5506451577dde58a239feb6bcc18a09cb625",
                            "typeString": "literal_string \"Minimum duration is 12 hours\""
                          }
                        ],
                        "id": 471,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "9125:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9125:68:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 477,
                    "nodeType": "ExpressionStatement",
                    "src": "9125:68:1"
                  },
                  {
                    "assignments": [
                      479
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 479,
                        "mutability": "mutable",
                        "name": "FAIR_RAFFLE_FEE",
                        "nameLocation": "9220:15:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 593,
                        "src": "9212:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 478,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9212:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 488,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 481,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 431,
                          "src": "9258:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 482,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 433,
                          "src": "9273:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 483,
                          "name": "_currencyInPolygon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "9282:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 484,
                          "name": "_pricePerTicket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 437,
                          "src": "9302:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 485,
                          "name": "_numberOfTickets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 439,
                          "src": "9319:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "id": 486,
                          "name": "_minimumTicketsSold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 441,
                          "src": "9337:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 480,
                        "name": "fairRaffleFeeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1263,
                        "src": "9238:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint128_$_t_address_$_t_uint128_$_t_uint64_$_t_uint64_$returns$_t_uint256_$",
                          "typeString": "function (address,uint128,address,uint128,uint64,uint64) view returns (uint256)"
                        }
                      },
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9238:119:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9212:145:1"
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 489,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 431,
                        "src": "9372:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9397:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9389:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 490,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9389:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9389:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "9372:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 560,
                      "nodeType": "Block",
                      "src": "9497:483:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 510,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 507,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "9519:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 508,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "9519:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 509,
                                  "name": "OPENING_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 136,
                                  "src": "9532:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9519:24:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "496e636f7272656374204f50454e494e475f4645452073656e74",
                                "id": 511,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9545:28:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_88d52ce92e9a3502cac8d0d9c45eb1b673317ac442c36e0b7b9c6247976b21b9",
                                  "typeString": "literal_string \"Incorrect OPENING_FEE sent\""
                                },
                                "value": "Incorrect OPENING_FEE sent"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_88d52ce92e9a3502cac8d0d9c45eb1b673317ac442c36e0b7b9c6247976b21b9",
                                  "typeString": "literal_string \"Incorrect OPENING_FEE sent\""
                                }
                              ],
                              "id": 506,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "9511:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9511:63:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 513,
                          "nodeType": "ExpressionStatement",
                          "src": "9511:63:1"
                        },
                        {
                          "assignments": [
                            515
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 515,
                              "mutability": "mutable",
                              "name": "balanceBefore",
                              "nameLocation": "9596:13:1",
                              "nodeType": "VariableDeclaration",
                              "scope": 560,
                              "src": "9588:21:1",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 514,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9588:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 525,
                          "initialValue": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 522,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "9652:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_MainnetEscrow_$1324",
                                      "typeString": "contract MainnetEscrow"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_MainnetEscrow_$1324",
                                      "typeString": "contract MainnetEscrow"
                                    }
                                  ],
                                  "id": 521,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9644:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 520,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9644:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 523,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9644:13:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 517,
                                    "name": "_tokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 431,
                                    "src": "9619:13:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 516,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16526,
                                  "src": "9612:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$16526_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9612:21:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$16526",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16483,
                              "src": "9612:31:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9612:46:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9588:70:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 530,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "9758:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "9758:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 534,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "9778:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_MainnetEscrow_$1324",
                                      "typeString": "contract MainnetEscrow"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_MainnetEscrow_$1324",
                                      "typeString": "contract MainnetEscrow"
                                    }
                                  ],
                                  "id": 533,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9770:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 532,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9770:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 535,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9770:13:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 536,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 433,
                                "src": "9785:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 527,
                                    "name": "_tokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 431,
                                    "src": "9726:13:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 526,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16526,
                                  "src": "9719:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$16526_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 528,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9719:21:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$16526",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "safeTransferFrom",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16584,
                              "src": "9719:38:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16526_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16526_$",
                                "typeString": "function (contract IERC20,address,address,uint256)"
                              }
                            },
                            "id": 537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9719:74:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 538,
                          "nodeType": "ExpressionStatement",
                          "src": "9719:74:1"
                        },
                        {
                          "assignments": [
                            540
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 540,
                              "mutability": "mutable",
                              "name": "balanceAfter",
                              "nameLocation": "9815:12:1",
                              "nodeType": "VariableDeclaration",
                              "scope": 560,
                              "src": "9807:20:1",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 539,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9807:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 550,
                          "initialValue": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 547,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "9870:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_MainnetEscrow_$1324",
                                      "typeString": "contract MainnetEscrow"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_MainnetEscrow_$1324",
                                      "typeString": "contract MainnetEscrow"
                                    }
                                  ],
                                  "id": 546,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9862:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 545,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9862:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 548,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9862:13:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 542,
                                    "name": "_tokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 431,
                                    "src": "9837:13:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 541,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16526,
                                  "src": "9830:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$16526_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 543,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9830:21:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$16526",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16483,
                              "src": "9830:31:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9830:46:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9807:69:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 556,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 552,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 433,
                                  "src": "9898:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 555,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 553,
                                    "name": "balanceAfter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 540,
                                    "src": "9909:12:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 554,
                                    "name": "balanceBefore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 515,
                                    "src": "9924:13:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9909:28:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9898:39:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "455243323020746f6b656e207472616e73666572206661696c6564",
                                "id": 557,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9939:29:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_09d7cbc760a5fb9ceb7ce3a996d579f34d61d7bf70c73104e2b38c60f3738442",
                                  "typeString": "literal_string \"ERC20 token transfer failed\""
                                },
                                "value": "ERC20 token transfer failed"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_09d7cbc760a5fb9ceb7ce3a996d579f34d61d7bf70c73104e2b38c60f3738442",
                                  "typeString": "literal_string \"ERC20 token transfer failed\""
                                }
                              ],
                              "id": 551,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "9890:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9890:79:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 559,
                          "nodeType": "ExpressionStatement",
                          "src": "9890:79:1"
                        }
                      ]
                    },
                    "id": 561,
                    "nodeType": "IfStatement",
                    "src": "9368:612:1",
                    "trueBody": {
                      "id": 505,
                      "nodeType": "Block",
                      "src": "9401:90:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 501,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 496,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "9423:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 497,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "9423:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 500,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 498,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 433,
                                    "src": "9436:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 499,
                                    "name": "OPENING_FEE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 136,
                                    "src": "9446:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9436:21:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9423:34:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "496e636f7272656374206665652073656e74",
                                "id": 502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9459:20:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_d8aa68f6b196d979432cbf9187add9bff0d380590941734a82e3959e6f449500",
                                  "typeString": "literal_string \"Incorrect fee sent\""
                                },
                                "value": "Incorrect fee sent"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_d8aa68f6b196d979432cbf9187add9bff0d380590941734a82e3959e6f449500",
                                  "typeString": "literal_string \"Incorrect fee sent\""
                                }
                              ],
                              "id": 495,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "9415:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9415:65:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 504,
                          "nodeType": "ExpressionStatement",
                          "src": "9415:65:1"
                        }
                      ]
                    }
                  },
                  {
                    "expression": {
                      "id": 569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 562,
                          "name": "totalAmountClaimable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 147,
                          "src": "9990:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 567,
                        "indexExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10019:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10011:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 563,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10011:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10011:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "9990:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "id": 568,
                        "name": "OPENING_FEE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "10026:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9990:47:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 570,
                    "nodeType": "ExpressionStatement",
                    "src": "9990:47:1"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 572,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 431,
                          "src": "10079:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 573,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10106:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10106:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 575,
                            "name": "RaffleType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "10130:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_RaffleType_$113_$",
                              "typeString": "type(enum MainnetEscrow.RaffleType)"
                            }
                          },
                          "id": 576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ERC20",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 112,
                          "src": "10130:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleType_$113",
                            "typeString": "enum MainnetEscrow.RaffleType"
                          }
                        },
                        {
                          "id": 577,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 433,
                          "src": "10160:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 578,
                          "name": "_currencyInPolygon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "10182:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 579,
                          "name": "_pricePerTicket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 437,
                          "src": "10215:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 580,
                          "name": "_numberOfTickets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 439,
                          "src": "10245:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "id": 581,
                          "name": "_minimumTicketsSold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 441,
                          "src": "10276:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 587,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 584,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "10317:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "10317:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 586,
                                "name": "_durationInSeconds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 443,
                                "src": "10335:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "src": "10317:36:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10310:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint64_$",
                              "typeString": "type(uint64)"
                            },
                            "typeName": {
                              "id": 582,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "10310:6:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10310:44:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "id": 589,
                          "name": "_merkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 445,
                          "src": "10369:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 590,
                          "name": "FAIR_RAFFLE_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 479,
                          "src": "10394:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_enum$_RaffleType_$113",
                            "typeString": "enum MainnetEscrow.RaffleType"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 571,
                        "name": "RaffleCreated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "10052:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_enum$_RaffleType_$113_$_t_uint128_$_t_address_$_t_uint128_$_t_uint64_$_t_uint64_$_t_uint64_$_t_bytes32_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,enum MainnetEscrow.RaffleType,uint128,address,uint128,uint64,uint64,uint64,bytes32,uint256)"
                        }
                      },
                      "id": 591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10052:367:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 592,
                    "nodeType": "EmitStatement",
                    "src": "10047:372:1"
                  }
                ]
              },
              "documentation": {
                "id": 429,
                "nodeType": "StructuredDocumentation",
                "src": "7507:1068:1",
                "text": " @notice  Allows users to create a raffle of an ERC20 asset\n @param   _tokenAddress Address of the token amount to raffle\n @param   _amount Quantity of tokens to be raffled\n @param   _currencyInPolygon Polygon ERC20 token address used to buy tickets. address(0) should be put here if the currency will be MATIC\n @param   _pricePerTicket Price per ticket. It can be zero in case of an \"airdrop\"\n @param   _numberOfTickets Number of tickets that will be sold as maximum in the raffle\n @param   _minimumTicketsSold Number of tickets that should be sold in order to be a success raffle. If this minimum amount is not\nreached the owner of the raffle will be able to cancel the raffle, returning the users their payment plus a little collateral to cover\nfor the gas fees. If this amount is reached, normal flow will be followed\n @param   _durationInSeconds Duration in seconds of the raffle\n @param   _merkleRoot Used so only whitelisted users can buy raffle tickets"
              },
              "functionSelector": "b3f8d40d",
              "id": 594,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 448,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 447,
                    "name": "whenNotPaused",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 16370,
                    "src": "8818:13:1"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "8818:13:1"
                }
              ],
              "name": "createERC20Raffle",
              "nameLocation": "8589:17:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 446,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 431,
                    "mutability": "mutable",
                    "name": "_tokenAddress",
                    "nameLocation": "8615:13:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 594,
                    "src": "8607:21:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 430,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8607:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 433,
                    "mutability": "mutable",
                    "name": "_amount",
                    "nameLocation": "8638:7:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 594,
                    "src": "8630:15:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "typeName": {
                      "id": 432,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "8630:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 435,
                    "mutability": "mutable",
                    "name": "_currencyInPolygon",
                    "nameLocation": "8655:18:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 594,
                    "src": "8647:26:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 434,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8647:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 437,
                    "mutability": "mutable",
                    "name": "_pricePerTicket",
                    "nameLocation": "8683:15:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 594,
                    "src": "8675:23:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "typeName": {
                      "id": 436,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "8675:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 439,
                    "mutability": "mutable",
                    "name": "_numberOfTickets",
                    "nameLocation": "8707:16:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 594,
                    "src": "8700:23:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "typeName": {
                      "id": 438,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "8700:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 441,
                    "mutability": "mutable",
                    "name": "_minimumTicketsSold",
                    "nameLocation": "8732:19:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 594,
                    "src": "8725:26:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "typeName": {
                      "id": 440,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "8725:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 443,
                    "mutability": "mutable",
                    "name": "_durationInSeconds",
                    "nameLocation": "8760:18:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 594,
                    "src": "8753:25:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "typeName": {
                      "id": 442,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "8753:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 445,
                    "mutability": "mutable",
                    "name": "_merkleRoot",
                    "nameLocation": "8788:11:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 594,
                    "src": "8780:19:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 444,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "8780:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "8606:194:1"
              },
              "returnParameters": {
                "id": 449,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "8832:0:1"
              },
              "scope": 1324,
              "src": "8580:1846:1",
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 753,
                "nodeType": "Block",
                "src": "10606:1369:1",
                "statements": [
                  {
                    "assignments": [
                      605
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 605,
                        "mutability": "mutable",
                        "name": "len",
                        "nameLocation": "10624:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 753,
                        "src": "10616:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 604,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10616:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 608,
                    "initialValue": {
                      "expression": {
                        "id": 606,
                        "name": "callbackArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 599,
                        "src": "10630:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CallbackInfo_$124_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct MainnetEscrow.CallbackInfo memory[] memory"
                        }
                      },
                      "id": 607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10630:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10616:32:1"
                  },
                  {
                    "body": {
                      "id": 751,
                      "nodeType": "Block",
                      "src": "10687:1282:1",
                      "statements": [
                        {
                          "condition": {
                            "expression": {
                              "baseExpression": {
                                "id": 618,
                                "name": "callbackArr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 599,
                                "src": "10704:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_CallbackInfo_$124_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct MainnetEscrow.CallbackInfo memory[] memory"
                                }
                              },
                              "id": 620,
                              "indexExpression": {
                                "id": 619,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 610,
                                "src": "10716:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10704:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallbackInfo_$124_memory_ptr",
                                "typeString": "struct MainnetEscrow.CallbackInfo memory"
                              }
                            },
                            "id": 621,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isERC721",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 119,
                            "src": "10704:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 706,
                            "nodeType": "Block",
                            "src": "10989:482:1",
                            "statements": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 663,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 655,
                                        "name": "callbackArr",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 599,
                                        "src": "11010:11:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_CallbackInfo_$124_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct MainnetEscrow.CallbackInfo memory[] memory"
                                        }
                                      },
                                      "id": 657,
                                      "indexExpression": {
                                        "id": 656,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 610,
                                        "src": "11022:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "11010:14:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallbackInfo_$124_memory_ptr",
                                        "typeString": "struct MainnetEscrow.CallbackInfo memory"
                                      }
                                    },
                                    "id": 658,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "receiver",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 115,
                                    "src": "11010:23:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 661,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11045:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 660,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "11037:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 659,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "11037:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 662,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11037:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "11010:37:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 705,
                                "nodeType": "IfStatement",
                                "src": "11007:450:1",
                                "trueBody": {
                                  "id": 704,
                                  "nodeType": "Block",
                                  "src": "11048:409:1",
                                  "statements": [
                                    {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        "id": 672,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 664,
                                              "name": "callbackArr",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 599,
                                              "src": "11073:11:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_CallbackInfo_$124_memory_ptr_$dyn_memory_ptr",
                                                "typeString": "struct MainnetEscrow.CallbackInfo memory[] memory"
                                              }
                                            },
                                            "id": 666,
                                            "indexExpression": {
                                              "id": 665,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 610,
                                              "src": "11085:1:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "11073:14:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_CallbackInfo_$124_memory_ptr",
                                              "typeString": "struct MainnetEscrow.CallbackInfo memory"
                                            }
                                          },
                                          "id": 667,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "assetContract",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 117,
                                          "src": "11073:28:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "arguments": [
                                            {
                                              "hexValue": "30",
                                              "id": 670,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "11113:1:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              "value": "0"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              }
                                            ],
                                            "id": 669,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "11105:7:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 668,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "11105:7:1",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 671,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "11105:10:1",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "src": "11073:42:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseBody": {
                                        "id": 702,
                                        "nodeType": "Block",
                                        "src": "11276:163:1",
                                        "statements": [
                                          {
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "expression": {
                                                    "baseExpression": {
                                                      "id": 692,
                                                      "name": "callbackArr",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 599,
                                                      "src": "11352:11:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_array$_t_struct$_CallbackInfo_$124_memory_ptr_$dyn_memory_ptr",
                                                        "typeString": "struct MainnetEscrow.CallbackInfo memory[] memory"
                                                      }
                                                    },
                                                    "id": 694,
                                                    "indexExpression": {
                                                      "id": 693,
                                                      "name": "i",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 610,
                                                      "src": "11364:1:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "11352:14:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_CallbackInfo_$124_memory_ptr",
                                                      "typeString": "struct MainnetEscrow.CallbackInfo memory"
                                                    }
                                                  },
                                                  "id": 695,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "receiver",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 115,
                                                  "src": "11352:23:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                {
                                                  "expression": {
                                                    "baseExpression": {
                                                      "id": 696,
                                                      "name": "callbackArr",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 599,
                                                      "src": "11377:11:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_array$_t_struct$_CallbackInfo_$124_memory_ptr_$dyn_memory_ptr",
                                                        "typeString": "struct MainnetEscrow.CallbackInfo memory[] memory"
                                                      }
                                                    },
                                                    "id": 698,
                                                    "indexExpression": {
                                                      "id": 697,
                                                      "name": "i",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 610,
                                                      "src": "11389:1:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "11377:14:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_CallbackInfo_$124_memory_ptr",
                                                      "typeString": "struct MainnetEscrow.CallbackInfo memory"
                                                    }
                                                  },
                                                  "id": 699,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "amountOrNftIdToReceiver",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 121,
                                                  "src": "11377:38:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "expression": {
                                                        "baseExpression": {
                                                          "id": 686,
                                                          "name": "callbackArr",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 599,
                                                          "src": "11309:11:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_struct$_CallbackInfo_$124_memory_ptr_$dyn_memory_ptr",
                                                            "typeString": "struct MainnetEscrow.CallbackInfo memory[] memory"
                                                          }
                                                        },
                                                        "id": 688,
                                                        "indexExpression": {
                                                          "id": 687,
                                                          "name": "i",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 610,
                                                          "src": "11321:1:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "11309:14:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_CallbackInfo_$124_memory_ptr",
                                                          "typeString": "struct MainnetEscrow.CallbackInfo memory"
                                                        }
                                                      },
                                                      "id": 689,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "assetContract",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 117,
                                                      "src": "11309:28:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    ],
                                                    "id": 685,
                                                    "name": "IERC20",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 16526,
                                                    "src": "11302:6:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$16526_$",
                                                      "typeString": "type(contract IERC20)"
                                                    }
                                                  },
                                                  "id": 690,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "typeConversion",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "11302:36:1",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$16526",
                                                    "typeString": "contract IERC20"
                                                  }
                                                },
                                                "id": 691,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "safeTransfer",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 16558,
                                                "src": "11302:49:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16526_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16526_$",
                                                  "typeString": "function (contract IERC20,address,uint256)"
                                                }
                                              },
                                              "id": 700,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "11302:114:1",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_tuple$__$",
                                                "typeString": "tuple()"
                                              }
                                            },
                                            "id": 701,
                                            "nodeType": "ExpressionStatement",
                                            "src": "11302:114:1"
                                          }
                                        ]
                                      },
                                      "id": 703,
                                      "nodeType": "IfStatement",
                                      "src": "11070:369:1",
                                      "trueBody": {
                                        "id": 684,
                                        "nodeType": "Block",
                                        "src": "11116:134:1",
                                        "statements": [
                                          {
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "expression": {
                                                    "baseExpression": {
                                                      "id": 674,
                                                      "name": "callbackArr",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 599,
                                                      "src": "11163:11:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_array$_t_struct$_CallbackInfo_$124_memory_ptr_$dyn_memory_ptr",
                                                        "typeString": "struct MainnetEscrow.CallbackInfo memory[] memory"
                                                      }
                                                    },
                                                    "id": 676,
                                                    "indexExpression": {
                                                      "id": 675,
                                                      "name": "i",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 610,
                                                      "src": "11175:1:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "11163:14:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_CallbackInfo_$124_memory_ptr",
                                                      "typeString": "struct MainnetEscrow.CallbackInfo memory"
                                                    }
                                                  },
                                                  "id": 677,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "receiver",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 115,
                                                  "src": "11163:23:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                {
                                                  "expression": {
                                                    "baseExpression": {
                                                      "id": 678,
                                                      "name": "callbackArr",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 599,
                                                      "src": "11188:11:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_array$_t_struct$_CallbackInfo_$124_memory_ptr_$dyn_memory_ptr",
                                                        "typeString": "struct MainnetEscrow.CallbackInfo memory[] memory"
                                                      }
                                                    },
                                                    "id": 680,
                                                    "indexExpression": {
                                                      "id": 679,
                                                      "name": "i",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 610,
                                                      "src": "11200:1:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "11188:14:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_CallbackInfo_$124_memory_ptr",
                                                      "typeString": "struct MainnetEscrow.CallbackInfo memory"
                                                    }
                                                  },
                                                  "id": 681,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "amountOrNftIdToReceiver",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 121,
                                                  "src": "11188:38:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "id": 673,
                                                "name": "_handleEtherTransfer",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 811,
                                                "src": "11142:20:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                  "typeString": "function (address,uint256)"
                                                }
                                              },
                                              "id": 682,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "11142:85:1",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_tuple$__$",
                                                "typeString": "tuple()"
                                              }
                                            },
                                            "id": 683,
                                            "nodeType": "ExpressionStatement",
                                            "src": "11142:85:1"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "id": 707,
                          "nodeType": "IfStatement",
                          "src": "10701:770:1",
                          "trueBody": {
                            "id": 654,
                            "nodeType": "Block",
                            "src": "10728:244:1",
                            "statements": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 630,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 622,
                                        "name": "callbackArr",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 599,
                                        "src": "10749:11:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_CallbackInfo_$124_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct MainnetEscrow.CallbackInfo memory[] memory"
                                        }
                                      },
                                      "id": 624,
                                      "indexExpression": {
                                        "id": 623,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 610,
                                        "src": "10761:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "10749:14:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallbackInfo_$124_memory_ptr",
                                        "typeString": "struct MainnetEscrow.CallbackInfo memory"
                                      }
                                    },
                                    "id": 625,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "receiver",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 115,
                                    "src": "10749:23:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 628,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10784:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 627,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10776:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 626,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10776:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 629,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10776:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "10749:37:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 653,
                                "nodeType": "IfStatement",
                                "src": "10746:212:1",
                                "trueBody": {
                                  "id": 652,
                                  "nodeType": "Block",
                                  "src": "10787:171:1",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "id": 640,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -28,
                                                "src": "10868:4:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_MainnetEscrow_$1324",
                                                  "typeString": "contract MainnetEscrow"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_MainnetEscrow_$1324",
                                                  "typeString": "contract MainnetEscrow"
                                                }
                                              ],
                                              "id": 639,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "10860:7:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 638,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "10860:7:1",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 641,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "10860:13:1",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 642,
                                                "name": "callbackArr",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 599,
                                                "src": "10875:11:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_struct$_CallbackInfo_$124_memory_ptr_$dyn_memory_ptr",
                                                  "typeString": "struct MainnetEscrow.CallbackInfo memory[] memory"
                                                }
                                              },
                                              "id": 644,
                                              "indexExpression": {
                                                "id": 643,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 610,
                                                "src": "10887:1:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "10875:14:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_CallbackInfo_$124_memory_ptr",
                                                "typeString": "struct MainnetEscrow.CallbackInfo memory"
                                              }
                                            },
                                            "id": 645,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "receiver",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 115,
                                            "src": "10875:23:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 646,
                                                "name": "callbackArr",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 599,
                                                "src": "10900:11:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_struct$_CallbackInfo_$124_memory_ptr_$dyn_memory_ptr",
                                                  "typeString": "struct MainnetEscrow.CallbackInfo memory[] memory"
                                                }
                                              },
                                              "id": 648,
                                              "indexExpression": {
                                                "id": 647,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 610,
                                                "src": "10912:1:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "10900:14:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_CallbackInfo_$124_memory_ptr",
                                                "typeString": "struct MainnetEscrow.CallbackInfo memory"
                                              }
                                            },
                                            "id": 649,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "amountOrNftIdToReceiver",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 121,
                                            "src": "10900:38:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "baseExpression": {
                                                    "id": 632,
                                                    "name": "callbackArr",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 599,
                                                    "src": "10817:11:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_struct$_CallbackInfo_$124_memory_ptr_$dyn_memory_ptr",
                                                      "typeString": "struct MainnetEscrow.CallbackInfo memory[] memory"
                                                    }
                                                  },
                                                  "id": 634,
                                                  "indexExpression": {
                                                    "id": 633,
                                                    "name": "i",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 610,
                                                    "src": "10829:1:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "10817:14:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_CallbackInfo_$124_memory_ptr",
                                                    "typeString": "struct MainnetEscrow.CallbackInfo memory"
                                                  }
                                                },
                                                "id": 635,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "assetContract",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 117,
                                                "src": "10817:28:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 631,
                                              "name": "IERC721",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 16923,
                                              "src": "10809:7:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC721_$16923_$",
                                                "typeString": "type(contract IERC721)"
                                              }
                                            },
                                            "id": 636,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "10809:37:1",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC721_$16923",
                                              "typeString": "contract IERC721"
                                            }
                                          },
                                          "id": 637,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "transferFrom",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 16888,
                                          "src": "10809:50:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                            "typeString": "function (address,address,uint256) external"
                                          }
                                        },
                                        "id": 650,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "10809:130:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 651,
                                      "nodeType": "ExpressionStatement",
                                      "src": "10809:130:1"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 708,
                                  "name": "callbackArr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 599,
                                  "src": "11487:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_CallbackInfo_$124_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MainnetEscrow.CallbackInfo memory[] memory"
                                  }
                                },
                                "id": 710,
                                "indexExpression": {
                                  "id": 709,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 610,
                                  "src": "11499:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11487:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CallbackInfo_$124_memory_ptr",
                                  "typeString": "struct MainnetEscrow.CallbackInfo memory"
                                }
                              },
                              "id": 711,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "increaseTotalAmountClaimable",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 123,
                              "src": "11487:43:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11533:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "11487:47:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 727,
                          "nodeType": "IfStatement",
                          "src": "11484:181:1",
                          "trueBody": {
                            "id": 726,
                            "nodeType": "Block",
                            "src": "11535:130:1",
                            "statements": [
                              {
                                "expression": {
                                  "id": 724,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "baseExpression": {
                                      "id": 714,
                                      "name": "totalAmountClaimable",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 147,
                                      "src": "11553:20:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 719,
                                    "indexExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 715,
                                          "name": "callbackArr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 599,
                                          "src": "11574:11:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_CallbackInfo_$124_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct MainnetEscrow.CallbackInfo memory[] memory"
                                          }
                                        },
                                        "id": 717,
                                        "indexExpression": {
                                          "id": 716,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 610,
                                          "src": "11586:1:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "11574:14:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_CallbackInfo_$124_memory_ptr",
                                          "typeString": "struct MainnetEscrow.CallbackInfo memory"
                                        }
                                      },
                                      "id": 718,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "assetContract",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 117,
                                      "src": "11574:28:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "11553:50:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "+=",
                                  "rightHandSide": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 720,
                                        "name": "callbackArr",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 599,
                                        "src": "11607:11:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_CallbackInfo_$124_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct MainnetEscrow.CallbackInfo memory[] memory"
                                        }
                                      },
                                      "id": 722,
                                      "indexExpression": {
                                        "id": 721,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 610,
                                        "src": "11619:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "11607:14:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallbackInfo_$124_memory_ptr",
                                        "typeString": "struct MainnetEscrow.CallbackInfo memory"
                                      }
                                    },
                                    "id": 723,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "increaseTotalAmountClaimable",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 123,
                                    "src": "11607:43:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11553:97:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 725,
                                "nodeType": "ExpressionStatement",
                                "src": "11553:97:1"
                              }
                            ]
                          }
                        },
                        {
                          "eventCall": {
                            "arguments": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 729,
                                    "name": "callbackArr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 599,
                                    "src": "11717:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_CallbackInfo_$124_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct MainnetEscrow.CallbackInfo memory[] memory"
                                    }
                                  },
                                  "id": 731,
                                  "indexExpression": {
                                    "id": 730,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 610,
                                    "src": "11729:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11717:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallbackInfo_$124_memory_ptr",
                                    "typeString": "struct MainnetEscrow.CallbackInfo memory"
                                  }
                                },
                                "id": 732,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "receiver",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 115,
                                "src": "11717:23:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 733,
                                    "name": "callbackArr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 599,
                                    "src": "11758:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_CallbackInfo_$124_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct MainnetEscrow.CallbackInfo memory[] memory"
                                    }
                                  },
                                  "id": 735,
                                  "indexExpression": {
                                    "id": 734,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 610,
                                    "src": "11770:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11758:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallbackInfo_$124_memory_ptr",
                                    "typeString": "struct MainnetEscrow.CallbackInfo memory"
                                  }
                                },
                                "id": 736,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "assetContract",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 117,
                                "src": "11758:28:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 737,
                                    "name": "callbackArr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 599,
                                    "src": "11804:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_CallbackInfo_$124_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct MainnetEscrow.CallbackInfo memory[] memory"
                                    }
                                  },
                                  "id": 739,
                                  "indexExpression": {
                                    "id": 738,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 610,
                                    "src": "11816:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11804:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallbackInfo_$124_memory_ptr",
                                    "typeString": "struct MainnetEscrow.CallbackInfo memory"
                                  }
                                },
                                "id": 740,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "isERC721",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 119,
                                "src": "11804:23:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 741,
                                    "name": "callbackArr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 599,
                                    "src": "11845:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_CallbackInfo_$124_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct MainnetEscrow.CallbackInfo memory[] memory"
                                    }
                                  },
                                  "id": 743,
                                  "indexExpression": {
                                    "id": 742,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 610,
                                    "src": "11857:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11845:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallbackInfo_$124_memory_ptr",
                                    "typeString": "struct MainnetEscrow.CallbackInfo memory"
                                  }
                                },
                                "id": 744,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amountOrNftIdToReceiver",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 121,
                                "src": "11845:38:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 745,
                                    "name": "callbackArr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 599,
                                    "src": "11901:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_CallbackInfo_$124_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct MainnetEscrow.CallbackInfo memory[] memory"
                                    }
                                  },
                                  "id": 747,
                                  "indexExpression": {
                                    "id": 746,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 610,
                                    "src": "11913:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11901:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallbackInfo_$124_memory_ptr",
                                    "typeString": "struct MainnetEscrow.CallbackInfo memory"
                                  }
                                },
                                "id": 748,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "increaseTotalAmountClaimable",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 123,
                                "src": "11901:43:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 728,
                              "name": "CallbackReceived",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 207,
                              "src": "11683:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (address,address,bool,uint256,uint256)"
                              }
                            },
                            "id": 749,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11683:275:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 750,
                          "nodeType": "EmitStatement",
                          "src": "11678:280:1"
                        }
                      ]
                    },
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 612,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 610,
                        "src": "10674:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 613,
                        "name": "len",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "10678:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10674:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 752,
                    "initializationExpression": {
                      "assignments": [
                        610
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 610,
                          "mutability": "mutable",
                          "name": "i",
                          "nameLocation": "10671:1:1",
                          "nodeType": "VariableDeclaration",
                          "scope": 752,
                          "src": "10663:9:1",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 609,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "10663:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 611,
                      "nodeType": "VariableDeclarationStatement",
                      "src": "10663:9:1"
                    },
                    "loopExpression": {
                      "expression": {
                        "id": 616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": true,
                        "src": "10683:3:1",
                        "subExpression": {
                          "id": 615,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 610,
                          "src": "10685:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 617,
                      "nodeType": "ExpressionStatement",
                      "src": "10683:3:1"
                    },
                    "nodeType": "ForStatement",
                    "src": "10658:1311:1"
                  }
                ]
              },
              "documentation": {
                "id": 595,
                "nodeType": "StructuredDocumentation",
                "src": "10432:88:1",
                "text": " @notice  Relayer will call this function to send updates from Polygon"
              },
              "functionSelector": "fcc76b80",
              "id": 754,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 602,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 601,
                    "name": "onlyRelayer",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 286,
                    "src": "10594:11:1"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "10594:11:1"
                }
              ],
              "name": "polygonCallback",
              "nameLocation": "10534:15:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 600,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 599,
                    "mutability": "mutable",
                    "name": "callbackArr",
                    "nameLocation": "10572:11:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 754,
                    "src": "10550:33:1",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CallbackInfo_$124_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct MainnetEscrow.CallbackInfo[]"
                    },
                    "typeName": {
                      "baseType": {
                        "id": 597,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 596,
                          "name": "CallbackInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 124,
                          "src": "10550:12:1"
                        },
                        "referencedDeclaration": 124,
                        "src": "10550:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallbackInfo_$124_storage_ptr",
                          "typeString": "struct MainnetEscrow.CallbackInfo"
                        }
                      },
                      "id": 598,
                      "nodeType": "ArrayTypeName",
                      "src": "10550:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_CallbackInfo_$124_storage_$dyn_storage_ptr",
                        "typeString": "struct MainnetEscrow.CallbackInfo[]"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "10549:35:1"
              },
              "returnParameters": {
                "id": 603,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "10606:0:1"
              },
              "scope": 1324,
              "src": "10525:1450:1",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 810,
                "nodeType": "Block",
                "src": "12111:450:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 765,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "12167:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MainnetEscrow_$1324",
                                    "typeString": "contract MainnetEscrow"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MainnetEscrow_$1324",
                                    "typeString": "contract MainnetEscrow"
                                  }
                                ],
                                "id": 764,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12159:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 763,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12159:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12159:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "12159:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 768,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 759,
                            "src": "12184:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12159:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "5f68616e646c6545746865725472616e7366657220696e736f6c76656e74",
                          "id": 770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12193:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_08f09764248301849ca12ec32414900f6808533c90dcec20d40309c3da9b091e",
                            "typeString": "literal_string \"_handleEtherTransfer insolvent\""
                          },
                          "value": "_handleEtherTransfer insolvent"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_08f09764248301849ca12ec32414900f6808533c90dcec20d40309c3da9b091e",
                            "typeString": "literal_string \"_handleEtherTransfer insolvent\""
                          }
                        ],
                        "id": 762,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "12151:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12151:75:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 772,
                    "nodeType": "ExpressionStatement",
                    "src": "12151:75:1"
                  },
                  {
                    "assignments": [
                      774
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 774,
                        "mutability": "mutable",
                        "name": "gas",
                        "nameLocation": "12244:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 810,
                        "src": "12236:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 773,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12236:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 777,
                    "initialValue": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 775,
                        "name": "gasleft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -7,
                        "src": "12251:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12251:9:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12236:24:1"
                  },
                  {
                    "assignments": [
                      779,
                      null
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 779,
                        "mutability": "mutable",
                        "name": "success",
                        "nameLocation": "12276:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 810,
                        "src": "12271:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 778,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "12271:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      null
                    ],
                    "id": 787,
                    "initialValue": {
                      "arguments": [
                        {
                          "hexValue": "",
                          "id": 785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12326:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "expression": {
                            "id": 780,
                            "name": "_dest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 757,
                            "src": "12289:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "call",
                          "nodeType": "MemberAccess",
                          "src": "12289:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                          }
                        },
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "names": [
                          "value",
                          "gas"
                        ],
                        "nodeType": "FunctionCallOptions",
                        "options": [
                          {
                            "id": 782,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 759,
                            "src": "12307:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 783,
                            "name": "gas",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 774,
                            "src": "12321:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "src": "12289:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12289:40:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12270:59:1"
                  },
                  {
                    "condition": {
                      "id": 789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "12426:8:1",
                      "subExpression": {
                        "id": 788,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 779,
                        "src": "12427:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 809,
                    "nodeType": "IfStatement",
                    "src": "12422:133:1",
                    "trueBody": {
                      "id": 808,
                      "nodeType": "Block",
                      "src": "12436:119:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 790,
                                  "name": "WETH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 134,
                                  "src": "12450:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IWETH_$16189",
                                    "typeString": "contract IWETH"
                                  }
                                },
                                "id": 792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "deposit",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 16183,
                                "src": "12450:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 793,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 759,
                                  "src": "12470:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "12450:28:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12450:30:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 796,
                          "nodeType": "ExpressionStatement",
                          "src": "12450:30:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 804,
                                "name": "_dest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 757,
                                "src": "12529:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 805,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 759,
                                "src": "12536:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 800,
                                        "name": "WETH",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 134,
                                        "src": "12509:4:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IWETH_$16189",
                                          "typeString": "contract IWETH"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IWETH_$16189",
                                          "typeString": "contract IWETH"
                                        }
                                      ],
                                      "id": 799,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "12501:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 798,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "12501:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 801,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "12501:13:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 797,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16526,
                                  "src": "12494:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$16526_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 802,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12494:21:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$16526",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "safeTransfer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16558,
                              "src": "12494:34:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16526_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16526_$",
                                "typeString": "function (contract IERC20,address,uint256)"
                              }
                            },
                            "id": 806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12494:50:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 807,
                          "nodeType": "ExpressionStatement",
                          "src": "12494:50:1"
                        }
                      ]
                    }
                  }
                ]
              },
              "documentation": {
                "id": 755,
                "nodeType": "StructuredDocumentation",
                "src": "11981:54:1",
                "text": "  Function to handle Ether transfers"
              },
              "id": 811,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_handleEtherTransfer",
              "nameLocation": "12049:20:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 760,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 757,
                    "mutability": "mutable",
                    "name": "_dest",
                    "nameLocation": "12078:5:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 811,
                    "src": "12070:13:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 756,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "12070:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 759,
                    "mutability": "mutable",
                    "name": "_amount",
                    "nameLocation": "12093:7:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 811,
                    "src": "12085:15:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 758,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12085:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "12069:32:1"
              },
              "returnParameters": {
                "id": 761,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "12111:0:1"
              },
              "scope": 1324,
              "src": "12040:521:1",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 827,
                "nodeType": "Block",
                "src": "12946:65:1",
                "statements": [
                  {
                    "condition": {
                      "id": 819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "12960:9:1",
                      "subExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 817,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16387,
                          "src": "12961:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12961:8:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 823,
                          "name": "_unpause",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16442,
                          "src": "12994:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                            "typeString": "function ()"
                          }
                        },
                        "id": 824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12994:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 825,
                      "nodeType": "ExpressionStatement",
                      "src": "12994:10:1"
                    },
                    "id": 826,
                    "nodeType": "IfStatement",
                    "src": "12956:48:1",
                    "trueBody": {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 820,
                          "name": "_pause",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16426,
                          "src": "12971:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                            "typeString": "function ()"
                          }
                        },
                        "id": 821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12971:8:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 822,
                      "nodeType": "ExpressionStatement",
                      "src": "12971:8:1"
                    }
                  }
                ]
              },
              "documentation": {
                "id": 812,
                "nodeType": "StructuredDocumentation",
                "src": "12818:81:1",
                "text": " @notice  Used to pause/unpause the smart contract by the owner"
              },
              "functionSelector": "c4ae3168",
              "id": 828,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 815,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 814,
                    "name": "onlyOwner",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 16235,
                    "src": "12936:9:1"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "12936:9:1"
                }
              ],
              "name": "togglePause",
              "nameLocation": "12913:11:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 813,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "12924:2:1"
              },
              "returnParameters": {
                "id": 816,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "12946:0:1"
              },
              "scope": 1324,
              "src": "12904:107:1",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 845,
                "nodeType": "Block",
                "src": "13140:83:1",
                "statements": [
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 837,
                          "name": "relayer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 149,
                          "src": "13170:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 838,
                          "name": "_relayer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 831,
                          "src": "13179:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 836,
                        "name": "RelayerUpdated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "13155:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                          "typeString": "function (address,address)"
                        }
                      },
                      "id": 839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13155:33:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 840,
                    "nodeType": "EmitStatement",
                    "src": "13150:38:1"
                  },
                  {
                    "expression": {
                      "id": 843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 841,
                        "name": "relayer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "13198:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 842,
                        "name": "_relayer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "13208:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "13198:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 844,
                    "nodeType": "ExpressionStatement",
                    "src": "13198:18:1"
                  }
                ]
              },
              "documentation": {
                "id": 829,
                "nodeType": "StructuredDocumentation",
                "src": "13017:61:1",
                "text": " @notice  Used to set a new relayer account"
              },
              "functionSelector": "6548e9bc",
              "id": 846,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 834,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 833,
                    "name": "onlyOwner",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 16235,
                    "src": "13130:9:1"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "13130:9:1"
                }
              ],
              "name": "setRelayer",
              "nameLocation": "13092:10:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 832,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 831,
                    "mutability": "mutable",
                    "name": "_relayer",
                    "nameLocation": "13111:8:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 846,
                    "src": "13103:16:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 830,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13103:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "13102:18:1"
              },
              "returnParameters": {
                "id": 835,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "13140:0:1"
              },
              "scope": 1324,
              "src": "13083:140:1",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 868,
                "nodeType": "Block",
                "src": "13375:154:1",
                "statements": [
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 857,
                              "name": "currencyPriceFeed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "13415:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrencyPriceFeed_$92",
                                "typeString": "contract ICurrencyPriceFeed"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ICurrencyPriceFeed_$92",
                                "typeString": "contract ICurrencyPriceFeed"
                              }
                            ],
                            "id": 856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13407:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 855,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13407:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13407:26:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 859,
                          "name": "_currencyPriceFeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 849,
                          "src": "13435:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 854,
                        "name": "PriceFeedUpdated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 219,
                        "src": "13390:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                          "typeString": "function (address,address)"
                        }
                      },
                      "id": 860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13390:64:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 861,
                    "nodeType": "EmitStatement",
                    "src": "13385:69:1"
                  },
                  {
                    "expression": {
                      "id": 866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 862,
                        "name": "currencyPriceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "13464:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICurrencyPriceFeed_$92",
                          "typeString": "contract ICurrencyPriceFeed"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 864,
                            "name": "_currencyPriceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 849,
                            "src": "13503:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 863,
                          "name": "ICurrencyPriceFeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "13484:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICurrencyPriceFeed_$92_$",
                            "typeString": "type(contract ICurrencyPriceFeed)"
                          }
                        },
                        "id": 865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13484:38:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICurrencyPriceFeed_$92",
                          "typeString": "contract ICurrencyPriceFeed"
                        }
                      },
                      "src": "13464:58:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICurrencyPriceFeed_$92",
                        "typeString": "contract ICurrencyPriceFeed"
                      }
                    },
                    "id": 867,
                    "nodeType": "ExpressionStatement",
                    "src": "13464:58:1"
                  }
                ]
              },
              "documentation": {
                "id": 847,
                "nodeType": "StructuredDocumentation",
                "src": "13229:72:1",
                "text": " @notice  Used to set a new CurrencyPriceFeed contract"
              },
              "functionSelector": "724e78da",
              "id": 869,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 852,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 851,
                    "name": "onlyOwner",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 16235,
                    "src": "13365:9:1"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "13365:9:1"
                }
              ],
              "name": "setPriceFeed",
              "nameLocation": "13315:12:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 850,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 849,
                    "mutability": "mutable",
                    "name": "_currencyPriceFeed",
                    "nameLocation": "13336:18:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 869,
                    "src": "13328:26:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 848,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13328:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "13327:28:1"
              },
              "returnParameters": {
                "id": 853,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "13375:0:1"
              },
              "scope": 1324,
              "src": "13306:223:1",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 880,
                "nodeType": "Block",
                "src": "13664:55:1",
                "statements": [
                  {
                    "expression": {
                      "id": 878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 875,
                        "name": "priceFeedsEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 158,
                        "src": "13674:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "13694:18:1",
                        "subExpression": {
                          "id": 876,
                          "name": "priceFeedsEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 158,
                          "src": "13695:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "13674:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 879,
                    "nodeType": "ExpressionStatement",
                    "src": "13674:38:1"
                  }
                ]
              },
              "documentation": {
                "id": 870,
                "nodeType": "StructuredDocumentation",
                "src": "13535:78:1",
                "text": " @notice  Used to enable/disable CurrencyPriceFeeds contract"
              },
              "functionSelector": "c2f90a2b",
              "id": 881,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 873,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 872,
                    "name": "onlyOwner",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 16235,
                    "src": "13654:9:1"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "13654:9:1"
                }
              ],
              "name": "togglePriceFeed",
              "nameLocation": "13627:15:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 871,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "13642:2:1"
              },
              "returnParameters": {
                "id": 874,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "13664:0:1"
              },
              "scope": 1324,
              "src": "13618:101:1",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 898,
                "nodeType": "Block",
                "src": "13850:100:1",
                "statements": [
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 890,
                          "name": "OPENING_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 136,
                          "src": "13883:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 891,
                          "name": "_openingFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 884,
                          "src": "13896:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 889,
                        "name": "OpeningFeeUpdated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 225,
                        "src": "13865:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (uint256,uint256)"
                        }
                      },
                      "id": 892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13865:43:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 893,
                    "nodeType": "EmitStatement",
                    "src": "13860:48:1"
                  },
                  {
                    "expression": {
                      "id": 896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 894,
                        "name": "OPENING_FEE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "13918:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 895,
                        "name": "_openingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 884,
                        "src": "13932:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "13918:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 897,
                    "nodeType": "ExpressionStatement",
                    "src": "13918:25:1"
                  }
                ]
              },
              "documentation": {
                "id": 882,
                "nodeType": "StructuredDocumentation",
                "src": "13725:57:1",
                "text": " @notice  Used to set a new OPENING_FEE"
              },
              "functionSelector": "86375994",
              "id": 899,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 887,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 886,
                    "name": "onlyOwner",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 16235,
                    "src": "13840:9:1"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "13840:9:1"
                }
              ],
              "name": "setOpeningFee",
              "nameLocation": "13796:13:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 885,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 884,
                    "mutability": "mutable",
                    "name": "_openingFee",
                    "nameLocation": "13818:11:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 899,
                    "src": "13810:19:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 883,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13810:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "13809:21:1"
              },
              "returnParameters": {
                "id": 888,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "13850:0:1"
              },
              "scope": 1324,
              "src": "13787:163:1",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 933,
                "nodeType": "Block",
                "src": "14319:325:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "14337:49:1",
                          "subExpression": {
                            "baseExpression": {
                              "id": 910,
                              "name": "whitelistedCurrencies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 128,
                              "src": "14338:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 912,
                            "indexExpression": {
                              "id": 911,
                              "name": "_ERC20TokenAddressPolygon",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 902,
                              "src": "14360:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14338:48:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "546f6b656e20697320616c72656164792077686974656c6973746564",
                          "id": 914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14388:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_e4bc537df57a6469ec8f75da4f5b5b7d3b0db903b261a801ce98ccf8b9d40c42",
                            "typeString": "literal_string \"Token is already whitelisted\""
                          },
                          "value": "Token is already whitelisted"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_e4bc537df57a6469ec8f75da4f5b5b7d3b0db903b261a801ce98ccf8b9d40c42",
                            "typeString": "literal_string \"Token is already whitelisted\""
                          }
                        ],
                        "id": 909,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "14329:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14329:90:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 916,
                    "nodeType": "ExpressionStatement",
                    "src": "14329:90:1"
                  },
                  {
                    "expression": {
                      "id": 921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 917,
                          "name": "whitelistedCurrencies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 128,
                          "src": "14429:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 919,
                        "indexExpression": {
                          "id": 918,
                          "name": "_ERC20TokenAddressPolygon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 902,
                          "src": "14451:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "14429:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "74727565",
                        "id": 920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14480:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "14429:55:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 922,
                    "nodeType": "ExpressionStatement",
                    "src": "14429:55:1"
                  },
                  {
                    "expression": {
                      "id": 927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 923,
                          "name": "polygonTokenToMainnetAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 156,
                          "src": "14494:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 925,
                        "indexExpression": {
                          "id": 924,
                          "name": "_ERC20TokenAddressPolygon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 902,
                          "src": "14523:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "14494:55:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 926,
                        "name": "_ERC20TokenAddressMainnet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 904,
                        "src": "14552:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "14494:83:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 928,
                    "nodeType": "ExpressionStatement",
                    "src": "14494:83:1"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 930,
                          "name": "_ERC20TokenAddressPolygon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 902,
                          "src": "14611:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 929,
                        "name": "ERC20CurrencyAdded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "14592:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address)"
                        }
                      },
                      "id": 931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14592:45:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 932,
                    "nodeType": "EmitStatement",
                    "src": "14587:50:1"
                  }
                ]
              },
              "documentation": {
                "id": 900,
                "nodeType": "StructuredDocumentation",
                "src": "13956:242:1",
                "text": " @notice  Used to whitelist a new ERC20 token to be used as a payment currency\n @param   _ERC20TokenAddressPolygon Address of the token in Polygon\n @param   _ERC20TokenAddressMainnet Address of the token in Mainnet"
              },
              "functionSelector": "34f65fa2",
              "id": 934,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 907,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 906,
                    "name": "onlyOwner",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 16235,
                    "src": "14309:9:1"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "14309:9:1"
                }
              ],
              "name": "whitelistCurrency",
              "nameLocation": "14212:17:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 905,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 902,
                    "mutability": "mutable",
                    "name": "_ERC20TokenAddressPolygon",
                    "nameLocation": "14238:25:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 934,
                    "src": "14230:33:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 901,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "14230:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 904,
                    "mutability": "mutable",
                    "name": "_ERC20TokenAddressMainnet",
                    "nameLocation": "14273:25:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 934,
                    "src": "14265:33:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 903,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "14265:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "14229:70:1"
              },
              "returnParameters": {
                "id": 908,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "14319:0:1"
              },
              "scope": 1324,
              "src": "14203:441:1",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 959,
                "nodeType": "Block",
                "src": "14850:230:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 943,
                            "name": "whitelistedCurrencies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "14868:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 945,
                          "indexExpression": {
                            "id": 944,
                            "name": "_ERC20TokenAddressPolygon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 937,
                            "src": "14890:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14868:48:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "546f6b656e206973206e6f742077686974656c6973746564",
                          "id": 946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14918:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_3395f9809cad89b82f806710991f9dc64a68908febe1bb335ef519bbf0cfcb71",
                            "typeString": "literal_string \"Token is not whitelisted\""
                          },
                          "value": "Token is not whitelisted"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_3395f9809cad89b82f806710991f9dc64a68908febe1bb335ef519bbf0cfcb71",
                            "typeString": "literal_string \"Token is not whitelisted\""
                          }
                        ],
                        "id": 942,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "14860:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14860:85:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 948,
                    "nodeType": "ExpressionStatement",
                    "src": "14860:85:1"
                  },
                  {
                    "expression": {
                      "id": 953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 949,
                          "name": "whitelistedCurrencies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 128,
                          "src": "14955:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 951,
                        "indexExpression": {
                          "id": 950,
                          "name": "_ERC20TokenAddressPolygon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 937,
                          "src": "14977:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "14955:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "66616c7365",
                        "id": 952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15006:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "src": "14955:56:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 954,
                    "nodeType": "ExpressionStatement",
                    "src": "14955:56:1"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 956,
                          "name": "_ERC20TokenAddressPolygon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 937,
                          "src": "15047:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 955,
                        "name": "ERC20CurrencyRemoved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "15026:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address)"
                        }
                      },
                      "id": 957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15026:47:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 958,
                    "nodeType": "EmitStatement",
                    "src": "15021:52:1"
                  }
                ]
              },
              "documentation": {
                "id": 935,
                "nodeType": "StructuredDocumentation",
                "src": "14650:114:1",
                "text": " @notice  Used to blacklist a ERC20 token so it can not be used any longer as a payment currency"
              },
              "functionSelector": "52defbd0",
              "id": 960,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 940,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 939,
                    "name": "onlyOwner",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 16235,
                    "src": "14840:9:1"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "14840:9:1"
                }
              ],
              "name": "blacklistCurrency",
              "nameLocation": "14778:17:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 938,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 937,
                    "mutability": "mutable",
                    "name": "_ERC20TokenAddressPolygon",
                    "nameLocation": "14804:25:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 960,
                    "src": "14796:33:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 936,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "14796:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "14795:35:1"
              },
              "returnParameters": {
                "id": 941,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "14850:0:1"
              },
              "scope": 1324,
              "src": "14769:311:1",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 1054,
                "nodeType": "Block",
                "src": "15486:800:1",
                "statements": [
                  {
                    "assignments": [
                      975
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 975,
                        "mutability": "mutable",
                        "name": "len",
                        "nameLocation": "15504:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1054,
                        "src": "15496:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 974,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15496:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 978,
                    "initialValue": {
                      "expression": {
                        "id": 976,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 964,
                        "src": "15510:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "15510:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15496:34:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 980,
                            "name": "len",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 975,
                            "src": "15548:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 981,
                              "name": "_amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 967,
                              "src": "15555:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "15555:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15548:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "4172726179206c656e6774687320646f206e6f74206d61746368",
                          "id": 984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15572:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c9fda3bf08e7edf126ed19c887ac2339ed77973707baa0165c9c06cf0e4c6eb7",
                            "typeString": "literal_string \"Array lengths do not match\""
                          },
                          "value": "Array lengths do not match"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_c9fda3bf08e7edf126ed19c887ac2339ed77973707baa0165c9c06cf0e4c6eb7",
                            "typeString": "literal_string \"Array lengths do not match\""
                          }
                        ],
                        "id": 979,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "15540:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15540:61:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 986,
                    "nodeType": "ExpressionStatement",
                    "src": "15540:61:1"
                  },
                  {
                    "assignments": [
                      988
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 988,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "15619:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1054,
                        "src": "15611:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 987,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15611:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 989,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15611:14:1"
                  },
                  {
                    "assignments": [
                      991
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 991,
                        "mutability": "mutable",
                        "name": "tokenAddress",
                        "nameLocation": "15643:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1054,
                        "src": "15635:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 990,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15635:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 992,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15635:20:1"
                  },
                  {
                    "body": {
                      "id": 1052,
                      "nodeType": "Block",
                      "src": "15695:585:1",
                      "statements": [
                        {
                          "expression": {
                            "id": 1006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1002,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 991,
                              "src": "15709:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "baseExpression": {
                                "id": 1003,
                                "name": "_tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 964,
                                "src": "15724:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 1005,
                              "indexExpression": {
                                "id": 1004,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 994,
                                "src": "15738:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15724:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "15709:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1007,
                          "nodeType": "ExpressionStatement",
                          "src": "15709:31:1"
                        },
                        {
                          "expression": {
                            "id": 1012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1008,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 988,
                              "src": "15754:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "baseExpression": {
                                "id": 1009,
                                "name": "_amounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 967,
                                "src": "15763:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 1011,
                              "indexExpression": {
                                "id": 1010,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 994,
                                "src": "15772:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15763:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15754:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1013,
                          "nodeType": "ExpressionStatement",
                          "src": "15754:20:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1019,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1015,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 988,
                                  "src": "15796:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "baseExpression": {
                                    "id": 1016,
                                    "name": "totalAmountClaimable",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 147,
                                    "src": "15806:20:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1018,
                                  "indexExpression": {
                                    "id": 1017,
                                    "name": "tokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 991,
                                    "src": "15827:12:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15806:34:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15796:44:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "416d6f756e7420746f6f2068696768",
                                "id": 1020,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15842:17:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_7353a6bd8628dd713e866f78b282b0b6793f273d47e76330330b9a5a159c17ef",
                                  "typeString": "literal_string \"Amount too high\""
                                },
                                "value": "Amount too high"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_7353a6bd8628dd713e866f78b282b0b6793f273d47e76330330b9a5a159c17ef",
                                  "typeString": "literal_string \"Amount too high\""
                                }
                              ],
                              "id": 1014,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "15788:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 1021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15788:72:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1022,
                          "nodeType": "ExpressionStatement",
                          "src": "15788:72:1"
                        },
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1023,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 991,
                              "src": "15877:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1026,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15901:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1025,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15893:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1024,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15893:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15893:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "15877:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 1043,
                            "nodeType": "Block",
                            "src": "15993:85:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1039,
                                      "name": "_receiver",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 969,
                                      "src": "16045:9:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1040,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 988,
                                      "src": "16056:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 1036,
                                          "name": "tokenAddress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 991,
                                          "src": "16018:12:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 1035,
                                        "name": "IERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 16526,
                                        "src": "16011:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20_$16526_$",
                                          "typeString": "type(contract IERC20)"
                                        }
                                      },
                                      "id": 1037,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "16011:20:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$16526",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 1038,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "safeTransfer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 16558,
                                    "src": "16011:33:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16526_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16526_$",
                                      "typeString": "function (contract IERC20,address,uint256)"
                                    }
                                  },
                                  "id": 1041,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16011:52:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 1042,
                                "nodeType": "ExpressionStatement",
                                "src": "16011:52:1"
                              }
                            ]
                          },
                          "id": 1044,
                          "nodeType": "IfStatement",
                          "src": "15874:204:1",
                          "trueBody": {
                            "id": 1034,
                            "nodeType": "Block",
                            "src": "15904:72:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1030,
                                      "name": "_receiver",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 969,
                                      "src": "15943:9:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1031,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 988,
                                      "src": "15954:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1029,
                                    "name": "_handleEtherTransfer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 811,
                                    "src": "15922:20:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                      "typeString": "function (address,uint256)"
                                    }
                                  },
                                  "id": 1032,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15922:39:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 1033,
                                "nodeType": "ExpressionStatement",
                                "src": "15922:39:1"
                              }
                            ]
                          }
                        },
                        {
                          "id": 1051,
                          "nodeType": "UncheckedBlock",
                          "src": "16183:87:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 1049,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1045,
                                    "name": "totalAmountClaimable",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 147,
                                    "src": "16211:20:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1047,
                                  "indexExpression": {
                                    "id": 1046,
                                    "name": "tokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 991,
                                    "src": "16232:12:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16211:34:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 1048,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 988,
                                  "src": "16249:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16211:44:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1050,
                              "nodeType": "ExpressionStatement",
                              "src": "16211:44:1"
                            }
                          ]
                        }
                      ]
                    },
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 996,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "15681:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 997,
                        "name": "len",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 975,
                        "src": "15685:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15681:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1053,
                    "initializationExpression": {
                      "assignments": [
                        994
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 994,
                          "mutability": "mutable",
                          "name": "i",
                          "nameLocation": "15678:1:1",
                          "nodeType": "VariableDeclaration",
                          "scope": 1053,
                          "src": "15670:9:1",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 993,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "15670:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 995,
                      "nodeType": "VariableDeclarationStatement",
                      "src": "15670:9:1"
                    },
                    "loopExpression": {
                      "expression": {
                        "id": 1000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": true,
                        "src": "15690:3:1",
                        "subExpression": {
                          "id": 999,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 994,
                          "src": "15692:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1001,
                      "nodeType": "ExpressionStatement",
                      "src": "15690:3:1"
                    },
                    "nodeType": "ForStatement",
                    "src": "15665:615:1"
                  }
                ]
              },
              "documentation": {
                "id": 961,
                "nodeType": "StructuredDocumentation",
                "src": "15086:272:1",
                "text": " @notice  Used by the contract owners to claim the fees accrued\n @param   _tokenAddress List of tokens to withdraw the fees\n @param   _amounts List of amounts that will be withdrawn\n @param   _receiver Address that will receive the fees"
              },
              "functionSelector": "31f91a84",
              "id": 1055,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 972,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 971,
                    "name": "onlyOwner",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 16235,
                    "src": "15476:9:1"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "15476:9:1"
                }
              ],
              "name": "withdrawFees",
              "nameLocation": "15372:12:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 970,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 964,
                    "mutability": "mutable",
                    "name": "_tokenAddress",
                    "nameLocation": "15404:13:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1055,
                    "src": "15385:32:1",
                    "stateVariable": false,
                    "storageLocation": "calldata",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                      "typeString": "address[]"
                    },
                    "typeName": {
                      "baseType": {
                        "id": 962,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15385:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 963,
                      "nodeType": "ArrayTypeName",
                      "src": "15385:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 967,
                    "mutability": "mutable",
                    "name": "_amounts",
                    "nameLocation": "15438:8:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1055,
                    "src": "15419:27:1",
                    "stateVariable": false,
                    "storageLocation": "calldata",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                      "typeString": "uint256[]"
                    },
                    "typeName": {
                      "baseType": {
                        "id": 965,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15419:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 966,
                      "nodeType": "ArrayTypeName",
                      "src": "15419:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 969,
                    "mutability": "mutable",
                    "name": "_receiver",
                    "nameLocation": "15456:9:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1055,
                    "src": "15448:17:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 968,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "15448:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "15384:82:1"
              },
              "returnParameters": {
                "id": 973,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "15486:0:1"
              },
              "scope": 1324,
              "src": "15363:923:1",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 1067,
                "nodeType": "Block",
                "src": "16621:58:1",
                "statements": [
                  {
                    "expression": {
                      "baseExpression": {
                        "id": 1063,
                        "name": "whitelistedCurrencies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 128,
                        "src": "16638:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1065,
                      "indexExpression": {
                        "id": 1064,
                        "name": "_erc20Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1058,
                        "src": "16660:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "16638:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "functionReturnParameters": 1062,
                    "id": 1066,
                    "nodeType": "Return",
                    "src": "16631:41:1"
                  }
                ]
              },
              "documentation": {
                "id": 1056,
                "nodeType": "StructuredDocumentation",
                "src": "16292:243:1",
                "text": "############################################################################################\n                 VIEW FUNCTIONS\n  ############################################################################################"
              },
              "functionSelector": "43b938c5",
              "id": 1068,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "isCurrencyWhitelisted",
              "nameLocation": "16550:21:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1059,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1058,
                    "mutability": "mutable",
                    "name": "_erc20Token",
                    "nameLocation": "16580:11:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1068,
                    "src": "16572:19:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1057,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "16572:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "16571:21:1"
              },
              "returnParameters": {
                "id": 1062,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1061,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1068,
                    "src": "16615:4:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 1060,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "16615:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "16614:6:1"
              },
              "scope": 1324,
              "src": "16541:138:1",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 1262,
                "nodeType": "Block",
                "src": "16888:1790:1",
                "statements": [
                  {
                    "assignments": [
                      1086
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1086,
                        "mutability": "mutable",
                        "name": "FAIR_RAFFLE_FEE",
                        "nameLocation": "16906:15:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1262,
                        "src": "16898:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1085,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16898:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1087,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "16898:23:1"
                  },
                  {
                    "condition": {
                      "id": 1089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "16935:18:1",
                      "subExpression": {
                        "id": 1088,
                        "name": "priceFeedsEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 158,
                        "src": "16936:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 1258,
                      "nodeType": "Block",
                      "src": "17107:1533:1",
                      "statements": [
                        {
                          "assignments": [
                            1103
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1103,
                              "mutability": "mutable",
                              "name": "totalRaffleValueInUsd",
                              "nameLocation": "17129:21:1",
                              "nodeType": "VariableDeclaration",
                              "scope": 1258,
                              "src": "17121:29:1",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1102,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "17121:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1104,
                          "nodeType": "VariableDeclarationStatement",
                          "src": "17121:29:1"
                        },
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1105,
                              "name": "_tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1070,
                              "src": "17168:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1108,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17193:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1107,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17185:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1106,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17185:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17185:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "17168:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 1153,
                            "nodeType": "Block",
                            "src": "17421:171:1",
                            "statements": [
                              {
                                "expression": {
                                  "id": 1151,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 1134,
                                    "name": "totalRaffleValueInUsd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1103,
                                    "src": "17439:21:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1150,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1140,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "arguments": [
                                              {
                                                "id": 1137,
                                                "name": "_tokenAddress",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1070,
                                                "src": "17501:13:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "expression": {
                                                "id": 1135,
                                                "name": "currencyPriceFeed",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 152,
                                                "src": "17464:17:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_ICurrencyPriceFeed_$92",
                                                  "typeString": "contract ICurrencyPriceFeed"
                                                }
                                              },
                                              "id": 1136,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "getUsdPriceOfToken",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 91,
                                              "src": "17464:36:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                "typeString": "function (address) view external returns (uint256)"
                                              }
                                            },
                                            "id": 1138,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "17464:51:1",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 1139,
                                            "name": "_amount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1072,
                                            "src": "17518:7:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint128",
                                              "typeString": "uint128"
                                            }
                                          },
                                          "src": "17464:61:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 1141,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "17463:63:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1148,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "3130",
                                            "id": 1142,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "17530:2:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10_by_1",
                                              "typeString": "int_const 10"
                                            },
                                            "value": "10"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "**",
                                          "rightExpression": {
                                            "arguments": [],
                                            "expression": {
                                              "argumentTypes": [],
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "id": 1144,
                                                    "name": "_tokenAddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1070,
                                                    "src": "17551:13:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  ],
                                                  "id": 1143,
                                                  "name": "IERC20Extended",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 100,
                                                  "src": "17536:14:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_IERC20Extended_$100_$",
                                                    "typeString": "type(contract IERC20Extended)"
                                                  }
                                                },
                                                "id": 1145,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "17536:29:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IERC20Extended_$100",
                                                  "typeString": "contract IERC20Extended"
                                                }
                                              },
                                              "id": 1146,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "decimals",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 99,
                                              "src": "17536:38:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                                "typeString": "function () view external returns (uint8)"
                                              }
                                            },
                                            "id": 1147,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "17536:40:1",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "17530:46:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 1149,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "17529:48:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "17463:114:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "17439:138:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1152,
                                "nodeType": "ExpressionStatement",
                                "src": "17439:138:1"
                              }
                            ]
                          },
                          "id": 1154,
                          "nodeType": "IfStatement",
                          "src": "17164:428:1",
                          "trueBody": {
                            "id": 1133,
                            "nodeType": "Block",
                            "src": "17196:208:1",
                            "statements": [
                              {
                                "expression": {
                                  "id": 1116,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 1111,
                                    "name": "_tokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1070,
                                    "src": "17214:13:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "arguments": [
                                      {
                                        "id": 1114,
                                        "name": "WETH",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 134,
                                        "src": "17238:4:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IWETH_$16189",
                                          "typeString": "contract IWETH"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IWETH_$16189",
                                          "typeString": "contract IWETH"
                                        }
                                      ],
                                      "id": 1113,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "17230:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1112,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "17230:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1115,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "17230:13:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "17214:29:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1117,
                                "nodeType": "ExpressionStatement",
                                "src": "17214:29:1"
                              },
                              {
                                "expression": {
                                  "id": 1131,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 1118,
                                    "name": "totalRaffleValueInUsd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1103,
                                    "src": "17261:21:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1130,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1124,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "arguments": [
                                              {
                                                "id": 1121,
                                                "name": "_tokenAddress",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1070,
                                                "src": "17323:13:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "expression": {
                                                "id": 1119,
                                                "name": "currencyPriceFeed",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 152,
                                                "src": "17286:17:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_ICurrencyPriceFeed_$92",
                                                  "typeString": "contract ICurrencyPriceFeed"
                                                }
                                              },
                                              "id": 1120,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "getUsdPriceOfToken",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 91,
                                              "src": "17286:36:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                "typeString": "function (address) view external returns (uint256)"
                                              }
                                            },
                                            "id": 1122,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "17286:51:1",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 1123,
                                            "name": "_amount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1072,
                                            "src": "17340:7:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint128",
                                              "typeString": "uint128"
                                            }
                                          },
                                          "src": "17286:61:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 1125,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "17285:63:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                            "typeString": "int_const 1000000000000000000"
                                          },
                                          "id": 1128,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "3130",
                                            "id": 1126,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "17352:2:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10_by_1",
                                              "typeString": "int_const 10"
                                            },
                                            "value": "10"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "**",
                                          "rightExpression": {
                                            "hexValue": "3138",
                                            "id": 1127,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "17358:2:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_18_by_1",
                                              "typeString": "int_const 18"
                                            },
                                            "value": "18"
                                          },
                                          "src": "17352:8:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                            "typeString": "int_const 1000000000000000000"
                                          }
                                        }
                                      ],
                                      "id": 1129,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "17351:10:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                        "typeString": "int_const 1000000000000000000"
                                      }
                                    },
                                    "src": "17285:76:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "17261:100:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1132,
                                "nodeType": "ExpressionStatement",
                                "src": "17261:100:1"
                              }
                            ]
                          }
                        },
                        {
                          "assignments": [
                            1156
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1156,
                              "mutability": "mutable",
                              "name": "totalValueAllTicketsInUsd",
                              "nameLocation": "17613:25:1",
                              "nodeType": "VariableDeclaration",
                              "scope": 1258,
                              "src": "17605:33:1",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1155,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "17605:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1179,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1166,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1164,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1159,
                                            "name": "polygonTokenToMainnetAddress",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 156,
                                            "src": "17679:28:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                              "typeString": "mapping(address => address)"
                                            }
                                          },
                                          "id": 1161,
                                          "indexExpression": {
                                            "id": 1160,
                                            "name": "_currencyInPolygon",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1074,
                                            "src": "17708:18:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "17679:48:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1157,
                                          "name": "currencyPriceFeed",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 152,
                                          "src": "17642:17:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ICurrencyPriceFeed_$92",
                                            "typeString": "contract ICurrencyPriceFeed"
                                          }
                                        },
                                        "id": 1158,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getUsdPriceOfToken",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 91,
                                        "src": "17642:36:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 1162,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "17642:86:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 1163,
                                      "name": "_numberOfTickets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1078,
                                      "src": "17731:16:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "src": "17642:105:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1165,
                                    "name": "_pricePerTicket",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1076,
                                    "src": "17750:15:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "src": "17642:123:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1167,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "17641:125:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1176,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 1168,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17770:2:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "baseExpression": {
                                              "id": 1170,
                                              "name": "polygonTokenToMainnetAddress",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 156,
                                              "src": "17791:28:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                "typeString": "mapping(address => address)"
                                              }
                                            },
                                            "id": 1172,
                                            "indexExpression": {
                                              "id": 1171,
                                              "name": "_currencyInPolygon",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1074,
                                              "src": "17820:18:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "17791:48:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 1169,
                                          "name": "IERC20Extended",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 100,
                                          "src": "17776:14:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC20Extended_$100_$",
                                            "typeString": "type(contract IERC20Extended)"
                                          }
                                        },
                                        "id": 1173,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "17776:64:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20Extended_$100",
                                          "typeString": "contract IERC20Extended"
                                        }
                                      },
                                      "id": 1174,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "decimals",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 99,
                                      "src": "17776:73:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                        "typeString": "function () view external returns (uint8)"
                                      }
                                    },
                                    "id": 1175,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "17776:75:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "src": "17770:81:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1177,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "17769:83:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17641:211:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "17605:247:1"
                        },
                        {
                          "assignments": [
                            1181
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1181,
                              "mutability": "mutable",
                              "name": "ratio",
                              "nameLocation": "17874:5:1",
                              "nodeType": "VariableDeclaration",
                              "scope": 1258,
                              "src": "17866:13:1",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1180,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "17866:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1188,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1184,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1182,
                                    "name": "totalValueAllTicketsInUsd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1156,
                                    "src": "17883:25:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "3130303030",
                                    "id": 1183,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17911:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10000_by_1",
                                      "typeString": "int_const 10000"
                                    },
                                    "value": "10000"
                                  },
                                  "src": "17883:33:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1185,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "17882:35:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 1186,
                              "name": "totalRaffleValueInUsd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1103,
                              "src": "17920:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17882:59:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "17866:75:1"
                        },
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1189,
                              "name": "ratio",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1181,
                              "src": "18026:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "hexValue": "3130303030",
                              "id": 1190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18035:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            },
                            "src": "18026:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1205,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1199,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1197,
                                      "name": "ratio",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1181,
                                      "src": "18116:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "hexValue": "3130303030",
                                      "id": 1198,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "18124:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10000_by_1",
                                        "typeString": "int_const 10000"
                                      },
                                      "value": "10000"
                                    },
                                    "src": "18116:13:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 1200,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "18115:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1203,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1201,
                                      "name": "ratio",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1181,
                                      "src": "18135:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<=",
                                    "rightExpression": {
                                      "hexValue": "3131303030",
                                      "id": 1202,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "18144:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_11000_by_1",
                                        "typeString": "int_const 11000"
                                      },
                                      "value": "11000"
                                    },
                                    "src": "18135:14:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 1204,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "18134:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "18115:35:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1226,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1220,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1218,
                                        "name": "ratio",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1181,
                                        "src": "18301:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "3131303030",
                                        "id": 1219,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "18309:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_11000_by_1",
                                          "typeString": "int_const 11000"
                                        },
                                        "value": "11000"
                                      },
                                      "src": "18301:13:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 1221,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "18300:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1224,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1222,
                                        "name": "ratio",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1181,
                                        "src": "18320:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "hexValue": "3132353030",
                                        "id": 1223,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "18329:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_12500_by_1",
                                          "typeString": "int_const 12500"
                                        },
                                        "value": "12500"
                                      },
                                      "src": "18320:14:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 1225,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "18319:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "18300:35:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1241,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1239,
                                    "name": "ratio",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1181,
                                    "src": "18487:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "3132353030",
                                    "id": 1240,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "18495:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_12500_by_1",
                                      "typeString": "int_const 12500"
                                    },
                                    "value": "12500"
                                  },
                                  "src": "18487:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 1254,
                                "nodeType": "IfStatement",
                                "src": "18483:147:1",
                                "trueBody": {
                                  "id": 1253,
                                  "nodeType": "Block",
                                  "src": "18502:128:1",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 1251,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 1242,
                                          "name": "FAIR_RAFFLE_FEE",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1086,
                                          "src": "18543:15:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          },
                                          "id": 1250,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "components": [
                                              {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint128",
                                                  "typeString": "uint128"
                                                },
                                                "id": 1247,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint128",
                                                    "typeString": "uint128"
                                                  },
                                                  "id": 1245,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 1243,
                                                    "name": "_minimumTicketsSold",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1080,
                                                    "src": "18562:19:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint64",
                                                      "typeString": "uint64"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "*",
                                                  "rightExpression": {
                                                    "id": 1244,
                                                    "name": "_pricePerTicket",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1076,
                                                    "src": "18584:15:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint128",
                                                      "typeString": "uint128"
                                                    }
                                                  },
                                                  "src": "18562:37:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint128",
                                                    "typeString": "uint128"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "*",
                                                "rightExpression": {
                                                  "hexValue": "32303030",
                                                  "id": 1246,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "18602:4:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_2000_by_1",
                                                    "typeString": "int_const 2000"
                                                  },
                                                  "value": "2000"
                                                },
                                                "src": "18562:44:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint128",
                                                  "typeString": "uint128"
                                                }
                                              }
                                            ],
                                            "id": 1248,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "18561:46:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint128",
                                              "typeString": "uint128"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "/",
                                          "rightExpression": {
                                            "hexValue": "3130303030",
                                            "id": 1249,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "18610:5:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10000_by_1",
                                              "typeString": "int_const 10000"
                                            },
                                            "value": "10000"
                                          },
                                          "src": "18561:54:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "src": "18543:72:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1252,
                                      "nodeType": "ExpressionStatement",
                                      "src": "18543:72:1"
                                    }
                                  ]
                                }
                              },
                              "id": 1255,
                              "nodeType": "IfStatement",
                              "src": "18296:334:1",
                              "trueBody": {
                                "id": 1238,
                                "nodeType": "Block",
                                "src": "18337:128:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1236,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1227,
                                        "name": "FAIR_RAFFLE_FEE",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1086,
                                        "src": "18378:15:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        },
                                        "id": 1235,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint128",
                                                "typeString": "uint128"
                                              },
                                              "id": 1232,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint128",
                                                  "typeString": "uint128"
                                                },
                                                "id": 1230,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 1228,
                                                  "name": "_minimumTicketsSold",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1080,
                                                  "src": "18397:19:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint64",
                                                    "typeString": "uint64"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "*",
                                                "rightExpression": {
                                                  "id": 1229,
                                                  "name": "_pricePerTicket",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1076,
                                                  "src": "18419:15:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint128",
                                                    "typeString": "uint128"
                                                  }
                                                },
                                                "src": "18397:37:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint128",
                                                  "typeString": "uint128"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "hexValue": "31303030",
                                                "id": 1231,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "18437:4:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1000_by_1",
                                                  "typeString": "int_const 1000"
                                                },
                                                "value": "1000"
                                              },
                                              "src": "18397:44:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint128",
                                                "typeString": "uint128"
                                              }
                                            }
                                          ],
                                          "id": 1233,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "18396:46:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "3130303030",
                                          "id": 1234,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "18445:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10000_by_1",
                                            "typeString": "int_const 10000"
                                          },
                                          "value": "10000"
                                        },
                                        "src": "18396:54:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      },
                                      "src": "18378:72:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1237,
                                    "nodeType": "ExpressionStatement",
                                    "src": "18378:72:1"
                                  }
                                ]
                              }
                            },
                            "id": 1256,
                            "nodeType": "IfStatement",
                            "src": "18111:519:1",
                            "trueBody": {
                              "id": 1217,
                              "nodeType": "Block",
                              "src": "18152:126:1",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1215,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 1206,
                                      "name": "FAIR_RAFFLE_FEE",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1086,
                                      "src": "18192:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      },
                                      "id": 1214,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint128",
                                              "typeString": "uint128"
                                            },
                                            "id": 1211,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint128",
                                                "typeString": "uint128"
                                              },
                                              "id": 1209,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 1207,
                                                "name": "_minimumTicketsSold",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1080,
                                                "src": "18211:19:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint64",
                                                  "typeString": "uint64"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "id": 1208,
                                                "name": "_pricePerTicket",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1076,
                                                "src": "18233:15:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint128",
                                                  "typeString": "uint128"
                                                }
                                              },
                                              "src": "18211:37:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint128",
                                                "typeString": "uint128"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "hexValue": "353030",
                                              "id": 1210,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "18251:3:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_500_by_1",
                                                "typeString": "int_const 500"
                                              },
                                              "value": "500"
                                            },
                                            "src": "18211:43:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint128",
                                              "typeString": "uint128"
                                            }
                                          }
                                        ],
                                        "id": 1212,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "18210:45:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "hexValue": "3130303030",
                                        "id": 1213,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "18258:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10000_by_1",
                                          "typeString": "int_const 10000"
                                        },
                                        "value": "10000"
                                      },
                                      "src": "18210:53:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "src": "18192:71:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1216,
                                  "nodeType": "ExpressionStatement",
                                  "src": "18192:71:1"
                                }
                              ]
                            }
                          },
                          "id": 1257,
                          "nodeType": "IfStatement",
                          "src": "18022:608:1",
                          "trueBody": {
                            "id": 1196,
                            "nodeType": "Block",
                            "src": "18041:52:1",
                            "statements": [
                              {
                                "expression": {
                                  "id": 1194,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 1192,
                                    "name": "FAIR_RAFFLE_FEE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1086,
                                    "src": "18059:15:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "30",
                                    "id": 1193,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "18077:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "18059:19:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1195,
                                "nodeType": "ExpressionStatement",
                                "src": "18059:19:1"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "id": 1259,
                    "nodeType": "IfStatement",
                    "src": "16931:1709:1",
                    "trueBody": {
                      "id": 1101,
                      "nodeType": "Block",
                      "src": "16954:140:1",
                      "statements": [
                        {
                          "expression": {
                            "id": 1099,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1090,
                              "name": "FAIR_RAFFLE_FEE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1086,
                              "src": "16968:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1095,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      },
                                      "id": 1093,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1091,
                                        "name": "_minimumTicketsSold",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1080,
                                        "src": "16987:19:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 1092,
                                        "name": "_pricePerTicket",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1076,
                                        "src": "17009:15:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      },
                                      "src": "16987:37:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 1094,
                                      "name": "FAIR_RAFFLE_FEE_NUMERATOR",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 139,
                                      "src": "17027:25:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "16987:65:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1096,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "16986:67:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 1097,
                                "name": "FAIR_RAFFLE_FEE_DENOMINATOR",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 142,
                                "src": "17056:27:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "16986:97:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "16968:115:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1100,
                          "nodeType": "ExpressionStatement",
                          "src": "16968:115:1"
                        }
                      ]
                    }
                  },
                  {
                    "expression": {
                      "id": 1260,
                      "name": "FAIR_RAFFLE_FEE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1086,
                      "src": "18656:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 1084,
                    "id": 1261,
                    "nodeType": "Return",
                    "src": "18649:22:1"
                  }
                ]
              },
              "functionSelector": "da653f00",
              "id": 1263,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "fairRaffleFeeERC20",
              "nameLocation": "16694:18:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1081,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1070,
                    "mutability": "mutable",
                    "name": "_tokenAddress",
                    "nameLocation": "16721:13:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1263,
                    "src": "16713:21:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1069,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "16713:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1072,
                    "mutability": "mutable",
                    "name": "_amount",
                    "nameLocation": "16744:7:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1263,
                    "src": "16736:15:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "typeName": {
                      "id": 1071,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "16736:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1074,
                    "mutability": "mutable",
                    "name": "_currencyInPolygon",
                    "nameLocation": "16761:18:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1263,
                    "src": "16753:26:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1073,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "16753:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1076,
                    "mutability": "mutable",
                    "name": "_pricePerTicket",
                    "nameLocation": "16789:15:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1263,
                    "src": "16781:23:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "typeName": {
                      "id": 1075,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "16781:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1078,
                    "mutability": "mutable",
                    "name": "_numberOfTickets",
                    "nameLocation": "16813:16:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1263,
                    "src": "16806:23:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "typeName": {
                      "id": 1077,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "16806:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1080,
                    "mutability": "mutable",
                    "name": "_minimumTicketsSold",
                    "nameLocation": "16838:19:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1263,
                    "src": "16831:26:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "typeName": {
                      "id": 1079,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "16831:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "16712:146:1"
              },
              "returnParameters": {
                "id": 1084,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1083,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1263,
                    "src": "16879:7:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1082,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "16879:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "16878:9:1"
              },
              "scope": 1324,
              "src": "16685:1993:1",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 1322,
                "nodeType": "Block",
                "src": "18823:585:1",
                "statements": [
                  {
                    "assignments": [
                      1275
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1275,
                        "mutability": "mutable",
                        "name": "totalRaffledTicketsValueInUsd",
                        "nameLocation": "18841:29:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1322,
                        "src": "18833:37:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1274,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18833:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1298,
                    "initialValue": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1283,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1278,
                                      "name": "polygonTokenToMainnetAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 156,
                                      "src": "18911:28:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                        "typeString": "mapping(address => address)"
                                      }
                                    },
                                    "id": 1280,
                                    "indexExpression": {
                                      "id": 1279,
                                      "name": "_currencyInPolygon",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1265,
                                      "src": "18940:18:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "18911:48:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1276,
                                    "name": "currencyPriceFeed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 152,
                                    "src": "18874:17:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ICurrencyPriceFeed_$92",
                                      "typeString": "contract ICurrencyPriceFeed"
                                    }
                                  },
                                  "id": 1277,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getUsdPriceOfToken",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 91,
                                  "src": "18874:36:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 1281,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18874:86:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 1282,
                                "name": "_pricePerTicket",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1267,
                                "src": "18963:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "src": "18874:104:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1284,
                              "name": "_minimumTicketsSold",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1269,
                              "src": "18981:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "src": "18874:126:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1286,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "18873:128:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 1287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19005:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 1289,
                                        "name": "polygonTokenToMainnetAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 156,
                                        "src": "19026:28:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                          "typeString": "mapping(address => address)"
                                        }
                                      },
                                      "id": 1291,
                                      "indexExpression": {
                                        "id": 1290,
                                        "name": "_currencyInPolygon",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1265,
                                        "src": "19055:18:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "19026:48:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1288,
                                    "name": "IERC20Extended",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 100,
                                    "src": "19011:14:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20Extended_$100_$",
                                      "typeString": "type(contract IERC20Extended)"
                                    }
                                  },
                                  "id": 1292,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19011:64:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20Extended_$100",
                                    "typeString": "contract IERC20Extended"
                                  }
                                },
                                "id": 1293,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "decimals",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 99,
                                "src": "19011:73:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                  "typeString": "function () view external returns (uint8)"
                                }
                              },
                              "id": 1294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19011:75:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "19005:81:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1296,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "19004:83:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "18873:214:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "18833:254:1"
                  },
                  {
                    "assignments": [
                      1300
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1300,
                        "mutability": "mutable",
                        "name": "FAIR_RAFFLE_FEE_IN_USD",
                        "nameLocation": "19105:22:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1322,
                        "src": "19097:30:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1299,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19097:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1307,
                    "initialValue": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1301,
                              "name": "totalRaffledTicketsValueInUsd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1275,
                              "src": "19131:29:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1302,
                              "name": "FAIR_RAFFLE_FEE_NUMERATOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "19163:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "19131:57:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1304,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "19130:59:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 1305,
                        "name": "FAIR_RAFFLE_FEE_DENOMINATOR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "19192:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "19130:89:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "19097:122:1"
                  },
                  {
                    "assignments": [
                      1309
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1309,
                        "mutability": "mutable",
                        "name": "FAIR_RAFFLE_FEE",
                        "nameLocation": "19237:15:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1322,
                        "src": "19229:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1308,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19229:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1319,
                    "initialValue": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1310,
                              "name": "FAIR_RAFFLE_FEE_IN_USD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1300,
                              "src": "19256:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 1311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19281:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "19256:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1313,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "19255:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
                            "id": 1316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19326:42:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1314,
                            "name": "currencyPriceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 152,
                            "src": "19289:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICurrencyPriceFeed_$92",
                              "typeString": "contract ICurrencyPriceFeed"
                            }
                          },
                          "id": 1315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getUsdPriceOfToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91,
                          "src": "19289:36:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19289:80:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "19255:114:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "19229:140:1"
                  },
                  {
                    "expression": {
                      "id": 1320,
                      "name": "FAIR_RAFFLE_FEE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1309,
                      "src": "19386:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 1273,
                    "id": 1321,
                    "nodeType": "Return",
                    "src": "19379:22:1"
                  }
                ]
              },
              "functionSelector": "744476b6",
              "id": 1323,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "fairRaffleFeeERC721",
              "nameLocation": "18693:19:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1270,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1265,
                    "mutability": "mutable",
                    "name": "_currencyInPolygon",
                    "nameLocation": "18721:18:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1323,
                    "src": "18713:26:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1264,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "18713:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1267,
                    "mutability": "mutable",
                    "name": "_pricePerTicket",
                    "nameLocation": "18749:15:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1323,
                    "src": "18741:23:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "typeName": {
                      "id": 1266,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "18741:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1269,
                    "mutability": "mutable",
                    "name": "_minimumTicketsSold",
                    "nameLocation": "18773:19:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1323,
                    "src": "18766:26:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "typeName": {
                      "id": 1268,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "18766:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "18712:81:1"
              },
              "returnParameters": {
                "id": 1273,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1272,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1323,
                    "src": "18814:7:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1271,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "18814:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "18813:9:1"
              },
              "scope": 1324,
              "src": "18684:724:1",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            }
          ],
          "scope": 1325,
          "src": "1336:18074:1",
          "usedErrors": []
        }
      ],
      "src": "32:19378:1"
    },
    "bytecode": "608060405234801561001057600080fd5b50612ef1806100206000396000f3fe6080604052600436106101b75760003560e01c8063724e78da116100ec578063a21afc761161008a578063c4ae316811610064578063c4ae3168146104e7578063da653f00146104fc578063f2fde38b1461051c578063fcc76b801461053c57600080fd5b8063a21afc7614610492578063b3f8d40d146104bf578063c2f90a2b146104d257600080fd5b80638406c079116100c65780638406c079146103fe578063863759941461041e5780638da5cb5b1461043e57806395e3d9ab1461045c57600080fd5b8063724e78da14610386578063744476b6146103a65780637b631da5146103c657600080fd5b80634e4d58bb116101595780636548e9bc116101335780636548e9bc1461032157806366998e5014610341578063697ca93014610357578063715018a61461037157600080fd5b80634e4d58bb146102d357806352defbd0146102e95780635c975abb1461030957600080fd5b806334f65fa21161019557806334f65fa21461021a578063436cc1381461023a57806343b938c51461027a578063485cc955146102b357600080fd5b806323bbcb29146101bc5780632bf78dd8146101d157806331f91a84146101fa575b600080fd5b6101cf6101ca366004612621565b61055c565b005b3480156101dd57600080fd5b506101e760985481565b6040519081526020015b60405180910390f35b34801561020657600080fd5b506101cf610215366004612700565b610996565b34801561022657600080fd5b506101cf610235366004612783565b610b12565b34801561024657600080fd5b5061026a6102553660046127bc565b60976020526000908152604090205460ff1681565b60405190151581526020016101f1565b34801561028657600080fd5b5061026a6102953660046127bc565b6001600160a01b031660009081526097602052604090205460ff1690565b3480156102bf57600080fd5b506101cf6102ce366004612783565b610bfd565b3480156102df57600080fd5b506101e76101f481565b3480156102f557600080fd5b506101cf6103043660046127bc565b610deb565b34801561031557600080fd5b5060655460ff1661026a565b34801561032d57600080fd5b506101cf61033c3660046127bc565b610eb2565b34801561034d57600080fd5b506101e761271081565b34801561036357600080fd5b50609d5461026a9060ff1681565b34801561037d57600080fd5b506101cf610f23565b34801561039257600080fd5b506101cf6103a13660046127bc565b610f37565b3480156103b257600080fd5b506101e76103c13660046127d9565b610fa8565b3480156103d257600080fd5b50609b546103e6906001600160a01b031681565b6040516001600160a01b0390911681526020016101f1565b34801561040a57600080fd5b50609a546103e6906001600160a01b031681565b34801561042a57600080fd5b506101cf61043936600461281e565b6111ae565b34801561044a57600080fd5b506033546001600160a01b03166103e6565b34801561046857600080fd5b506103e66104773660046127bc565b609c602052600090815260409020546001600160a01b031681565b34801561049e57600080fd5b506101e76104ad3660046127bc565b60996020526000908152604090205481565b6101cf6104cd366004612621565b6111f7565b3480156104de57600080fd5b506101cf6115c9565b3480156104f357600080fd5b506101cf6115e5565b34801561050857600080fd5b506101e7610517366004612837565b611607565b34801561052857600080fd5b506101cf6105373660046127bc565b611a59565b34801561054857600080fd5b506101cf61055736600461292b565b611ad2565b610564611f28565b6040516331a9108f60e11b81526001600160801b03881660048201526001600160a01b03891690636352211e90602401602060405180830381865afa1580156105b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d59190612a2d565b6001600160a01b0316336001600160a01b03161461063a5760405162461bcd60e51b815260206004820152601760248201527f596f7520646f206e6f74206f776e2074686973204e465400000000000000000060448201526064015b60405180910390fd5b6001600160a01b03861660009081526097602052604090205460ff166106a25760405162461bcd60e51b815260206004820181905260248201527f546869732063757272656e6379206973206e6f742077686974656c69737465646044820152606401610631565b6001846001600160401b0316116106cb5760405162461bcd60e51b815260040161063190612a4a565b836001600160401b0316836001600160401b031611156106fd5760405162461bcd60e51b815260040161063190612a8e565b61a8c0826001600160401b031610156107585760405162461bcd60e51b815260206004820152601c60248201527f4d696e696d756d206475726174696f6e20697320313220686f757273000000006044820152606401610631565b6000610765878786610fa8565b9050806098546107759190612af2565b34146107b95760405162461bcd60e51b8152602060048201526013602482015272125b98dbdc9c9958dd081999595cc81cd95b9d606a1b6044820152606401610631565b609854600080805260996020527f235d629dc802037ded8c61cb27fb29e40fa01b299719d8f991ffe20bdcc59f4f80549091906107f7908490612af2565b90915550506040516323b872dd60e01b81523360048201523060248201526001600160801b03891660448201526001600160a01b038a16906323b872dd90606401600060405180830381600087803b15801561085257600080fd5b505af1158015610866573d6000803e3d6000fd5b50506040516331a9108f60e11b81526001600160801b038b1660048201526001600160a01b038c169250636352211e9150602401602060405180830381865afa1580156108b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108db9190612a2d565b6001600160a01b0316306001600160a01b03161461092d5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610631565b7fb26c0bf32d8d3eff0d0561d0b30f4bf8962a18678833b276fcbbe06c48e9eaaa893360008b8b8b8b8b61096a6001600160401b038d1642612af2565b8b8b6040516109839b9a99989796959493929190612b0a565b60405180910390a1505050505050505050565b61099e611f6e565b838281146109ee5760405162461bcd60e51b815260206004820152601a60248201527f4172726179206c656e6774687320646f206e6f74206d617463680000000000006044820152606401610631565b60008060005b83811015610b0757888882818110610a0e57610a0e612bc3565b9050602002016020810190610a2391906127bc565b9150868682818110610a3757610a37612bc3565b90506020020135925060996000836001600160a01b03166001600160a01b0316815260200190815260200160002054831115610aa75760405162461bcd60e51b815260206004820152600f60248201526e082dadeeadce840e8dede40d0d2ced608b1b6044820152606401610631565b6001600160a01b038216610ac457610abf8584611fc8565b610ad8565b610ad86001600160a01b038316868561210c565b6001600160a01b038216600090815260996020526040902080548490039055610b0081612bd9565b90506109f4565b505050505050505050565b610b1a611f6e565b6001600160a01b03821660009081526097602052604090205460ff1615610b835760405162461bcd60e51b815260206004820152601c60248201527f546f6b656e20697320616c72656164792077686974656c6973746564000000006044820152606401610631565b6001600160a01b0382811660008181526097602090815260408083208054600160ff19909116179055609c82529182902080546001600160a01b03191694861694909417909355519081527f5c6cf68a9d7e416d0eee740661627dd794257920f1c63ddae6c6af81d02d12ea910160405180910390a15050565b600054610100900460ff1615808015610c1d5750600054600160ff909116105b80610c375750303b158015610c37575060005460ff166001145b610c9a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610631565b6000805460ff191660011790558015610cbd576000805461ff0019166101001790555b610cc561216f565b610ccd61219e565b609a80546001600160a01b038086166001600160a01b031992831617909255609b805492851692821692909217909155609d805460ff199081166001908117909255737ceb23fd6bc0add59e62ac25578270cff1b9f6196000527f1a0acac70e8cab5a31ac0c028653f1612aec657b1c8333c74eaba0c30e0ee39180549091169091179055609c6020527f54cb885aae8efe3410af7107761edcae51ee12661f9443184b5e9d063ddf7fa5805490911673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2179055666a94d74f4300006098558015610de6576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b610df3611f6e565b6001600160a01b03811660009081526097602052604090205460ff16610e5b5760405162461bcd60e51b815260206004820152601860248201527f546f6b656e206973206e6f742077686974656c697374656400000000000000006044820152606401610631565b6001600160a01b038116600081815260976020908152604091829020805460ff1916905590519182527f0dc0548bc90523a9e943ea77d199875fdc1e4f8a419b6d53a595b5e6671480e5910160405180910390a150565b610eba611f6e565b609a54604080516001600160a01b03928316815291831660208301527f605ca4e43489fb38b91aa63dd9147cd3847957694b080b9285ec898b34269f0c910160405180910390a1609a80546001600160a01b0319166001600160a01b0392909216919091179055565b610f2b611f6e565b610f3560006121cd565b565b610f3f611f6e565b609b54604080516001600160a01b03928316815291831660208301527fa8abe0398416476db5b05737cd4da3b3cbde5012d978a6a6c3fd49d321753536910160405180910390a1609b80546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038084166000908152609c6020908152604080832054815163313ce56760e01b815291519394859491169263313ce56792600480820193918290030181865afa158015611000573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110249190612bf2565b61102f90600a612cfb565b609b546001600160a01b038781166000908152609c60205260409081902054905163a4b943fb60e01b815290821660048201526001600160401b038716926001600160801b03891692169063a4b943fb90602401602060405180830381865afa1580156110a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c49190612d0a565b6110ce9190612d23565b6110d89190612d23565b6110e29190612d58565b905060006127106110f56101f484612d23565b6110ff9190612d58565b609b5460405163a4b943fb60e01b815273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee60048201529192506000916001600160a01b039091169063a4b943fb90602401602060405180830381865afa158015611161573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111859190612d0a565b61119783670de0b6b3a7640000612d23565b6111a19190612d58565b93505050505b9392505050565b6111b6611f6e565b60985460408051918252602082018390527f9dc2340c6769757c8d7dfe3a65a3f1e297ed8f919bed31501223ac8aa85dc63d910160405180910390a1609855565b6111ff611f28565b6001600160a01b03861660009081526097602052604090205460ff166112675760405162461bcd60e51b815260206004820181905260248201527f546869732063757272656e6379206973206e6f742077686974656c69737465646044820152606401610631565b6001846001600160401b0316116112905760405162461bcd60e51b815260040161063190612a4a565b836001600160401b0316836001600160401b031611156112c25760405162461bcd60e51b815260040161063190612a8e565b61a8c0826001600160401b0316101561131d5760405162461bcd60e51b815260206004820152601c60248201527f4d696e696d756d206475726174696f6e20697320313220686f757273000000006044820152606401610631565b600061132d898989898989611607565b90506001600160a01b03891661139b57609854611353906001600160801b038a16612af2565b34146113965760405162461bcd60e51b8152602060048201526012602482015271125b98dbdc9c9958dd08199959481cd95b9d60721b6044820152606401610631565b611548565b60985434146113ec5760405162461bcd60e51b815260206004820152601a60248201527f496e636f7272656374204f50454e494e475f4645452073656e740000000000006044820152606401610631565b6040516370a0823160e01b81523060048201526000906001600160a01b038b16906370a0823190602401602060405180830381865afa158015611433573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114579190612d0a565b90506114776001600160a01b038b1633306001600160801b038d1661221f565b6040516370a0823160e01b81523060048201526000906001600160a01b038c16906370a0823190602401602060405180830381865afa1580156114be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e29190612d0a565b90506114ee8282612d6c565b8a6001600160801b0316146115455760405162461bcd60e51b815260206004820152601b60248201527f455243323020746f6b656e207472616e73666572206661696c656400000000006044820152606401610631565b50505b609854600080805260996020527f235d629dc802037ded8c61cb27fb29e40fa01b299719d8f991ffe20bdcc59f4f8054909190611586908490612af2565b909155507fb26c0bf32d8d3eff0d0561d0b30f4bf8962a18678833b276fcbbe06c48e9eaaa9050893360018b8b8b8b8b61096a6001600160401b038d1642612af2565b6115d1611f6e565b609d805460ff19811660ff90911615179055565b6115ed611f6e565b60655460ff166115ff57610f35612257565b610f356122b1565b609d54600090819060ff16611653576127106101f461162f876001600160401b038716612d83565b6001600160801b03166116429190612d23565b61164c9190612d58565b9050611a4e565b60006001600160a01b03891661171757609b5460405163a4b943fb60e01b815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2600482018190529a50670de0b6b3a7640000916001600160801b038b16916001600160a01b039091169063a4b943fb90602401602060405180830381865afa1580156116d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116fc9190612d0a565b6117069190612d23565b6117109190612d58565b9050611812565b886001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611755573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117799190612bf2565b61178490600a612cfb565b609b5460405163a4b943fb60e01b81526001600160a01b038c811660048301526001600160801b038c1692169063a4b943fb90602401602060405180830381865afa1580156117d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117fb9190612d0a565b6118059190612d23565b61180f9190612d58565b90505b6001600160a01b038088166000908152609c6020908152604080832054815163313ce56760e01b815291519394169263313ce567926004808401939192918290030181865afa158015611869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061188d9190612bf2565b61189890600a612cfb565b609b546001600160a01b038a81166000908152609c60205260409081902054905163a4b943fb60e01b815290821660048201526001600160801b038b16926001600160401b038b1692169063a4b943fb90602401602060405180830381865afa158015611909573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061192d9190612d0a565b6119379190612d23565b6119419190612d23565b61194b9190612d58565b905060008261195c83612710612d23565b6119669190612d58565b9050612710811161197a5760009350611a4a565b6127108111801561198d5750612af88111155b156119ce576127106119a8896001600160401b038916612d83565b6119b4906101f4612d83565b6119be9190612db2565b6001600160801b03169350611a4a565b612af8811180156119e157506130d48111155b15611a08576127106119fc896001600160401b038916612d83565b6119b4906103e8612d83565b6130d4811115611a4a57612710611a28896001600160401b038916612d83565b611a34906107d0612d83565b611a3e9190612db2565b6001600160801b031693505b5050505b979650505050505050565b611a61611f6e565b6001600160a01b038116611ac65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610631565b611acf816121cd565b50565b609a546001600160a01b03163314611b1a5760405162461bcd60e51b815260206004820152600b60248201526a27b7363ca932b630bcb2b960a91b6044820152606401610631565b805160005b81811015610de657828181518110611b3957611b39612bc3565b60200260200101516040015115611c5a5760006001600160a01b0316838281518110611b6757611b67612bc3565b6020026020010151600001516001600160a01b031614611c5557828181518110611b9357611b93612bc3565b6020026020010151602001516001600160a01b03166323b872dd30858481518110611bc057611bc0612bc3565b602002602001015160000151868581518110611bde57611bde612bc3565b6020908102919091010151606001516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015611c3c57600080fd5b505af1158015611c50573d6000803e3d6000fd5b505050505b611d81565b60006001600160a01b0316838281518110611c7757611c77612bc3565b6020026020010151600001516001600160a01b031614611d815760006001600160a01b0316838281518110611cae57611cae612bc3565b6020026020010151602001516001600160a01b031603611d0c57611c55838281518110611cdd57611cdd612bc3565b602002602001015160000151848381518110611cfb57611cfb612bc3565b602002602001015160600151611fc8565b611d81838281518110611d2157611d21612bc3565b602002602001015160000151848381518110611d3f57611d3f612bc3565b602002602001015160600151858481518110611d5d57611d5d612bc3565b6020026020010151602001516001600160a01b031661210c9092919063ffffffff16565b6000838281518110611d9557611d95612bc3565b6020026020010151608001511115611e1c57828181518110611db957611db9612bc3565b60200260200101516080015160996000858481518110611ddb57611ddb612bc3565b6020026020010151602001516001600160a01b03166001600160a01b031681526020019081526020016000206000828254611e169190612af2565b90915550505b7ffdf87137985fce097c2059f7e3bd28b9104995cad66709fdecbaa5e8e48da9af838281518110611e4f57611e4f612bc3565b602002602001015160000151848381518110611e6d57611e6d612bc3565b602002602001015160200151858481518110611e8b57611e8b612bc3565b602002602001015160400151868581518110611ea957611ea9612bc3565b602002602001015160600151878681518110611ec757611ec7612bc3565b602002602001015160800151604051611f109594939291906001600160a01b03958616815293909416602084015290151560408301526060820152608081019190915260a00190565b60405180910390a1611f2181612bd9565b9050611b1f565b60655460ff1615610f355760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610631565b6033546001600160a01b03163314610f355760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610631565b804710156120185760405162461bcd60e51b815260206004820152601e60248201527f5f68616e646c6545746865725472616e7366657220696e736f6c76656e7400006044820152606401610631565b60005a90506000836001600160a01b0316838390604051600060405180830381858888f193505050503d806000811461206d576040519150601f19603f3d011682016040523d82523d6000602084013e612072565b606091505b50509050806121065773c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b1580156120ca57600080fd5b505af11580156120de573d6000803e3d6000fd5b50612106935073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2925087915086905061210c565b50505050565b6040516001600160a01b038316602482015260448101829052610de690849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526122ea565b600054610100900460ff166121965760405162461bcd60e51b815260040161063190612dd8565b610f356123bc565b600054610100900460ff166121c55760405162461bcd60e51b815260040161063190612dd8565b610f356123ec565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526121069085906323b872dd60e01b90608401612138565b61225f611f28565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586122943390565b6040516001600160a01b03909116815260200160405180910390a1565b6122b961241f565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33612294565b600061233f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166124689092919063ffffffff16565b805190915015610de6578080602001905181019061235d9190612e23565b610de65760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610631565b600054610100900460ff166123e35760405162461bcd60e51b815260040161063190612dd8565b610f35336121cd565b600054610100900460ff166124135760405162461bcd60e51b815260040161063190612dd8565b6065805460ff19169055565b60655460ff16610f355760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610631565b6060612477848460008561247f565b949350505050565b6060824710156124e05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610631565b6001600160a01b0385163b6125375760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610631565b600080866001600160a01b031685876040516125539190612e6c565b60006040518083038185875af1925050503d8060008114612590576040519150601f19603f3d011682016040523d82523d6000602084013e612595565b606091505b5091509150611a4e828286606083156125af5750816111a7565b8251156125bf5782518084602001fd5b8160405162461bcd60e51b81526004016106319190612e88565b6001600160a01b0381168114611acf57600080fd5b80356001600160801b038116811461260557600080fd5b919050565b80356001600160401b038116811461260557600080fd5b600080600080600080600080610100898b03121561263e57600080fd5b8835612649816125d9565b975061265760208a016125ee565b96506040890135612667816125d9565b955061267560608a016125ee565b945061268360808a0161260a565b935061269160a08a0161260a565b925061269f60c08a0161260a565b915060e089013590509295985092959890939650565b60008083601f8401126126c757600080fd5b5081356001600160401b038111156126de57600080fd5b6020830191508360208260051b85010111156126f957600080fd5b9250929050565b60008060008060006060868803121561271857600080fd5b85356001600160401b038082111561272f57600080fd5b61273b89838a016126b5565b9097509550602088013591508082111561275457600080fd5b50612761888289016126b5565b9094509250506040860135612775816125d9565b809150509295509295909350565b6000806040838503121561279657600080fd5b82356127a1816125d9565b915060208301356127b1816125d9565b809150509250929050565b6000602082840312156127ce57600080fd5b81356111a7816125d9565b6000806000606084860312156127ee57600080fd5b83356127f9816125d9565b9250612807602085016125ee565b91506128156040850161260a565b90509250925092565b60006020828403121561283057600080fd5b5035919050565b60008060008060008060c0878903121561285057600080fd5b863561285b816125d9565b9550612869602088016125ee565b94506040870135612879816125d9565b9350612887606088016125ee565b92506128956080880161260a565b91506128a360a0880161260a565b90509295509295509295565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b03811182821017156128e7576128e76128af565b60405290565b604051601f8201601f191681016001600160401b0381118282101715612915576129156128af565b604052919050565b8015158114611acf57600080fd5b6000602080838503121561293e57600080fd5b82356001600160401b038082111561295557600080fd5b818501915085601f83011261296957600080fd5b81358181111561297b5761297b6128af565b612989848260051b016128ed565b818152848101925060a09182028401850191888311156129a857600080fd5b938501935b82851015612a215780858a0312156129c55760008081fd5b6129cd6128c5565b85356129d8816125d9565b8152858701356129e7816125d9565b818801526040868101356129fa8161291d565b908201526060868101359082015260808087013590820152845293840193928501926129ad565b50979650505050505050565b600060208284031215612a3f57600080fd5b81516111a7816125d9565b60208082526024908201527f526166666c6573206d7573742068617665206174206c656173742032207469636040820152636b65747360e01b606082015260800190565b6020808252602e908201527f5f6d696e696d756d5469636b657473536f6c642073686f756c64203c3d205f6e60408201526d756d6265724f665469636b65747360901b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008219821115612b0557612b05612adc565b500190565b6001600160a01b038c811682528b166020820152610160810160028b10612b4157634e487b7160e01b600052602160045260246000fd5b8a6040830152612b5c606083018b6001600160801b03169052565b6001600160a01b03891660808301526001600160801b03881660a08301526001600160401b03871660c08301526001600160401b03861660e08301526001600160401b03851661010083015261012082019390935261014001529998505050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201612beb57612beb612adc565b5060010190565b600060208284031215612c0457600080fd5b815160ff811681146111a757600080fd5b600181815b80851115612c50578160001904821115612c3657612c36612adc565b80851615612c4357918102915b93841c9390800290612c1a565b509250929050565b600082612c6757506001612cf5565b81612c7457506000612cf5565b8160018114612c8a5760028114612c9457612cb0565b6001915050612cf5565b60ff841115612ca557612ca5612adc565b50506001821b612cf5565b5060208310610133831016604e8410600b8410161715612cd3575081810a612cf5565b612cdd8383612c15565b8060001904821115612cf157612cf1612adc565b0290505b92915050565b60006111a760ff841683612c58565b600060208284031215612d1c57600080fd5b5051919050565b6000816000190483118215151615612d3d57612d3d612adc565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612d6757612d67612d42565b500490565b600082821015612d7e57612d7e612adc565b500390565b60006001600160801b0380831681851681830481118215151615612da957612da9612adc565b02949350505050565b60006001600160801b0380841680612dcc57612dcc612d42565b92169190910492915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060208284031215612e3557600080fd5b81516111a78161291d565b60005b83811015612e5b578181015183820152602001612e43565b838111156121065750506000910152565b60008251612e7e818460208701612e40565b9190910192915050565b6020815260008251806020840152612ea7816040850160208701612e40565b601f01601f1916919091016040019291505056fea2646970667358221220c5538149a849373bd9f398e368a1fc8665baa9d71db6bb116444ffdf6bafacc564736f6c634300080f0033",
    "bytecodeSha1": "555e719cff894c6cce3f347d171bb836d41495b5",
    "compiler": {
      "evm_version": "istanbul",
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "version": "0.8.15+commit.e14f2714"
    },
    "contractName": "MainnetEscrow",
    "coverageMap": {
      "branches": {
        "1": {
          "MainnetEscrow._handleEtherTransfer": {
            "127": [
              12159,
              12191,
              true
            ],
            "128": [
              12427,
              12434,
              false
            ]
          },
          "MainnetEscrow.blacklistCurrency": {
            "109": [
              14868,
              14916,
              true
            ]
          },
          "MainnetEscrow.createERC20Raffle": {
            "110": [
              8850,
              8891,
              true
            ],
            "111": [
              8946,
              8966,
              true
            ],
            "112": [
              9025,
              9064,
              true
            ],
            "113": [
              9133,
              9160,
              true
            ],
            "114": [
              9372,
              9399,
              false
            ],
            "115": [
              9423,
              9457,
              true
            ],
            "116": [
              9519,
              9543,
              true
            ],
            "117": [
              9898,
              9937,
              true
            ]
          },
          "MainnetEscrow.createERC721Raffle": {
            "98": [
              6100,
              6153,
              true
            ],
            "99": [
              6199,
              6240,
              true
            ],
            "100": [
              6295,
              6315,
              true
            ],
            "101": [
              6374,
              6413,
              true
            ],
            "102": [
              6482,
              6509,
              true
            ],
            "103": [
              6760,
              6804,
              true
            ],
            "104": [
              7034,
              7090,
              true
            ]
          },
          "MainnetEscrow.fairRaffleFeeERC20": {
            "118": [
              16936,
              16953,
              false
            ],
            "119": [
              17168,
              17195,
              false
            ],
            "120": [
              18026,
              18040,
              false
            ],
            "121": [
              18487,
              18500,
              false
            ]
          },
          "MainnetEscrow.polygonCallback": {
            "122": [
              10704,
              10727,
              false
            ],
            "123": [
              10749,
              10786,
              false
            ],
            "124": [
              11010,
              11047,
              false
            ],
            "125": [
              11073,
              11115,
              false
            ],
            "126": [
              11487,
              11534,
              false
            ]
          },
          "MainnetEscrow.whitelistCurrency": {
            "108": [
              14337,
              14386,
              true
            ]
          },
          "MainnetEscrow.withdrawFees": {
            "105": [
              15548,
              15570,
              true
            ],
            "106": [
              15796,
              15840,
              true
            ],
            "107": [
              15877,
              15903,
              false
            ]
          }
        },
        "26": {
          "OwnableUpgradeable._checkOwner": {
            "134": [
              1662,
              1685,
              true
            ]
          },
          "OwnableUpgradeable.transferOwnership": {
            "133": [
              2409,
              2431,
              true
            ]
          }
        },
        "27": {
          "PausableUpgradeable.__Pausable_init_unchained": {
            "132": [
              4910,
              4923,
              true
            ]
          }
        },
        "28": {
          "PausableUpgradeable._requireNotPaused": {
            "135": [
              2079,
              2088,
              true
            ]
          }
        },
        "31": {},
        "34": {},
        "36": {},
        "37": {
          "SafeERC20._callOptionalReturn": {
            "136": [
              4275,
              4296,
              false
            ],
            "137": [
              4359,
              4389,
              true
            ]
          }
        },
        "39": {},
        "4": {},
        "42": {
          "Address.functionCallWithValue": {
            "129": [
              5145,
              5175,
              true
            ]
          },
          "Address.verifyCallResult": {
            "130": [
              7735,
              7742,
              false
            ],
            "131": [
              7876,
              7897,
              false
            ]
          }
        }
      },
      "statements": {
        "1": {
          "MainnetEscrow._handleEtherTransfer": {
            "75": [
              12151,
              12226
            ],
            "76": [
              12450,
              12480
            ],
            "77": [
              12494,
              12544
            ]
          },
          "MainnetEscrow.blacklistCurrency": {
            "33": [
              14860,
              14945
            ],
            "34": [
              14955,
              15011
            ],
            "35": [
              15021,
              15073
            ]
          },
          "MainnetEscrow.createERC20Raffle": {
            "43": [
              8842,
              8928
            ],
            "44": [
              8938,
              9007
            ],
            "45": [
              9017,
              9115
            ],
            "46": [
              9125,
              9193
            ],
            "47": [
              9415,
              9480
            ],
            "48": [
              9511,
              9574
            ],
            "49": [
              9719,
              9793
            ],
            "50": [
              9890,
              9969
            ],
            "51": [
              9990,
              10037
            ],
            "52": [
              10047,
              10419
            ]
          },
          "MainnetEscrow.createERC721Raffle": {
            "3": [
              6092,
              6181
            ],
            "4": [
              6191,
              6277
            ],
            "5": [
              6287,
              6356
            ],
            "6": [
              6366,
              6464
            ],
            "7": [
              6474,
              6542
            ],
            "8": [
              6752,
              6828
            ],
            "9": [
              6838,
              6885
            ],
            "10": [
              6945,
              7016
            ],
            "11": [
              7026,
              7110
            ],
            "12": [
              7121,
              7494
            ]
          },
          "MainnetEscrow.fairRaffleFeeERC20": {
            "56": [
              16968,
              17083
            ],
            "57": [
              17261,
              17361
            ],
            "58": [
              17439,
              17577
            ],
            "59": [
              18059,
              18078
            ],
            "60": [
              18192,
              18263
            ],
            "61": [
              18378,
              18450
            ],
            "62": [
              18543,
              18615
            ],
            "63": [
              18649,
              18671
            ]
          },
          "MainnetEscrow.initialize": {
            "25": [
              4218,
              4234
            ],
            "26": [
              4244,
              4261
            ],
            "27": [
              4272,
              4290
            ],
            "28": [
              4300,
              4358
            ],
            "29": [
              4368,
              4392
            ],
            "30": [
              4437,
              4509
            ],
            "31": [
              4559,
              4647
            ],
            "32": [
              4657,
              4681
            ]
          },
          "MainnetEscrow.isCurrencyWhitelisted": {
            "0": [
              16631,
              16672
            ]
          },
          "MainnetEscrow.polygonCallback": {
            "66": [
              10809,
              10939
            ],
            "67": [
              11142,
              11227
            ],
            "68": [
              11302,
              11416
            ],
            "69": [
              11553,
              11650
            ],
            "70": [
              11678,
              11958
            ],
            "71": [
              10683,
              10686
            ]
          },
          "MainnetEscrow.setOpeningFee": {
            "41": [
              13860,
              13908
            ],
            "42": [
              13918,
              13943
            ]
          },
          "MainnetEscrow.setPriceFeed": {
            "39": [
              13385,
              13454
            ],
            "40": [
              13464,
              13522
            ]
          },
          "MainnetEscrow.setRelayer": {
            "36": [
              13150,
              13188
            ],
            "37": [
              13198,
              13216
            ]
          },
          "MainnetEscrow.togglePause": {
            "54": [
              12971,
              12979
            ],
            "55": [
              12994,
              13004
            ]
          },
          "MainnetEscrow.togglePriceFeed": {
            "53": [
              13674,
              13712
            ]
          },
          "MainnetEscrow.whitelistCurrency": {
            "21": [
              14329,
              14419
            ],
            "22": [
              14429,
              14484
            ],
            "23": [
              14494,
              14577
            ],
            "24": [
              14587,
              14637
            ]
          },
          "MainnetEscrow.withdrawFees": {
            "13": [
              15540,
              15601
            ],
            "14": [
              15709,
              15740
            ],
            "15": [
              15754,
              15774
            ],
            "16": [
              15788,
              15860
            ],
            "17": [
              15922,
              15961
            ],
            "18": [
              16011,
              16063
            ],
            "19": [
              16211,
              16255
            ],
            "20": [
              15690,
              15693
            ]
          }
        },
        "26": {
          "OwnableUpgradeable.__Ownable_init": {
            "79": [
              1065,
              1091
            ]
          },
          "OwnableUpgradeable.__Ownable_init_unchained": {
            "89": [
              1176,
              1208
            ]
          },
          "OwnableUpgradeable._checkOwner": {
            "74": [
              1654,
              1722
            ]
          },
          "OwnableUpgradeable._transferOwnership": {
            "81": [
              2781,
              2798
            ],
            "82": [
              2808,
              2853
            ]
          },
          "OwnableUpgradeable.owner": {
            "2": [
              1506,
              1519
            ]
          },
          "OwnableUpgradeable.renounceOwnership": {
            "38": [
              2135,
              2165
            ]
          },
          "OwnableUpgradeable.transferOwnership": {
            "64": [
              2401,
              2474
            ],
            "65": [
              2484,
              2512
            ]
          }
        },
        "27": {},
        "28": {
          "PausableUpgradeable.__Pausable_init": {
            "80": [
              1126,
              1153
            ]
          },
          "PausableUpgradeable.__Pausable_init_unchained": {
            "90": [
              1239,
              1254
            ]
          },
          "PausableUpgradeable._pause": {
            "84": [
              2488,
              2502
            ],
            "85": [
              2512,
              2537
            ]
          },
          "PausableUpgradeable._requireNotPaused": {
            "72": [
              2071,
              2109
            ]
          },
          "PausableUpgradeable._requirePaused": {
            "91": [
              2246,
              2287
            ]
          },
          "PausableUpgradeable._unpause": {
            "86": [
              2734,
              2749
            ],
            "87": [
              2759,
              2786
            ]
          },
          "PausableUpgradeable.paused": {
            "1": [
              1921,
              1935
            ]
          }
        },
        "31": {
          "ContextUpgradeable._msgSender": {
            "73": [
              922,
              939
            ]
          }
        },
        "34": {},
        "36": {},
        "37": {
          "SafeERC20._callOptionalReturn": {
            "88": [
              4351,
              4436
            ]
          },
          "SafeERC20.safeTransfer": {
            "78": [
              875,
              961
            ]
          },
          "SafeERC20.safeTransferFrom": {
            "83": [
              1112,
              1208
            ]
          }
        },
        "39": {},
        "4": {},
        "42": {
          "Address.functionCall": {
            "92": [
              4018,
              4077
            ]
          },
          "Address.functionCallWithValue": {
            "93": [
              5137,
              5218
            ],
            "94": [
              5228,
              5288
            ],
            "95": [
              5382,
              5440
            ]
          },
          "Address.verifyCallResult": {
            "96": [
              7758,
              7775
            ],
            "97": [
              8252,
              8272
            ]
          }
        }
      }
    },
    "dependencies": [
      "Address",
      "ContextUpgradeable",
      "ICurrencyPriceFeed",
      "IERC20",
      "IERC20Extended",
      "IERC20Permit",
      "IERC721",
      "IWETH",
      "Initializable",
      "OwnableUpgradeable",
      "PausableUpgradeable",
      "SafeERC20"
    ],
    "deployedBytecode": "6080604052600436106101b75760003560e01c8063724e78da116100ec578063a21afc761161008a578063c4ae316811610064578063c4ae3168146104e7578063da653f00146104fc578063f2fde38b1461051c578063fcc76b801461053c57600080fd5b8063a21afc7614610492578063b3f8d40d146104bf578063c2f90a2b146104d257600080fd5b80638406c079116100c65780638406c079146103fe578063863759941461041e5780638da5cb5b1461043e57806395e3d9ab1461045c57600080fd5b8063724e78da14610386578063744476b6146103a65780637b631da5146103c657600080fd5b80634e4d58bb116101595780636548e9bc116101335780636548e9bc1461032157806366998e5014610341578063697ca93014610357578063715018a61461037157600080fd5b80634e4d58bb146102d357806352defbd0146102e95780635c975abb1461030957600080fd5b806334f65fa21161019557806334f65fa21461021a578063436cc1381461023a57806343b938c51461027a578063485cc955146102b357600080fd5b806323bbcb29146101bc5780632bf78dd8146101d157806331f91a84146101fa575b600080fd5b6101cf6101ca366004612621565b61055c565b005b3480156101dd57600080fd5b506101e760985481565b6040519081526020015b60405180910390f35b34801561020657600080fd5b506101cf610215366004612700565b610996565b34801561022657600080fd5b506101cf610235366004612783565b610b12565b34801561024657600080fd5b5061026a6102553660046127bc565b60976020526000908152604090205460ff1681565b60405190151581526020016101f1565b34801561028657600080fd5b5061026a6102953660046127bc565b6001600160a01b031660009081526097602052604090205460ff1690565b3480156102bf57600080fd5b506101cf6102ce366004612783565b610bfd565b3480156102df57600080fd5b506101e76101f481565b3480156102f557600080fd5b506101cf6103043660046127bc565b610deb565b34801561031557600080fd5b5060655460ff1661026a565b34801561032d57600080fd5b506101cf61033c3660046127bc565b610eb2565b34801561034d57600080fd5b506101e761271081565b34801561036357600080fd5b50609d5461026a9060ff1681565b34801561037d57600080fd5b506101cf610f23565b34801561039257600080fd5b506101cf6103a13660046127bc565b610f37565b3480156103b257600080fd5b506101e76103c13660046127d9565b610fa8565b3480156103d257600080fd5b50609b546103e6906001600160a01b031681565b6040516001600160a01b0390911681526020016101f1565b34801561040a57600080fd5b50609a546103e6906001600160a01b031681565b34801561042a57600080fd5b506101cf61043936600461281e565b6111ae565b34801561044a57600080fd5b506033546001600160a01b03166103e6565b34801561046857600080fd5b506103e66104773660046127bc565b609c602052600090815260409020546001600160a01b031681565b34801561049e57600080fd5b506101e76104ad3660046127bc565b60996020526000908152604090205481565b6101cf6104cd366004612621565b6111f7565b3480156104de57600080fd5b506101cf6115c9565b3480156104f357600080fd5b506101cf6115e5565b34801561050857600080fd5b506101e7610517366004612837565b611607565b34801561052857600080fd5b506101cf6105373660046127bc565b611a59565b34801561054857600080fd5b506101cf61055736600461292b565b611ad2565b610564611f28565b6040516331a9108f60e11b81526001600160801b03881660048201526001600160a01b03891690636352211e90602401602060405180830381865afa1580156105b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d59190612a2d565b6001600160a01b0316336001600160a01b03161461063a5760405162461bcd60e51b815260206004820152601760248201527f596f7520646f206e6f74206f776e2074686973204e465400000000000000000060448201526064015b60405180910390fd5b6001600160a01b03861660009081526097602052604090205460ff166106a25760405162461bcd60e51b815260206004820181905260248201527f546869732063757272656e6379206973206e6f742077686974656c69737465646044820152606401610631565b6001846001600160401b0316116106cb5760405162461bcd60e51b815260040161063190612a4a565b836001600160401b0316836001600160401b031611156106fd5760405162461bcd60e51b815260040161063190612a8e565b61a8c0826001600160401b031610156107585760405162461bcd60e51b815260206004820152601c60248201527f4d696e696d756d206475726174696f6e20697320313220686f757273000000006044820152606401610631565b6000610765878786610fa8565b9050806098546107759190612af2565b34146107b95760405162461bcd60e51b8152602060048201526013602482015272125b98dbdc9c9958dd081999595cc81cd95b9d606a1b6044820152606401610631565b609854600080805260996020527f235d629dc802037ded8c61cb27fb29e40fa01b299719d8f991ffe20bdcc59f4f80549091906107f7908490612af2565b90915550506040516323b872dd60e01b81523360048201523060248201526001600160801b03891660448201526001600160a01b038a16906323b872dd90606401600060405180830381600087803b15801561085257600080fd5b505af1158015610866573d6000803e3d6000fd5b50506040516331a9108f60e11b81526001600160801b038b1660048201526001600160a01b038c169250636352211e9150602401602060405180830381865afa1580156108b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108db9190612a2d565b6001600160a01b0316306001600160a01b03161461092d5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610631565b7fb26c0bf32d8d3eff0d0561d0b30f4bf8962a18678833b276fcbbe06c48e9eaaa893360008b8b8b8b8b61096a6001600160401b038d1642612af2565b8b8b6040516109839b9a99989796959493929190612b0a565b60405180910390a1505050505050505050565b61099e611f6e565b838281146109ee5760405162461bcd60e51b815260206004820152601a60248201527f4172726179206c656e6774687320646f206e6f74206d617463680000000000006044820152606401610631565b60008060005b83811015610b0757888882818110610a0e57610a0e612bc3565b9050602002016020810190610a2391906127bc565b9150868682818110610a3757610a37612bc3565b90506020020135925060996000836001600160a01b03166001600160a01b0316815260200190815260200160002054831115610aa75760405162461bcd60e51b815260206004820152600f60248201526e082dadeeadce840e8dede40d0d2ced608b1b6044820152606401610631565b6001600160a01b038216610ac457610abf8584611fc8565b610ad8565b610ad86001600160a01b038316868561210c565b6001600160a01b038216600090815260996020526040902080548490039055610b0081612bd9565b90506109f4565b505050505050505050565b610b1a611f6e565b6001600160a01b03821660009081526097602052604090205460ff1615610b835760405162461bcd60e51b815260206004820152601c60248201527f546f6b656e20697320616c72656164792077686974656c6973746564000000006044820152606401610631565b6001600160a01b0382811660008181526097602090815260408083208054600160ff19909116179055609c82529182902080546001600160a01b03191694861694909417909355519081527f5c6cf68a9d7e416d0eee740661627dd794257920f1c63ddae6c6af81d02d12ea910160405180910390a15050565b600054610100900460ff1615808015610c1d5750600054600160ff909116105b80610c375750303b158015610c37575060005460ff166001145b610c9a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610631565b6000805460ff191660011790558015610cbd576000805461ff0019166101001790555b610cc561216f565b610ccd61219e565b609a80546001600160a01b038086166001600160a01b031992831617909255609b805492851692821692909217909155609d805460ff199081166001908117909255737ceb23fd6bc0add59e62ac25578270cff1b9f6196000527f1a0acac70e8cab5a31ac0c028653f1612aec657b1c8333c74eaba0c30e0ee39180549091169091179055609c6020527f54cb885aae8efe3410af7107761edcae51ee12661f9443184b5e9d063ddf7fa5805490911673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2179055666a94d74f4300006098558015610de6576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b610df3611f6e565b6001600160a01b03811660009081526097602052604090205460ff16610e5b5760405162461bcd60e51b815260206004820152601860248201527f546f6b656e206973206e6f742077686974656c697374656400000000000000006044820152606401610631565b6001600160a01b038116600081815260976020908152604091829020805460ff1916905590519182527f0dc0548bc90523a9e943ea77d199875fdc1e4f8a419b6d53a595b5e6671480e5910160405180910390a150565b610eba611f6e565b609a54604080516001600160a01b03928316815291831660208301527f605ca4e43489fb38b91aa63dd9147cd3847957694b080b9285ec898b34269f0c910160405180910390a1609a80546001600160a01b0319166001600160a01b0392909216919091179055565b610f2b611f6e565b610f3560006121cd565b565b610f3f611f6e565b609b54604080516001600160a01b03928316815291831660208301527fa8abe0398416476db5b05737cd4da3b3cbde5012d978a6a6c3fd49d321753536910160405180910390a1609b80546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038084166000908152609c6020908152604080832054815163313ce56760e01b815291519394859491169263313ce56792600480820193918290030181865afa158015611000573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110249190612bf2565b61102f90600a612cfb565b609b546001600160a01b038781166000908152609c60205260409081902054905163a4b943fb60e01b815290821660048201526001600160401b038716926001600160801b03891692169063a4b943fb90602401602060405180830381865afa1580156110a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c49190612d0a565b6110ce9190612d23565b6110d89190612d23565b6110e29190612d58565b905060006127106110f56101f484612d23565b6110ff9190612d58565b609b5460405163a4b943fb60e01b815273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee60048201529192506000916001600160a01b039091169063a4b943fb90602401602060405180830381865afa158015611161573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111859190612d0a565b61119783670de0b6b3a7640000612d23565b6111a19190612d58565b93505050505b9392505050565b6111b6611f6e565b60985460408051918252602082018390527f9dc2340c6769757c8d7dfe3a65a3f1e297ed8f919bed31501223ac8aa85dc63d910160405180910390a1609855565b6111ff611f28565b6001600160a01b03861660009081526097602052604090205460ff166112675760405162461bcd60e51b815260206004820181905260248201527f546869732063757272656e6379206973206e6f742077686974656c69737465646044820152606401610631565b6001846001600160401b0316116112905760405162461bcd60e51b815260040161063190612a4a565b836001600160401b0316836001600160401b031611156112c25760405162461bcd60e51b815260040161063190612a8e565b61a8c0826001600160401b0316101561131d5760405162461bcd60e51b815260206004820152601c60248201527f4d696e696d756d206475726174696f6e20697320313220686f757273000000006044820152606401610631565b600061132d898989898989611607565b90506001600160a01b03891661139b57609854611353906001600160801b038a16612af2565b34146113965760405162461bcd60e51b8152602060048201526012602482015271125b98dbdc9c9958dd08199959481cd95b9d60721b6044820152606401610631565b611548565b60985434146113ec5760405162461bcd60e51b815260206004820152601a60248201527f496e636f7272656374204f50454e494e475f4645452073656e740000000000006044820152606401610631565b6040516370a0823160e01b81523060048201526000906001600160a01b038b16906370a0823190602401602060405180830381865afa158015611433573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114579190612d0a565b90506114776001600160a01b038b1633306001600160801b038d1661221f565b6040516370a0823160e01b81523060048201526000906001600160a01b038c16906370a0823190602401602060405180830381865afa1580156114be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e29190612d0a565b90506114ee8282612d6c565b8a6001600160801b0316146115455760405162461bcd60e51b815260206004820152601b60248201527f455243323020746f6b656e207472616e73666572206661696c656400000000006044820152606401610631565b50505b609854600080805260996020527f235d629dc802037ded8c61cb27fb29e40fa01b299719d8f991ffe20bdcc59f4f8054909190611586908490612af2565b909155507fb26c0bf32d8d3eff0d0561d0b30f4bf8962a18678833b276fcbbe06c48e9eaaa9050893360018b8b8b8b8b61096a6001600160401b038d1642612af2565b6115d1611f6e565b609d805460ff19811660ff90911615179055565b6115ed611f6e565b60655460ff166115ff57610f35612257565b610f356122b1565b609d54600090819060ff16611653576127106101f461162f876001600160401b038716612d83565b6001600160801b03166116429190612d23565b61164c9190612d58565b9050611a4e565b60006001600160a01b03891661171757609b5460405163a4b943fb60e01b815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2600482018190529a50670de0b6b3a7640000916001600160801b038b16916001600160a01b039091169063a4b943fb90602401602060405180830381865afa1580156116d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116fc9190612d0a565b6117069190612d23565b6117109190612d58565b9050611812565b886001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611755573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117799190612bf2565b61178490600a612cfb565b609b5460405163a4b943fb60e01b81526001600160a01b038c811660048301526001600160801b038c1692169063a4b943fb90602401602060405180830381865afa1580156117d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117fb9190612d0a565b6118059190612d23565b61180f9190612d58565b90505b6001600160a01b038088166000908152609c6020908152604080832054815163313ce56760e01b815291519394169263313ce567926004808401939192918290030181865afa158015611869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061188d9190612bf2565b61189890600a612cfb565b609b546001600160a01b038a81166000908152609c60205260409081902054905163a4b943fb60e01b815290821660048201526001600160801b038b16926001600160401b038b1692169063a4b943fb90602401602060405180830381865afa158015611909573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061192d9190612d0a565b6119379190612d23565b6119419190612d23565b61194b9190612d58565b905060008261195c83612710612d23565b6119669190612d58565b9050612710811161197a5760009350611a4a565b6127108111801561198d5750612af88111155b156119ce576127106119a8896001600160401b038916612d83565b6119b4906101f4612d83565b6119be9190612db2565b6001600160801b03169350611a4a565b612af8811180156119e157506130d48111155b15611a08576127106119fc896001600160401b038916612d83565b6119b4906103e8612d83565b6130d4811115611a4a57612710611a28896001600160401b038916612d83565b611a34906107d0612d83565b611a3e9190612db2565b6001600160801b031693505b5050505b979650505050505050565b611a61611f6e565b6001600160a01b038116611ac65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610631565b611acf816121cd565b50565b609a546001600160a01b03163314611b1a5760405162461bcd60e51b815260206004820152600b60248201526a27b7363ca932b630bcb2b960a91b6044820152606401610631565b805160005b81811015610de657828181518110611b3957611b39612bc3565b60200260200101516040015115611c5a5760006001600160a01b0316838281518110611b6757611b67612bc3565b6020026020010151600001516001600160a01b031614611c5557828181518110611b9357611b93612bc3565b6020026020010151602001516001600160a01b03166323b872dd30858481518110611bc057611bc0612bc3565b602002602001015160000151868581518110611bde57611bde612bc3565b6020908102919091010151606001516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015611c3c57600080fd5b505af1158015611c50573d6000803e3d6000fd5b505050505b611d81565b60006001600160a01b0316838281518110611c7757611c77612bc3565b6020026020010151600001516001600160a01b031614611d815760006001600160a01b0316838281518110611cae57611cae612bc3565b6020026020010151602001516001600160a01b031603611d0c57611c55838281518110611cdd57611cdd612bc3565b602002602001015160000151848381518110611cfb57611cfb612bc3565b602002602001015160600151611fc8565b611d81838281518110611d2157611d21612bc3565b602002602001015160000151848381518110611d3f57611d3f612bc3565b602002602001015160600151858481518110611d5d57611d5d612bc3565b6020026020010151602001516001600160a01b031661210c9092919063ffffffff16565b6000838281518110611d9557611d95612bc3565b6020026020010151608001511115611e1c57828181518110611db957611db9612bc3565b60200260200101516080015160996000858481518110611ddb57611ddb612bc3565b6020026020010151602001516001600160a01b03166001600160a01b031681526020019081526020016000206000828254611e169190612af2565b90915550505b7ffdf87137985fce097c2059f7e3bd28b9104995cad66709fdecbaa5e8e48da9af838281518110611e4f57611e4f612bc3565b602002602001015160000151848381518110611e6d57611e6d612bc3565b602002602001015160200151858481518110611e8b57611e8b612bc3565b602002602001015160400151868581518110611ea957611ea9612bc3565b602002602001015160600151878681518110611ec757611ec7612bc3565b602002602001015160800151604051611f109594939291906001600160a01b03958616815293909416602084015290151560408301526060820152608081019190915260a00190565b60405180910390a1611f2181612bd9565b9050611b1f565b60655460ff1615610f355760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610631565b6033546001600160a01b03163314610f355760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610631565b804710156120185760405162461bcd60e51b815260206004820152601e60248201527f5f68616e646c6545746865725472616e7366657220696e736f6c76656e7400006044820152606401610631565b60005a90506000836001600160a01b0316838390604051600060405180830381858888f193505050503d806000811461206d576040519150601f19603f3d011682016040523d82523d6000602084013e612072565b606091505b50509050806121065773c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b1580156120ca57600080fd5b505af11580156120de573d6000803e3d6000fd5b50612106935073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2925087915086905061210c565b50505050565b6040516001600160a01b038316602482015260448101829052610de690849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526122ea565b600054610100900460ff166121965760405162461bcd60e51b815260040161063190612dd8565b610f356123bc565b600054610100900460ff166121c55760405162461bcd60e51b815260040161063190612dd8565b610f356123ec565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526121069085906323b872dd60e01b90608401612138565b61225f611f28565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586122943390565b6040516001600160a01b03909116815260200160405180910390a1565b6122b961241f565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33612294565b600061233f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166124689092919063ffffffff16565b805190915015610de6578080602001905181019061235d9190612e23565b610de65760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610631565b600054610100900460ff166123e35760405162461bcd60e51b815260040161063190612dd8565b610f35336121cd565b600054610100900460ff166124135760405162461bcd60e51b815260040161063190612dd8565b6065805460ff19169055565b60655460ff16610f355760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610631565b6060612477848460008561247f565b949350505050565b6060824710156124e05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610631565b6001600160a01b0385163b6125375760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610631565b600080866001600160a01b031685876040516125539190612e6c565b60006040518083038185875af1925050503d8060008114612590576040519150601f19603f3d011682016040523d82523d6000602084013e612595565b606091505b5091509150611a4e828286606083156125af5750816111a7565b8251156125bf5782518084602001fd5b8160405162461bcd60e51b81526004016106319190612e88565b6001600160a01b0381168114611acf57600080fd5b80356001600160801b038116811461260557600080fd5b919050565b80356001600160401b038116811461260557600080fd5b600080600080600080600080610100898b03121561263e57600080fd5b8835612649816125d9565b975061265760208a016125ee565b96506040890135612667816125d9565b955061267560608a016125ee565b945061268360808a0161260a565b935061269160a08a0161260a565b925061269f60c08a0161260a565b915060e089013590509295985092959890939650565b60008083601f8401126126c757600080fd5b5081356001600160401b038111156126de57600080fd5b6020830191508360208260051b85010111156126f957600080fd5b9250929050565b60008060008060006060868803121561271857600080fd5b85356001600160401b038082111561272f57600080fd5b61273b89838a016126b5565b9097509550602088013591508082111561275457600080fd5b50612761888289016126b5565b9094509250506040860135612775816125d9565b809150509295509295909350565b6000806040838503121561279657600080fd5b82356127a1816125d9565b915060208301356127b1816125d9565b809150509250929050565b6000602082840312156127ce57600080fd5b81356111a7816125d9565b6000806000606084860312156127ee57600080fd5b83356127f9816125d9565b9250612807602085016125ee565b91506128156040850161260a565b90509250925092565b60006020828403121561283057600080fd5b5035919050565b60008060008060008060c0878903121561285057600080fd5b863561285b816125d9565b9550612869602088016125ee565b94506040870135612879816125d9565b9350612887606088016125ee565b92506128956080880161260a565b91506128a360a0880161260a565b90509295509295509295565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b03811182821017156128e7576128e76128af565b60405290565b604051601f8201601f191681016001600160401b0381118282101715612915576129156128af565b604052919050565b8015158114611acf57600080fd5b6000602080838503121561293e57600080fd5b82356001600160401b038082111561295557600080fd5b818501915085601f83011261296957600080fd5b81358181111561297b5761297b6128af565b612989848260051b016128ed565b818152848101925060a09182028401850191888311156129a857600080fd5b938501935b82851015612a215780858a0312156129c55760008081fd5b6129cd6128c5565b85356129d8816125d9565b8152858701356129e7816125d9565b818801526040868101356129fa8161291d565b908201526060868101359082015260808087013590820152845293840193928501926129ad565b50979650505050505050565b600060208284031215612a3f57600080fd5b81516111a7816125d9565b60208082526024908201527f526166666c6573206d7573742068617665206174206c656173742032207469636040820152636b65747360e01b606082015260800190565b6020808252602e908201527f5f6d696e696d756d5469636b657473536f6c642073686f756c64203c3d205f6e60408201526d756d6265724f665469636b65747360901b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008219821115612b0557612b05612adc565b500190565b6001600160a01b038c811682528b166020820152610160810160028b10612b4157634e487b7160e01b600052602160045260246000fd5b8a6040830152612b5c606083018b6001600160801b03169052565b6001600160a01b03891660808301526001600160801b03881660a08301526001600160401b03871660c08301526001600160401b03861660e08301526001600160401b03851661010083015261012082019390935261014001529998505050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201612beb57612beb612adc565b5060010190565b600060208284031215612c0457600080fd5b815160ff811681146111a757600080fd5b600181815b80851115612c50578160001904821115612c3657612c36612adc565b80851615612c4357918102915b93841c9390800290612c1a565b509250929050565b600082612c6757506001612cf5565b81612c7457506000612cf5565b8160018114612c8a5760028114612c9457612cb0565b6001915050612cf5565b60ff841115612ca557612ca5612adc565b50506001821b612cf5565b5060208310610133831016604e8410600b8410161715612cd3575081810a612cf5565b612cdd8383612c15565b8060001904821115612cf157612cf1612adc565b0290505b92915050565b60006111a760ff841683612c58565b600060208284031215612d1c57600080fd5b5051919050565b6000816000190483118215151615612d3d57612d3d612adc565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612d6757612d67612d42565b500490565b600082821015612d7e57612d7e612adc565b500390565b60006001600160801b0380831681851681830481118215151615612da957612da9612adc565b02949350505050565b60006001600160801b0380841680612dcc57612dcc612d42565b92169190910492915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060208284031215612e3557600080fd5b81516111a78161291d565b60005b83811015612e5b578181015183820152602001612e43565b838111156121065750506000910152565b60008251612e7e818460208701612e40565b9190910192915050565b6020815260008251806020840152612ea7816040850160208701612e40565b601f01601f1916919091016040019291505056fea2646970667358221220c5538149a849373bd9f398e368a1fc8665baa9d71db6bb116444ffdf6bafacc564736f6c634300080f0033",
    "deployedSourceMap": "1336:18074:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5829:1672;;;;;;:::i;:::-;;:::i;:::-;;2209:26;;;;;;;;;;;;;;;;;;;1495:25:49;;;1483:2;1468:18;2209:26:1;;;;;;;;15363:923;;;;;;;;;;-1:-1:-1;15363:923:1;;;;;:::i;:::-;;:::i;14203:441::-;;;;;;;;;;-1:-1:-1;14203:441:1;;;;;:::i;:::-;;:::i;2064:53::-;;;;;;;;;;-1:-1:-1;2064:53:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3626:14:49;;3619:22;3601:41;;3589:2;3574:18;2064:53:1;3461:187:49;16541:138:1;;;;;;;;;;-1:-1:-1;16541:138:1;;;;;:::i;:::-;-1:-1:-1;;;;;16638:34:1;16615:4;16638:34;;;:21;:34;;;;;;;;;16541:138;4123:565;;;;;;;;;;-1:-1:-1;4123:565:1;;;;;:::i;:::-;;:::i;2294:55::-;;;;;;;;;;;;2346:3;2294:55;;14769:311;;;;;;;;;;-1:-1:-1;14769:311:1;;;;;:::i;:::-;;:::i;1858:84:28:-;;;;;;;;;;-1:-1:-1;1928:7:28;;;;1858:84;;13083:140:1;;;;;;;;;;-1:-1:-1;13083:140:1;;;;;:::i;:::-;;:::i;2355:59::-;;;;;;;;;;;;2409:5;2355:59;;3090:29;;;;;;;;;;-1:-1:-1;3090:29:1;;;;;;;;2071:101:26;;;;;;;;;;;;;:::i;13306:223:1:-;;;;;;;;;;-1:-1:-1;13306:223:1;;;;;:::i;:::-;;:::i;18684:724::-;;;;;;;;;;-1:-1:-1;18684:724:1;;;;;:::i;:::-;;:::i;2810:43::-;;;;;;;;;;-1:-1:-1;2810:43:1;;;;-1:-1:-1;;;;;2810:43:1;;;;;;-1:-1:-1;;;;;4240:32:49;;;4222:51;;4210:2;4195:18;2810:43:1;4051:228:49;2690:22:1;;;;;;;;;;-1:-1:-1;2690:22:1;;;;-1:-1:-1;;;;;2690:22:1;;;13787:163;;;;;;;;;;-1:-1:-1;13787:163:1;;;;;:::i;:::-;;:::i;1441:85:26:-;;;;;;;;;;-1:-1:-1;1513:6:26;;-1:-1:-1;;;;;1513:6:26;1441:85;;2948:63:1;;;;;;;;;;-1:-1:-1;2948:63:1;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2948:63:1;;;2548:55;;;;;;;;;;-1:-1:-1;2548:55:1;;;;;:::i;:::-;;;;;;;;;;;;;;8580:1846;;;;;;:::i;:::-;;:::i;13618:101::-;;;;;;;;;;;;;:::i;12904:107::-;;;;;;;;;;;;;:::i;16685:1993::-;;;;;;;;;;-1:-1:-1;16685:1993:1;;;;;:::i;:::-;;:::i;2321:198:26:-;;;;;;;;;;-1:-1:-1;2321:198:26;;;;;:::i;:::-;;:::i;10525:1450:1:-;;;;;;;;;;-1:-1:-1;10525:1450:1;;;;;:::i;:::-;;:::i;5829:1672::-;1482:19:28;:17;:19::i;:::-;6114:39:1::1;::::0;-1:-1:-1;;;6114:39:1;;-1:-1:-1;;;;;8324:47:49;;6114:39:1::1;::::0;::::1;8306:66:49::0;-1:-1:-1;;;;;6114:31:1;::::1;::::0;::::1;::::0;8279:18:49;;6114:39:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6100:53:1::1;:10;-1:-1:-1::0;;;;;6100:53:1::1;;6092:89;;;::::0;-1:-1:-1;;;6092:89:1;;8841:2:49;6092:89:1::1;::::0;::::1;8823:21:49::0;8880:2;8860:18;;;8853:30;8919:25;8899:18;;;8892:53;8962:18;;6092:89:1::1;;;;;;;;;-1:-1:-1::0;;;;;6199:41:1;::::1;;::::0;;;:21:::1;:41;::::0;;;;;::::1;;6191:86;;;::::0;-1:-1:-1;;;6191:86:1;;9193:2:49;6191:86:1::1;::::0;::::1;9175:21:49::0;;;9212:18;;;9205:30;9271:34;9251:18;;;9244:62;9323:18;;6191:86:1::1;8991:356:49::0;6191:86:1::1;6314:1;6295:16;-1:-1:-1::0;;;;;6295:20:1::1;;6287:69;;;;-1:-1:-1::0;;;6287:69:1::1;;;;;;;:::i;:::-;6397:16;-1:-1:-1::0;;;;;6374:39:1::1;:19;-1:-1:-1::0;;;;;6374:39:1::1;;;6366:98;;;;-1:-1:-1::0;;;6366:98:1::1;;;;;;;:::i;:::-;6504:5;6482:18;-1:-1:-1::0;;;;;6482:27:1::1;;;6474:68;;;::::0;-1:-1:-1;;;6474:68:1;;10374:2:49;6474:68:1::1;::::0;::::1;10356:21:49::0;10413:2;10393:18;;;10386:30;10452;10432:18;;;10425:58;10500:18;;6474:68:1::1;10172:352:49::0;6474:68:1::1;6638:23;6664:77;6684:18;6704:15;6721:19;6664;:77::i;:::-;6638:103;;6788:15;6774:11;;:29;;;;:::i;:::-;6760:9;:44;6752:76;;;::::0;-1:-1:-1;;;6752:76:1;;10996:2:49;6752:76:1::1;::::0;::::1;10978:21:49::0;11035:2;11015:18;;;11008:30;-1:-1:-1;;;11054:18:49;;;11047:49;11113:18;;6752:76:1::1;10794:343:49::0;6752:76:1::1;6874:11;::::0;6838:32:::1;::::0;;;:20:::1;:32;::::0;;:47;;:32;;;:47:::1;::::0;6874:11;;6838:47:::1;:::i;:::-;::::0;;;-1:-1:-1;;6945:71:1::1;::::0;-1:-1:-1;;;6945:71:1;;6982:10:::1;6945:71;::::0;::::1;11382:34:49::0;7002:4:1::1;11432:18:49::0;;;11425:43;-1:-1:-1;;;;;11504:47:49;;11484:18;;;11477:75;-1:-1:-1;;;;;6945:36:1;::::1;::::0;::::1;::::0;11317:18:49;;6945:71:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;7051:39:1::1;::::0;-1:-1:-1;;;7051:39:1;;-1:-1:-1;;;;;8324:47:49;;7051:39:1::1;::::0;::::1;8306:66:49::0;-1:-1:-1;;;;;7051:31:1;::::1;::::0;-1:-1:-1;7051:31:1::1;::::0;-1:-1:-1;8279:18:49;;7051:39:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;7034:56:1::1;7042:4;-1:-1:-1::0;;;;;7034:56:1::1;;7026:84;;;::::0;-1:-1:-1;;;7026:84:1;;11765:2:49;7026:84:1::1;::::0;::::1;11747:21:49::0;11804:2;11784:18;;;11777:30;-1:-1:-1;;;11823:18:49;;;11816:45;11878:18;;7026:84:1::1;11563:339:49::0;7026:84:1::1;7126:368;7153:14:::0;7181:10:::1;7205:17;7236:6:::0;7257:18;7290:15;7320:16;7351:19;7392:36:::1;-1:-1:-1::0;;;;;7392:36:1;::::1;:15;:36;:::i;:::-;7444:11;7469:15;7126:368;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;6082:1419;5829:1672:::0;;;;;;;;:::o;15363:923::-;1334:13:26;:11;:13::i;:::-;15510::1;15548:22;;::::1;15540:61;;;::::0;-1:-1:-1;;;15540:61:1;;13402:2:49;15540:61:1::1;::::0;::::1;13384:21:49::0;13441:2;13421:18;;;13414:30;13480:28;13460:18;;;13453:56;13526:18;;15540:61:1::1;13200:350:49::0;15540:61:1::1;15611:14;15635:20:::0;15670:9:::1;15665:615;15685:3;15681:1;:7;15665:615;;;15724:13;;15738:1;15724:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;15709:31;;15763:8;;15772:1;15763:11;;;;;;;:::i;:::-;;;;;;;15754:20;;15806;:34;15827:12;-1:-1:-1::0;;;;;15806:34:1::1;-1:-1:-1::0;;;;;15806:34:1::1;;;;;;;;;;;;;15796:6;:44;;15788:72;;;::::0;-1:-1:-1;;;15788:72:1;;13889:2:49;15788:72:1::1;::::0;::::1;13871:21:49::0;13928:2;13908:18;;;13901:30;-1:-1:-1;;;13947:18:49;;;13940:45;14002:18;;15788:72:1::1;13687:339:49::0;15788:72:1::1;-1:-1:-1::0;;;;;15877:26:1;::::1;15874:204;;15922:39;15943:9;15954:6;15922:20;:39::i;:::-;15874:204;;;16011:52;-1:-1:-1::0;;;;;16011:33:1;::::1;16045:9:::0;16056:6;16011:33:::1;:52::i;:::-;-1:-1:-1::0;;;;;16211:34:1;::::1;;::::0;;;:20:::1;:34;::::0;;;;:44;;;;::::1;::::0;;15690:3:::1;::::0;::::1;:::i;:::-;;;15665:615;;;;15486:800;;;15363:923:::0;;;;;:::o;14203:441::-;1334:13:26;:11;:13::i;:::-;-1:-1:-1;;;;;14338:48:1;::::1;;::::0;;;:21:::1;:48;::::0;;;;;::::1;;14337:49;14329:90;;;::::0;-1:-1:-1;;;14329:90:1;;14373:2:49;14329:90:1::1;::::0;::::1;14355:21:49::0;14412:2;14392:18;;;14385:30;14451;14431:18;;;14424:58;14499:18;;14329:90:1::1;14171:352:49::0;14329:90:1::1;-1:-1:-1::0;;;;;14429:48:1;;::::1;;::::0;;;:21:::1;:48;::::0;;;;;;;:55;;14480:4:::1;-1:-1:-1::0;;14429:55:1;;::::1;;::::0;;14494:28:::1;:55:::0;;;;;;:83;;-1:-1:-1;;;;;;14494:83:1::1;::::0;;::::1;::::0;;;::::1;::::0;;;14592:45;4222:51:49;;;14592:45:1::1;::::0;4195:18:49;14592:45:1::1;;;;;;;14203:441:::0;;:::o;4123:565::-;3111:19:27;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:27;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:27;1476:19:30;:23;;;3219:66:27;;-1:-1:-1;3268:12:27;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:27;;14730:2:49;3157:201:27;;;14712:21:49;14769:2;14749:18;;;14742:30;14808:34;14788:18;;;14781:62;-1:-1:-1;;;14859:18:49;;;14852:44;14913:19;;3157:201:27;14528:410:49;3157:201:27;3368:12;:16;;-1:-1:-1;;3368:16:27;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:27;;;;;3394:65;4218:16:1::1;:14;:16::i;:::-;4244:17;:15;:17::i;:::-;4272:7;:18:::0;;-1:-1:-1;;;;;4272:18:1;;::::1;-1:-1:-1::0;;;;;;4272:18:1;;::::1;;::::0;;;4300:17:::1;:58:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;4368:17:::1;:24:::0;;-1:-1:-1;;4368:24:1;;::::1;4272:18:::0;4368:24;;::::1;::::0;;;4459:42:::1;4272:7;4437:65:::0;;:72;;;;::::1;::::0;;::::1;::::0;;4559:28:::1;4437:65;4559:72:::0;;:88;;;;::::1;2160:42;4559:88;::::0;;4671:10:::1;4657:11;:24:::0;3479:99:27;;;;3529:5;3513:21;;-1:-1:-1;;3513:21:27;;;3553:14;;-1:-1:-1;15095:36:49;;3553:14:27;;15083:2:49;15068:18;3553:14:27;;;;;;;3479:99;3101:483;4123:565:1;;:::o;14769:311::-;1334:13:26;:11;:13::i;:::-;-1:-1:-1;;;;;14868:48:1;::::1;;::::0;;;:21:::1;:48;::::0;;;;;::::1;;14860:85;;;::::0;-1:-1:-1;;;14860:85:1;;15344:2:49;14860:85:1::1;::::0;::::1;15326:21:49::0;15383:2;15363:18;;;15356:30;15422:26;15402:18;;;15395:54;15466:18;;14860:85:1::1;15142:348:49::0;14860:85:1::1;-1:-1:-1::0;;;;;14955:48:1;::::1;15006:5;14955:48:::0;;;:21:::1;:48;::::0;;;;;;;;:56;;-1:-1:-1;;14955:56:1::1;::::0;;15026:47;;4222:51:49;;;15026:47:1::1;::::0;4195:18:49;15026:47:1::1;;;;;;;14769:311:::0;:::o;13083:140::-;1334:13:26;:11;:13::i;:::-;13170:7:1::1;::::0;13155:33:::1;::::0;;-1:-1:-1;;;;;13170:7:1;;::::1;15707:34:49::0;;15777:15;;;15772:2;15757:18;;15750:43;13155:33:1::1;::::0;15642:18:49;13155:33:1::1;;;;;;;13198:7;:18:::0;;-1:-1:-1;;;;;;13198:18:1::1;-1:-1:-1::0;;;;;13198:18:1;;;::::1;::::0;;;::::1;::::0;;13083:140::o;2071:101:26:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;13306:223:1:-;1334:13:26;:11;:13::i;:::-;13415:17:1::1;::::0;13390:64:::1;::::0;;-1:-1:-1;;;;;13415:17:1;;::::1;15707:34:49::0;;15777:15;;;15772:2;15757:18;;15750:43;13390:64:1::1;::::0;15642:18:49;13390:64:1::1;;;;;;;13464:17;:58:::0;;-1:-1:-1;;;;;;13464:58:1::1;-1:-1:-1::0;;;;;13464:58:1;;;::::1;::::0;;;::::1;::::0;;13306:223::o;18684:724::-;-1:-1:-1;;;;;19026:48:1;;;18814:7;19026:48;;;:28;:48;;;;;;;;;19011:75;;-1:-1:-1;;;19011:75:1;;;;18814:7;;;;19026:48;;;19011:73;;:75;;;;;;;;;;;19026:48;19011:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19005:81;;:2;:81;:::i;:::-;18874:17;;-1:-1:-1;;;;;18911:48:1;;;18874:17;18911:48;;;:28;:48;;;;;;;;18874:86;;-1:-1:-1;;;18874:86:1;;18911:48;;;18874:86;;;4222:51:49;-1:-1:-1;;;;;18874:126:1;;;-1:-1:-1;;;;;18874:104:1;;;:17;;:36;;4195:18:49;;18874:86:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:104;;;;:::i;:::-;:126;;;;:::i;:::-;18873:214;;;;:::i;:::-;18833:254;-1:-1:-1;19097:30:1;2409:5;19131:57;2346:3;18833:254;19131:57;:::i;:::-;19130:89;;;;:::i;:::-;19289:17;;:80;;-1:-1:-1;;;19289:80:1;;19326:42;19289:80;;;4222:51:49;19097:122:1;;-1:-1:-1;19229:23:1;;-1:-1:-1;;;;;19289:17:1;;;;:36;;4195:18:49;;19289:80:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19256:29;:22;19281:4;19256:29;:::i;:::-;19255:114;;;;:::i;:::-;19229:140;-1:-1:-1;;;;18684:724:1;;;;;;:::o;13787:163::-;1334:13:26;:11;:13::i;:::-;13883:11:1::1;::::0;13865:43:::1;::::0;;18258:25:49;;;18314:2;18299:18;;18292:34;;;13865:43:1::1;::::0;18231:18:49;13865:43:1::1;;;;;;;13918:11;:25:::0;13787:163::o;8580:1846::-;1482:19:28;:17;:19::i;:::-;-1:-1:-1;;;;;8850:41:1;::::1;;::::0;;;:21:::1;:41;::::0;;;;;::::1;;8842:86;;;::::0;-1:-1:-1;;;8842:86:1;;9193:2:49;8842:86:1::1;::::0;::::1;9175:21:49::0;;;9212:18;;;9205:30;9271:34;9251:18;;;9244:62;9323:18;;8842:86:1::1;8991:356:49::0;8842:86:1::1;8965:1;8946:16;-1:-1:-1::0;;;;;8946:20:1::1;;8938:69;;;;-1:-1:-1::0;;;8938:69:1::1;;;;;;;:::i;:::-;9048:16;-1:-1:-1::0;;;;;9025:39:1::1;:19;-1:-1:-1::0;;;;;9025:39:1::1;;;9017:98;;;;-1:-1:-1::0;;;9017:98:1::1;;;;;;;:::i;:::-;9155:5;9133:18;-1:-1:-1::0;;;;;9133:27:1::1;;;9125:68;;;::::0;-1:-1:-1;;;9125:68:1;;10374:2:49;9125:68:1::1;::::0;::::1;10356:21:49::0;10413:2;10393:18;;;10386:30;10452;10432:18;;;10425:58;10500:18;;9125:68:1::1;10172:352:49::0;9125:68:1::1;9212:23;9238:119;9258:13;9273:7;9282:18;9302:15;9319:16;9337:19;9238:18;:119::i;:::-;9212:145:::0;-1:-1:-1;;;;;;9372:27:1;::::1;9368:612;;9446:11;::::0;9436:21:::1;::::0;-1:-1:-1;;;;;9436:21:1;::::1;;:::i;:::-;9423:9;:34;9415:65;;;::::0;-1:-1:-1;;;9415:65:1;;18539:2:49;9415:65:1::1;::::0;::::1;18521:21:49::0;18578:2;18558:18;;;18551:30;-1:-1:-1;;;18597:18:49;;;18590:48;18655:18;;9415:65:1::1;18337:342:49::0;9415:65:1::1;9368:612;;;9532:11;;9519:9;:24;9511:63;;;::::0;-1:-1:-1;;;9511:63:1;;18886:2:49;9511:63:1::1;::::0;::::1;18868:21:49::0;18925:2;18905:18;;;18898:30;18964:28;18944:18;;;18937:56;19010:18;;9511:63:1::1;18684:350:49::0;9511:63:1::1;9612:46;::::0;-1:-1:-1;;;9612:46:1;;9652:4:::1;9612:46;::::0;::::1;4222:51:49::0;9588:21:1::1;::::0;-1:-1:-1;;;;;9612:31:1;::::1;::::0;::::1;::::0;4195:18:49;;9612:46:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9588:70:::0;-1:-1:-1;9719:74:1::1;-1:-1:-1::0;;;;;9719:38:1;::::1;9758:10;9778:4;-1:-1:-1::0;;;;;9719:74:1;::::1;:38;:74::i;:::-;9830:46;::::0;-1:-1:-1;;;9830:46:1;;9870:4:::1;9830:46;::::0;::::1;4222:51:49::0;9807:20:1::1;::::0;-1:-1:-1;;;;;9830:31:1;::::1;::::0;::::1;::::0;4195:18:49;;9830:46:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9807:69:::0;-1:-1:-1;9909:28:1::1;9924:13:::0;9807:69;9909:28:::1;:::i;:::-;9898:7;-1:-1:-1::0;;;;;9898:39:1::1;;9890:79;;;::::0;-1:-1:-1;;;9890:79:1;;19371:2:49;9890:79:1::1;::::0;::::1;19353:21:49::0;19410:2;19390:18;;;19383:30;19449:29;19429:18;;;19422:57;19496:18;;9890:79:1::1;19169:351:49::0;9890:79:1::1;9497:483;;9368:612;10026:11;::::0;9990:32:::1;::::0;;;:20:::1;:32;::::0;;:47;;:32;;;:47:::1;::::0;10026:11;;9990:47:::1;:::i;:::-;::::0;;;-1:-1:-1;10052:367:1::1;::::0;-1:-1:-1;10079:13:1;10106:10:::1;10130:16;10160:7:::0;10182:18;10215:15;10245:16;10276:19;10317:36:::1;-1:-1:-1::0;;;;;10317:36:1;::::1;:15;:36;:::i;13618:101::-:0;1334:13:26;:11;:13::i;:::-;13695:17:1::1;::::0;;-1:-1:-1;;13674:38:1;::::1;13695:17;::::0;;::::1;13694:18;13674:38;::::0;;13618:101::o;12904:107::-;1334:13:26;:11;:13::i;:::-;1928:7:28;;;;12956:48:1::1;;12971:8;:6;:8::i;12956:48::-;12994:10;:8;:10::i;16685:1993::-:0;16936:17;;16879:7;;;;16936:17;;16931:1709;;2409:5;2346:3;16987:37;17009:15;-1:-1:-1;;;;;16987:37:1;;;:::i;:::-;-1:-1:-1;;;;;16987:65:1;;;;;:::i;:::-;16986:97;;;;:::i;:::-;16968:115;;16931:1709;;;17121:29;-1:-1:-1;;;;;17168:27:1;;17164:428;;17286:17;;:51;;-1:-1:-1;;;17286:51:1;;2160:42;17286:51;;;4222::49;;;2160:42:1;-1:-1:-1;17352:8:1;;-1:-1:-1;;;;;17286:61:1;;;-1:-1:-1;;;;;17286:17:1;;;;:36;;4195:18:49;;17286:51:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;;;:::i;:::-;17285:76;;;;:::i;:::-;17261:100;;17164:428;;;17551:13;-1:-1:-1;;;;;17536:38:1;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17530:46;;:2;:46;:::i;:::-;17464:17;;:51;;-1:-1:-1;;;17464:51:1;;-1:-1:-1;;;;;4240:32:49;;;17464:51:1;;;4222::49;-1:-1:-1;;;;;17464:61:1;;;:17;;:36;;4195:18:49;;17464:51:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;;;:::i;:::-;17463:114;;;;:::i;:::-;17439:138;;17164:428;-1:-1:-1;;;;;17791:48:1;;;17605:33;17791:48;;;:28;:48;;;;;;;;;17776:75;;-1:-1:-1;;;17776:75:1;;;;17605:33;;17791:48;;17776:73;;:75;;;;;17791:48;;17776:75;;;;;;17791:48;17776:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17770:81;;:2;:81;:::i;:::-;17642:17;;-1:-1:-1;;;;;17679:48:1;;;17642:17;17679:48;;;:28;:48;;;;;;;;17642:86;;-1:-1:-1;;;17642:86:1;;17679:48;;;17642:86;;;4222:51:49;-1:-1:-1;;;;;17642:123:1;;;-1:-1:-1;;;;;17642:105:1;;;:17;;:36;;4195:18:49;;17642:86:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:105;;;;:::i;:::-;:123;;;;:::i;:::-;17641:211;;;;:::i;:::-;17605:247;-1:-1:-1;17866:13:1;17920:21;17883:33;17605:247;17911:5;17883:33;:::i;:::-;17882:59;;;;:::i;:::-;17866:75;;18035:5;18026;:14;18022:608;;18077:1;18059:19;;18022:608;;;18124:5;18116;:13;18115:35;;;;;18144:5;18135;:14;;18115:35;18111:519;;;18258:5;18211:37;18233:15;-1:-1:-1;;;;;18211:37:1;;;:::i;:::-;:43;;18251:3;18211:43;:::i;:::-;18210:53;;;;:::i;:::-;-1:-1:-1;;;;;18192:71:1;;;18111:519;;;18309:5;18301;:13;18300:35;;;;;18329:5;18320;:14;;18300:35;18296:334;;;18445:5;18397:37;18419:15;-1:-1:-1;;;;;18397:37:1;;;:::i;:::-;:44;;18437:4;18397:44;:::i;18296:334::-;18495:5;18487;:13;18483:147;;;18610:5;18562:37;18584:15;-1:-1:-1;;;;;18562:37:1;;;:::i;:::-;:44;;18602:4;18562:44;:::i;:::-;18561:54;;;;:::i;:::-;-1:-1:-1;;;;;18543:72:1;;;18483:147;17107:1533;;;16931:1709;18656:15;16685:1993;-1:-1:-1;;;;;;;16685:1993:1:o;2321:198:26:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:26;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:26;;20240:2:49;2401:73:26::1;::::0;::::1;20222:21:49::0;20279:2;20259:18;;;20252:30;20318:34;20298:18;;;20291:62;-1:-1:-1;;;20369:18:49;;;20362:36;20415:19;;2401:73:26::1;20038:402:49::0;2401:73:26::1;2484:28;2503:8;2484:18;:28::i;:::-;2321:198:::0;:::o;10525:1450:1:-;4747:7;;-1:-1:-1;;;;;4747:7:1;4733:10;:21;4725:45;;;;-1:-1:-1;;;4725:45:1;;20647:2:49;4725:45:1;;;20629:21:49;20686:2;20666:18;;;20659:30;-1:-1:-1;;;20705:18:49;;;20698:41;20756:18;;4725:45:1;20445:335:49;4725:45:1;10630:18;;10616:11:::1;10658:1311;10678:3;10674:1;:7;10658:1311;;;10704:11;10716:1;10704:14;;;;;;;;:::i;:::-;;;;;;;:23;;;10701:770;;;10784:1;-1:-1:-1::0;;;;;10749:37:1::1;:11;10761:1;10749:14;;;;;;;;:::i;:::-;;;;;;;:23;;;-1:-1:-1::0;;;;;10749:37:1::1;;10746:212;;10817:11;10829:1;10817:14;;;;;;;;:::i;:::-;;;;;;;:28;;;-1:-1:-1::0;;;;;10809:50:1::1;;10868:4;10875:11;10887:1;10875:14;;;;;;;;:::i;:::-;;;;;;;:23;;;10900:11;10912:1;10900:14;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;:38:::1;;::::0;10809:130:::1;::::0;-1:-1:-1;;;;;;10809:130:1::1;::::0;;;;;;-1:-1:-1;;;;;21043:15:49;;;10809:130:1::1;::::0;::::1;21025:34:49::0;21095:15;;;;21075:18;;;21068:43;21127:18;;;21120:34;20960:18;;10809:130:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;10746:212;10701:770;;;11045:1;-1:-1:-1::0;;;;;11010:37:1::1;:11;11022:1;11010:14;;;;;;;;:::i;:::-;;;;;;;:23;;;-1:-1:-1::0;;;;;11010:37:1::1;;11007:450;;11113:1;-1:-1:-1::0;;;;;11073:42:1::1;:11;11085:1;11073:14;;;;;;;;:::i;:::-;;;;;;;:28;;;-1:-1:-1::0;;;;;11073:42:1::1;::::0;11070:369:::1;;11142:85;11163:11;11175:1;11163:14;;;;;;;;:::i;:::-;;;;;;;:23;;;11188:11;11200:1;11188:14;;;;;;;;:::i;:::-;;;;;;;:38;;;11142:20;:85::i;11070:369::-;11302:114;11352:11;11364:1;11352:14;;;;;;;;:::i;:::-;;;;;;;:23;;;11377:11;11389:1;11377:14;;;;;;;;:::i;:::-;;;;;;;:38;;;11309:11;11321:1;11309:14;;;;;;;;:::i;:::-;;;;;;;:28;;;-1:-1:-1::0;;;;;11302:49:1::1;;;:114;;;;;:::i;:::-;11533:1;11487:11;11499:1;11487:14;;;;;;;;:::i;:::-;;;;;;;:43;;;:47;11484:181;;;11607:11;11619:1;11607:14;;;;;;;;:::i;:::-;;;;;;;:43;;;11553:20;:50;11574:11;11586:1;11574:14;;;;;;;;:::i;:::-;;;;;;;:28;;;-1:-1:-1::0;;;;;11553:50:1::1;-1:-1:-1::0;;;;;11553:50:1::1;;;;;;;;;;;;;:97;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;11484:181:1::1;11683:275;11717:11;11729:1;11717:14;;;;;;;;:::i;:::-;;;;;;;:23;;;11758:11;11770:1;11758:14;;;;;;;;:::i;:::-;;;;;;;:28;;;11804:11;11816:1;11804:14;;;;;;;;:::i;:::-;;;;;;;:23;;;11845:11;11857:1;11845:14;;;;;;;;:::i;:::-;;;;;;;:38;;;11901:11;11913:1;11901:14;;;;;;;;:::i;:::-;;;;;;;:43;;;11683:275;;;;;;;;;-1:-1:-1::0;;;;;21474:15:49;;;21456:34;;21526:15;;;;21521:2;21506:18;;21499:43;21585:14;;21578:22;21573:2;21558:18;;21551:50;21632:2;21617:18;;21610:34;21675:3;21660:19;;21653:35;;;;21405:3;21390:19;;21165:529;11683:275:1::1;;;;;;;;10683:3;::::0;::::1;:::i;:::-;;;10658:1311;;2010:106:28::0;1928:7;;;;2079:9;2071:38;;;;-1:-1:-1;;;2071:38:28;;21901:2:49;2071:38:28;;;21883:21:49;21940:2;21920:18;;;21913:30;-1:-1:-1;;;21959:18:49;;;21952:46;22015:18;;2071:38:28;21699:340:49;1599:130:26;1513:6;;-1:-1:-1;;;;;1513:6:26;929:10:31;1662:23:26;1654:68;;;;-1:-1:-1;;;1654:68:26;;22246:2:49;1654:68:26;;;22228:21:49;;;22265:18;;;22258:30;22324:34;22304:18;;;22297:62;22376:18;;1654:68:26;22044:356:49;12040:521:1;12184:7;12159:21;:32;;12151:75;;;;-1:-1:-1;;;12151:75:1;;22607:2:49;12151:75:1;;;22589:21:49;22646:2;22626:18;;;22619:30;22685:32;22665:18;;;22658:60;22735:18;;12151:75:1;22405:354:49;12151:75:1;12236:11;12251:9;12236:24;;12271:12;12289:5;-1:-1:-1;;;;;12289:10:1;12307:7;12321:3;12289:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12270:59;;;12427:7;12422:133;;2160:42;-1:-1:-1;;;;;12450:12:1;;12470:7;12450:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12494:50:1;;-1:-1:-1;2160:42:1;;-1:-1:-1;12529:5:1;;-1:-1:-1;12536:7:1;;-1:-1:-1;12494:34:1;:50::i;:::-;12111:450;;12040:521;;:::o;763:205:37:-;902:58;;-1:-1:-1;;;;;23166:32:49;;902:58:37;;;23148:51:49;23215:18;;;23208:34;;;875:86:37;;895:5;;-1:-1:-1;;;925:23:37;23121:18:49;;902:58:37;;;;-1:-1:-1;;902:58:37;;;;;;;;;;;;;;-1:-1:-1;;;;;902:58:37;-1:-1:-1;;;;;;902:58:37;;;;;;;;;;875:19;:86::i;1003:95:26:-;4910:13:27;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:27;;;;;;;:::i;:::-;1065:26:26::1;:24;:26::i;1063:97:28:-:0;4910:13:27;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:27;;;;;;;:::i;:::-;1126:27:28::1;:25;:27::i;2673:187:26:-:0;2765:6;;;-1:-1:-1;;;;;2781:17:26;;;-1:-1:-1;;;;;;2781:17:26;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;974:241:37:-;1139:68;;-1:-1:-1;;;;;21043:15:49;;;1139:68:37;;;21025:34:49;21095:15;;21075:18;;;21068:43;21127:18;;;21120:34;;;1112:96:37;;1132:5;;-1:-1:-1;;;1162:27:37;20960:18:49;;1139:68:37;20785:375:49;2429:115:28;1482:19;:17;:19::i;:::-;2488:7:::1;:14:::0;;-1:-1:-1;;2488:14:28::1;2498:4;2488:14;::::0;;2517:20:::1;2524:12;929:10:31::0;;850:96;2524:12:28::1;2517:20;::::0;-1:-1:-1;;;;;4240:32:49;;;4222:51;;4210:2;4195:18;2517:20:28::1;;;;;;;2429:115::o:0;2676:117::-;1729:16;:14;:16::i;:::-;2734:7:::1;:15:::0;;-1:-1:-1;;2734:15:28::1;::::0;;2764:22:::1;929:10:31::0;2773:12:28::1;850:96:31::0;3747:706:37;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:37;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:37;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:37;;24117:2:49;4351:85:37;;;24099:21:49;24156:2;24136:18;;;24129:30;24195:34;24175:18;;;24168:62;-1:-1:-1;;;24246:18:49;;;24239:40;24296:19;;4351:85:37;23915:406:49;1104:111:26;4910:13:27;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:27;;;;;;;:::i;:::-;1176:32:26::1;929:10:31::0;1176:18:26::1;:32::i;1166:95:28:-:0;4910:13:27;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:27;;;;;;;:::i;:::-;1239:7:28::1;:15:::0;;-1:-1:-1;;1239:15:28::1;::::0;;1166:95::o;2188:106::-;1928:7;;;;2246:41;;;;-1:-1:-1;;;2246:41:28;;24528:2:49;2246:41:28;;;24510:21:49;24567:2;24547:18;;;24540:30;-1:-1:-1;;;24586:18:49;;;24579:50;24646:18;;2246:41:28;24326:344:49;3861:223:42;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;3861:223;-1:-1:-1;;;;3861:223:42:o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:42;;24877:2:49;5137:81:42;;;24859:21:49;24916:2;24896:18;;;24889:30;24955:34;24935:18;;;24928:62;-1:-1:-1;;;25006:18:49;;;24999:36;25052:19;;5137:81:42;24675:402:49;5137:81:42;-1:-1:-1;;;;;1476:19:30;;;5228:60:42;;;;-1:-1:-1;;;5228:60:42;;25284:2:49;5228:60:42;;;25266:21:49;25323:2;25303:18;;;25296:30;25362:31;25342:18;;;25335:59;25411:18;;5228:60:42;25082:353:49;5228:60:42;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:42;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;7707;7735:7;7731:566;;;-1:-1:-1;7765:10:42;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;-1:-1:-1;;;8252:20:42;;;;;;;;:::i;14:131:49:-;-1:-1:-1;;;;;89:31:49;;79:42;;69:70;;135:1;132;125:12;150:188;218:20;;-1:-1:-1;;;;;267:46:49;;257:57;;247:85;;328:1;325;318:12;247:85;150:188;;;:::o;343:171::-;410:20;;-1:-1:-1;;;;;459:30:49;;449:41;;439:69;;504:1;501;494:12;519:825;638:6;646;654;662;670;678;686;694;747:3;735:9;726:7;722:23;718:33;715:53;;;764:1;761;754:12;715:53;803:9;790:23;822:31;847:5;822:31;:::i;:::-;872:5;-1:-1:-1;896:38:49;930:2;915:18;;896:38;:::i;:::-;886:48;;986:2;975:9;971:18;958:32;999:33;1024:7;999:33;:::i;:::-;1051:7;-1:-1:-1;1077:38:49;1111:2;1096:18;;1077:38;:::i;:::-;1067:48;;1134:38;1167:3;1156:9;1152:19;1134:38;:::i;:::-;1124:48;;1191:38;1224:3;1213:9;1209:19;1191:38;:::i;:::-;1181:48;;1248:38;1281:3;1270:9;1266:19;1248:38;:::i;:::-;1238:48;;1333:3;1322:9;1318:19;1305:33;1295:43;;519:825;;;;;;;;;;;:::o;1531:367::-;1594:8;1604:6;1658:3;1651:4;1643:6;1639:17;1635:27;1625:55;;1676:1;1673;1666:12;1625:55;-1:-1:-1;1699:20:49;;-1:-1:-1;;;;;1731:30:49;;1728:50;;;1774:1;1771;1764:12;1728:50;1811:4;1803:6;1799:17;1787:29;;1871:3;1864:4;1854:6;1851:1;1847:14;1839:6;1835:27;1831:38;1828:47;1825:67;;;1888:1;1885;1878:12;1825:67;1531:367;;;;;:::o;1903:908::-;2034:6;2042;2050;2058;2066;2119:2;2107:9;2098:7;2094:23;2090:32;2087:52;;;2135:1;2132;2125:12;2087:52;2175:9;2162:23;-1:-1:-1;;;;;2245:2:49;2237:6;2234:14;2231:34;;;2261:1;2258;2251:12;2231:34;2300:70;2362:7;2353:6;2342:9;2338:22;2300:70;:::i;:::-;2389:8;;-1:-1:-1;2274:96:49;-1:-1:-1;2477:2:49;2462:18;;2449:32;;-1:-1:-1;2493:16:49;;;2490:36;;;2522:1;2519;2512:12;2490:36;;2561:72;2625:7;2614:8;2603:9;2599:24;2561:72;:::i;:::-;2652:8;;-1:-1:-1;2535:98:49;-1:-1:-1;;2737:2:49;2722:18;;2709:32;2750:31;2709:32;2750:31;:::i;:::-;2800:5;2790:15;;;1903:908;;;;;;;;:::o;2816:388::-;2884:6;2892;2945:2;2933:9;2924:7;2920:23;2916:32;2913:52;;;2961:1;2958;2951:12;2913:52;3000:9;2987:23;3019:31;3044:5;3019:31;:::i;:::-;3069:5;-1:-1:-1;3126:2:49;3111:18;;3098:32;3139:33;3098:32;3139:33;:::i;:::-;3191:7;3181:17;;;2816:388;;;;;:::o;3209:247::-;3268:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:52;;;3337:1;3334;3327:12;3289:52;3376:9;3363:23;3395:31;3420:5;3395:31;:::i;3653:393::-;3729:6;3737;3745;3798:2;3786:9;3777:7;3773:23;3769:32;3766:52;;;3814:1;3811;3804:12;3766:52;3853:9;3840:23;3872:31;3897:5;3872:31;:::i;:::-;3922:5;-1:-1:-1;3946:38:49;3980:2;3965:18;;3946:38;:::i;:::-;3936:48;;4003:37;4036:2;4025:9;4021:18;4003:37;:::i;:::-;3993:47;;3653:393;;;;;:::o;4601:180::-;4660:6;4713:2;4701:9;4692:7;4688:23;4684:32;4681:52;;;4729:1;4726;4719:12;4681:52;-1:-1:-1;4752:23:49;;4601:180;-1:-1:-1;4601:180:49:o;4786:683::-;4888:6;4896;4904;4912;4920;4928;4981:3;4969:9;4960:7;4956:23;4952:33;4949:53;;;4998:1;4995;4988:12;4949:53;5037:9;5024:23;5056:31;5081:5;5056:31;:::i;:::-;5106:5;-1:-1:-1;5130:38:49;5164:2;5149:18;;5130:38;:::i;:::-;5120:48;;5220:2;5209:9;5205:18;5192:32;5233:33;5258:7;5233:33;:::i;:::-;5285:7;-1:-1:-1;5311:38:49;5345:2;5330:18;;5311:38;:::i;:::-;5301:48;;5368:38;5401:3;5390:9;5386:19;5368:38;:::i;:::-;5358:48;;5425:38;5458:3;5447:9;5443:19;5425:38;:::i;:::-;5415:48;;4786:683;;;;;;;;:::o;5474:127::-;5535:10;5530:3;5526:20;5523:1;5516:31;5566:4;5563:1;5556:15;5590:4;5587:1;5580:15;5606:253;5678:2;5672:9;5720:4;5708:17;;-1:-1:-1;;;;;5740:34:49;;5776:22;;;5737:62;5734:88;;;5802:18;;:::i;:::-;5838:2;5831:22;5606:253;:::o;5864:275::-;5935:2;5929:9;6000:2;5981:13;;-1:-1:-1;;5977:27:49;5965:40;;-1:-1:-1;;;;;6020:34:49;;6056:22;;;6017:62;6014:88;;;6082:18;;:::i;:::-;6118:2;6111:22;5864:275;;-1:-1:-1;5864:275:49:o;6144:118::-;6230:5;6223:13;6216:21;6209:5;6206:32;6196:60;;6252:1;6249;6242:12;6267:1764;6380:6;6411:2;6454;6442:9;6433:7;6429:23;6425:32;6422:52;;;6470:1;6467;6460:12;6422:52;6510:9;6497:23;-1:-1:-1;;;;;6580:2:49;6572:6;6569:14;6566:34;;;6596:1;6593;6586:12;6566:34;6634:6;6623:9;6619:22;6609:32;;6679:7;6672:4;6668:2;6664:13;6660:27;6650:55;;6701:1;6698;6691:12;6650:55;6737:2;6724:16;6759:2;6755;6752:10;6749:36;;;6765:18;;:::i;:::-;6805:36;6837:2;6832;6829:1;6825:10;6821:19;6805:36;:::i;:::-;6875:15;;;6906:12;;;;-1:-1:-1;6937:4:49;6976:11;;;6968:20;;6964:29;;;7005:19;;;7002:39;;;7037:1;7034;7027:12;7002:39;7061:11;;;;7081:920;7097:6;7092:3;7089:15;7081:920;;;7177:2;7171:3;7162:7;7158:17;7154:26;7151:116;;;7221:1;7250:2;7246;7239:14;7151:116;7293:22;;:::i;:::-;7356:3;7343:17;7373:33;7398:7;7373:33;:::i;:::-;7419:22;;7482:12;;;7469:26;7508:33;7469:26;7508:33;:::i;:::-;7561:14;;;7554:31;7608:2;7651:12;;;7638:26;7677:30;7638:26;7677:30;:::i;:::-;7727:14;;;7720:31;7774:2;7825:12;;;7812:26;7796:14;;;7789:50;7862:3;7914:12;;;7901:26;7885:14;;;7878:50;7941:18;;7114:12;;;;7979;;;;7081:920;;;-1:-1:-1;8020:5:49;6267:1764;-1:-1:-1;;;;;;;6267:1764:49:o;8383:251::-;8453:6;8506:2;8494:9;8485:7;8481:23;8477:32;8474:52;;;8522:1;8519;8512:12;8474:52;8554:9;8548:16;8573:31;8598:5;8573:31;:::i;9352:400::-;9554:2;9536:21;;;9593:2;9573:18;;;9566:30;9632:34;9627:2;9612:18;;9605:62;-1:-1:-1;;;9698:2:49;9683:18;;9676:34;9742:3;9727:19;;9352:400::o;9757:410::-;9959:2;9941:21;;;9998:2;9978:18;;;9971:30;10037:34;10032:2;10017:18;;10010:62;-1:-1:-1;;;10103:2:49;10088:18;;10081:44;10157:3;10142:19;;9757:410::o;10529:127::-;10590:10;10585:3;10581:20;10578:1;10571:31;10621:4;10618:1;10611:15;10645:4;10642:1;10635:15;10661:128;10701:3;10732:1;10728:6;10725:1;10722:13;10719:39;;;10738:18;;:::i;:::-;-1:-1:-1;10774:9:49;;10661:128::o;12014:1181::-;-1:-1:-1;;;;;12504:15:49;;;12486:34;;12556:15;;12551:2;12536:18;;12529:43;12435:3;12420:19;;12602:1;12591:13;;12581:144;;12647:10;12642:3;12638:20;12635:1;12628:31;12682:4;12679:1;12672:15;12710:4;12707:1;12700:15;12581:144;12761:6;12756:2;12745:9;12741:18;12734:34;12777:46;12819:2;12808:9;12804:18;12796:6;-1:-1:-1;;;;;8102:46:49;8090:59;;8036:119;12777:46;-1:-1:-1;;;;;4350:31:49;;12874:3;12859:19;;4338:44;-1:-1:-1;;;;;8102:46:49;;12930:3;12915:19;;8090:59;-1:-1:-1;;;;;11972:30:49;;12985:3;12970:19;;11960:43;-1:-1:-1;;;;;11972:30:49;;13040:3;13025:19;;11960:43;-1:-1:-1;;;;;11972:30:49;;13095:3;13080:19;;11960:43;13131:3;13116:19;;13109:35;;;;13175:3;13160:19;13153:36;12014:1181;;-1:-1:-1;;;;;;;;;12014:1181:49:o;13555:127::-;13616:10;13611:3;13607:20;13604:1;13597:31;13647:4;13644:1;13637:15;13671:4;13668:1;13661:15;14031:135;14070:3;14091:17;;;14088:43;;14111:18;;:::i;:::-;-1:-1:-1;14158:1:49;14147:13;;14031:135::o;15804:273::-;15872:6;15925:2;15913:9;15904:7;15900:23;15896:32;15893:52;;;15941:1;15938;15931:12;15893:52;15973:9;15967:16;16023:4;16016:5;16012:16;16005:5;16002:27;15992:55;;16043:1;16040;16033:12;16082:422;16171:1;16214:5;16171:1;16228:270;16249:7;16239:8;16236:21;16228:270;;;16308:4;16304:1;16300:6;16296:17;16290:4;16287:27;16284:53;;;16317:18;;:::i;:::-;16367:7;16357:8;16353:22;16350:55;;;16387:16;;;;16350:55;16466:22;;;;16426:15;;;;16228:270;;;16232:3;16082:422;;;;;:::o;16509:806::-;16558:5;16588:8;16578:80;;-1:-1:-1;16629:1:49;16643:5;;16578:80;16677:4;16667:76;;-1:-1:-1;16714:1:49;16728:5;;16667:76;16759:4;16777:1;16772:59;;;;16845:1;16840:130;;;;16752:218;;16772:59;16802:1;16793:10;;16816:5;;;16840:130;16877:3;16867:8;16864:17;16861:43;;;16884:18;;:::i;:::-;-1:-1:-1;;16940:1:49;16926:16;;16955:5;;16752:218;;17054:2;17044:8;17041:16;17035:3;17029:4;17026:13;17022:36;17016:2;17006:8;17003:16;16998:2;16992:4;16989:12;16985:35;16982:77;16979:159;;;-1:-1:-1;17091:19:49;;;17123:5;;16979:159;17170:34;17195:8;17189:4;17170:34;:::i;:::-;17240:6;17236:1;17232:6;17228:19;17219:7;17216:32;17213:58;;;17251:18;;:::i;:::-;17289:20;;-1:-1:-1;16509:806:49;;;;;:::o;17320:140::-;17378:5;17407:47;17448:4;17438:8;17434:19;17428:4;17407:47;:::i;17465:184::-;17535:6;17588:2;17576:9;17567:7;17563:23;17559:32;17556:52;;;17604:1;17601;17594:12;17556:52;-1:-1:-1;17627:16:49;;17465:184;-1:-1:-1;17465:184:49:o;17654:168::-;17694:7;17760:1;17756;17752:6;17748:14;17745:1;17742:21;17737:1;17730:9;17723:17;17719:45;17716:71;;;17767:18;;:::i;:::-;-1:-1:-1;17807:9:49;;17654:168::o;17827:127::-;17888:10;17883:3;17879:20;17876:1;17869:31;17919:4;17916:1;17909:15;17943:4;17940:1;17933:15;17959:120;17999:1;18025;18015:35;;18030:18;;:::i;:::-;-1:-1:-1;18064:9:49;;17959:120::o;19039:125::-;19079:4;19107:1;19104;19101:8;19098:34;;;19112:18;;:::i;:::-;-1:-1:-1;19149:9:49;;19039:125::o;19525:287::-;19565:7;-1:-1:-1;;;;;19658:2:49;19655:1;19651:10;19688:2;19685:1;19681:10;19744:3;19740:2;19736:12;19731:3;19728:21;19721:3;19714:11;19707:19;19703:47;19700:73;;;19753:18;;:::i;:::-;19793:13;;19525:287;-1:-1:-1;;;;19525:287:49:o;19817:216::-;19857:1;-1:-1:-1;;;;;19944:2:49;19941:1;19937:10;19966:3;19956:37;;19973:18;;:::i;:::-;20011:10;;20007:20;;;;;19817:216;-1:-1:-1;;19817:216:49:o;23253:407::-;23455:2;23437:21;;;23494:2;23474:18;;;23467:30;23533:34;23528:2;23513:18;;23506:62;-1:-1:-1;;;23599:2:49;23584:18;;23577:41;23650:3;23635:19;;23253:407::o;23665:245::-;23732:6;23785:2;23773:9;23764:7;23760:23;23756:32;23753:52;;;23801:1;23798;23791:12;23753:52;23833:9;23827:16;23852:28;23874:5;23852:28;:::i;25440:258::-;25512:1;25522:113;25536:6;25533:1;25530:13;25522:113;;;25612:11;;;25606:18;25593:11;;;25586:39;25558:2;25551:10;25522:113;;;25653:6;25650:1;25647:13;25644:48;;;-1:-1:-1;;25688:1:49;25670:16;;25663:27;25440:258::o;25703:274::-;25832:3;25870:6;25864:13;25886:53;25932:6;25927:3;25920:4;25912:6;25908:17;25886:53;:::i;:::-;25955:16;;;;;25703:274;-1:-1:-1;;25703:274:49:o;25982:383::-;26131:2;26120:9;26113:21;26094:4;26163:6;26157:13;26206:6;26201:2;26190:9;26186:18;26179:34;26222:66;26281:6;26276:2;26265:9;26261:18;26256:2;26248:6;26244:15;26222:66;:::i;:::-;26349:2;26328:15;-1:-1:-1;;26324:29:49;26309:45;;;;26356:2;26305:54;;25982:383;-1:-1:-1;;25982:383:49:o",
    "language": "Solidity",
    "natspec": {
      "kind": "dev",
      "methods": {
        "blacklistCurrency(address)": {
          "notice": "Used to blacklist a ERC20 token so it can not be used any longer as a payment currency"
        },
        "createERC20Raffle(address,uint128,address,uint128,uint64,uint64,uint64,bytes32)": {
          "notice": "Allows users to create a raffle of an ERC20 asset",
          "params": {
            "_amount": "Quantity of tokens to be raffled",
            "_currencyInPolygon": "Polygon ERC20 token address used to buy tickets. address(0) should be put here if the currency will be MATIC",
            "_durationInSeconds": "Duration in seconds of the raffle",
            "_merkleRoot": "Used so only whitelisted users can buy raffle tickets",
            "_minimumTicketsSold": "Number of tickets that should be sold in order to be a success raffle. If this minimum amount is not reached the owner of the raffle will be able to cancel the raffle, returning the users their payment plus a little collateral to cover for the gas fees. If this amount is reached, normal flow will be followed",
            "_numberOfTickets": "Number of tickets that will be sold as maximum in the raffle",
            "_pricePerTicket": "Price per ticket. It can be zero in case of an \"airdrop\"",
            "_tokenAddress": "Address of the token amount to raffle"
          }
        },
        "createERC721Raffle(address,uint128,address,uint128,uint64,uint64,uint64,bytes32)": {
          "notice": "Allows users to create a raffle of an ERC721 asset",
          "params": {
            "_currencyInPolygon": "Polygon ERC20 token address used to buy tickets. address(0) should be put here if the currency will be MATIC",
            "_durationInSeconds": "Duration in seconds of the raffle",
            "_merkleRoot": "Used so only whitelisted users can buy raffle tickets",
            "_minimumTicketsSold": "Number of tickets that should be sold in order to be a success raffle. If this minimum amount is not reached the owner of the raffle will be able to cancel the raffle, returning the users their payment plus a little collateral to cover for the gas fees. If this amount is reached, normal flow will be followed.",
            "_nftCollection": "Address of the NFT to raffle",
            "_nftId": "NFTid of the _nftCollection",
            "_numberOfTickets": "Number of tickets that will be sold as maximum in the raffle",
            "_pricePerTicket": "Price per ticket. It can be zero in case of an \"airdrop\""
          }
        },
        "isCurrencyWhitelisted(address)": {
          "notice": "############################################################################################                 VIEW FUNCTIONS  ############################################################################################"
        },
        "owner()": {
          "details": "Returns the address of the current owner."
        },
        "paused()": {
          "details": "Returns true if the contract is paused, and false otherwise."
        },
        "polygonCallback((address,address,bool,uint256,uint256)[])": {
          "notice": "Relayer will call this function to send updates from Polygon"
        },
        "renounceOwnership()": {
          "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
        },
        "setOpeningFee(uint256)": {
          "notice": "Used to set a new OPENING_FEE"
        },
        "setPriceFeed(address)": {
          "notice": "Used to set a new CurrencyPriceFeed contract"
        },
        "setRelayer(address)": {
          "notice": "Used to set a new relayer account"
        },
        "togglePause()": {
          "notice": "Used to pause/unpause the smart contract by the owner"
        },
        "togglePriceFeed()": {
          "notice": "Used to enable/disable CurrencyPriceFeeds contract"
        },
        "totalAmountClaimable(address)": {
          "notice": "Token address => Amount that owners of the contract can claim as fee rewards address(0) = Ether"
        },
        "transferOwnership(address)": {
          "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
        },
        "whitelistCurrency(address,address)": {
          "notice": "Used to whitelist a new ERC20 token to be used as a payment currency",
          "params": {
            "_ERC20TokenAddressMainnet": "Address of the token in Mainnet",
            "_ERC20TokenAddressPolygon": "Address of the token in Polygon"
          }
        },
        "withdrawFees(address[],uint256[],address)": {
          "notice": "Used by the contract owners to claim the fees accrued",
          "params": {
            "_amounts": "List of amounts that will be withdrawn",
            "_receiver": "Address that will receive the fees",
            "_tokenAddress": "List of tokens to withdraw the fees"
          }
        }
      },
      "version": 1
    },
    "offset": [
      1336,
      19410
    ],
    "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1B7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x724E78DA GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xA21AFC76 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC4AE3168 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC4AE3168 EQ PUSH2 0x4E7 JUMPI DUP1 PUSH4 0xDA653F00 EQ PUSH2 0x4FC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0xFCC76B80 EQ PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA21AFC76 EQ PUSH2 0x492 JUMPI DUP1 PUSH4 0xB3F8D40D EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0xC2F90A2B EQ PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8406C079 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x8406C079 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x86375994 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0x95E3D9AB EQ PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x724E78DA EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x744476B6 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0x7B631DA5 EQ PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E4D58BB GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x6548E9BC GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x6548E9BC EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0x66998E50 EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x697CA930 EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E4D58BB EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x52DEFBD0 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x34F65FA2 GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x34F65FA2 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x436CC138 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x43B938C5 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23BBCB29 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x2BF78DD8 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x31F91A84 EQ PUSH2 0x1FA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CF PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0x2621 JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH1 0x98 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x2700 JUMP JUMPDEST PUSH2 0x996 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x2783 JUMP JUMPDEST PUSH2 0xB12 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x27BC JUMP JUMPDEST PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0x27BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x2783 JUMP JUMPDEST PUSH2 0xBFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x1F4 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0x27BC JUMP JUMPDEST PUSH2 0xDEB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH2 0x26A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x33C CALLDATASIZE PUSH1 0x4 PUSH2 0x27BC JUMP JUMPDEST PUSH2 0xEB2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x2710 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9D SLOAD PUSH2 0x26A SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0xF23 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x27BC JUMP JUMPDEST PUSH2 0xF37 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x3C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x27D9 JUMP JUMPDEST PUSH2 0xFA8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9B SLOAD PUSH2 0x3E6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9A SLOAD PUSH2 0x3E6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x439 CALLDATASIZE PUSH1 0x4 PUSH2 0x281E JUMP JUMPDEST PUSH2 0x11AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E6 PUSH2 0x477 CALLDATASIZE PUSH1 0x4 PUSH2 0x27BC JUMP JUMPDEST PUSH1 0x9C PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x4AD CALLDATASIZE PUSH1 0x4 PUSH2 0x27BC JUMP JUMPDEST PUSH1 0x99 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1CF PUSH2 0x4CD CALLDATASIZE PUSH1 0x4 PUSH2 0x2621 JUMP JUMPDEST PUSH2 0x11F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x15C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x15E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x517 CALLDATASIZE PUSH1 0x4 PUSH2 0x2837 JUMP JUMPDEST PUSH2 0x1607 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x537 CALLDATASIZE PUSH1 0x4 PUSH2 0x27BC JUMP JUMPDEST PUSH2 0x1A59 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x548 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x557 CALLDATASIZE PUSH1 0x4 PUSH2 0x292B JUMP JUMPDEST PUSH2 0x1AD2 JUMP JUMPDEST PUSH2 0x564 PUSH2 0x1F28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP9 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D5 SWAP2 SWAP1 PUSH2 0x2A2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x63A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F206E6F74206F776E2074686973204E4654000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x6A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546869732063757272656E6379206973206E6F742077686974656C6973746564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x631 JUMP JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x6CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x631 SWAP1 PUSH2 0x2A4A JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT ISZERO PUSH2 0x6FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x631 SWAP1 PUSH2 0x2A8E JUMP JUMPDEST PUSH2 0xA8C0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT ISZERO PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E696D756D206475726174696F6E20697320313220686F75727300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x631 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x765 DUP8 DUP8 DUP7 PUSH2 0xFA8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x98 SLOAD PUSH2 0x775 SWAP2 SWAP1 PUSH2 0x2AF2 JUMP JUMPDEST CALLVALUE EQ PUSH2 0x7B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B98DBDC9C9958DD081999595CC81CD95B9D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x631 JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x99 PUSH1 0x20 MSTORE PUSH32 0x235D629DC802037DED8C61CB27FB29E40FA01B299719D8F991FFE20BDCC59F4F DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x7F7 SWAP1 DUP5 SWAP1 PUSH2 0x2AF2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP10 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x852 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x866 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP12 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP3 POP PUSH4 0x6352211E SWAP2 POP PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8DB SWAP2 SWAP1 PUSH2 0x2A2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x92D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x631 JUMP JUMPDEST PUSH32 0xB26C0BF32D8D3EFF0D0561D0B30F4BF8962A18678833B276FCBBE06C48E9EAAA DUP10 CALLER PUSH1 0x0 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0x96A PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP14 AND TIMESTAMP PUSH2 0x2AF2 JUMP JUMPDEST DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x983 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x99E PUSH2 0x1F6E JUMP JUMPDEST DUP4 DUP3 DUP2 EQ PUSH2 0x9EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4172726179206C656E6774687320646F206E6F74206D61746368000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x631 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB07 JUMPI DUP9 DUP9 DUP3 DUP2 DUP2 LT PUSH2 0xA0E JUMPI PUSH2 0xA0E PUSH2 0x2BC3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA23 SWAP2 SWAP1 PUSH2 0x27BC JUMP JUMPDEST SWAP2 POP DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0xA37 JUMPI PUSH2 0xA37 PUSH2 0x2BC3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP3 POP PUSH1 0x99 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x82DADEEADCE840E8DEDE40D0D2CED PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x631 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAC4 JUMPI PUSH2 0xABF DUP6 DUP5 PUSH2 0x1FC8 JUMP JUMPDEST PUSH2 0xAD8 JUMP JUMPDEST PUSH2 0xAD8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP7 DUP6 PUSH2 0x210C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x99 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP5 SWAP1 SUB SWAP1 SSTORE PUSH2 0xB00 DUP2 PUSH2 0x2BD9 JUMP JUMPDEST SWAP1 POP PUSH2 0x9F4 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB1A PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20697320616C72656164792077686974656C697374656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x631 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x9C DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP7 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE MLOAD SWAP1 DUP2 MSTORE PUSH32 0x5C6CF68A9D7E416D0EEE740661627DD794257920F1C63DDAE6C6AF81D02D12EA SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xC1D JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xC37 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC37 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xC9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x631 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xCBD JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xCC5 PUSH2 0x216F JUMP JUMPDEST PUSH2 0xCCD PUSH2 0x219E JUMP JUMPDEST PUSH1 0x9A DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x9B DUP1 SLOAD SWAP3 DUP6 AND SWAP3 DUP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x9D DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE PUSH20 0x7CEB23FD6BC0ADD59E62AC25578270CFF1B9F619 PUSH1 0x0 MSTORE PUSH32 0x1A0ACAC70E8CAB5A31AC0C028653F1612AEC657B1C8333C74EABA0C30E0EE391 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x9C PUSH1 0x20 MSTORE PUSH32 0x54CB885AAE8EFE3410AF7107761EDCAE51EE12661F9443184B5E9D063DDF7FA5 DUP1 SLOAD SWAP1 SWAP2 AND PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 OR SWAP1 SSTORE PUSH7 0x6A94D74F430000 PUSH1 0x98 SSTORE DUP1 ISZERO PUSH2 0xDE6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xDF3 PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xE5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206973206E6F742077686974656C69737465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x631 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xDC0548BC90523A9E943EA77D199875FDC1E4F8A419B6D53A595B5E6671480E5 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xEBA PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x9A SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x605CA4E43489FB38B91AA63DD9147CD3847957694B080B9285EC898B34269F0C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x9A DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xF2B PUSH2 0x1F6E JUMP JUMPDEST PUSH2 0xF35 PUSH1 0x0 PUSH2 0x21CD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xF3F PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x9B SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xA8ABE0398416476DB5B05737CD4DA3B3CBDE5012D978A6A6C3FD49D321753536 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x9B DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 MLOAD SWAP4 SWAP5 DUP6 SWAP5 SWAP2 AND SWAP3 PUSH4 0x313CE567 SWAP3 PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1000 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1024 SWAP2 SWAP1 PUSH2 0x2BF2 JUMP JUMPDEST PUSH2 0x102F SWAP1 PUSH1 0xA PUSH2 0x2CFB JUMP JUMPDEST PUSH1 0x9B SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xA4B943FB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 AND SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP10 AND SWAP3 AND SWAP1 PUSH4 0xA4B943FB SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10C4 SWAP2 SWAP1 PUSH2 0x2D0A JUMP JUMPDEST PUSH2 0x10CE SWAP2 SWAP1 PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x10D8 SWAP2 SWAP1 PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x10E2 SWAP2 SWAP1 PUSH2 0x2D58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 PUSH2 0x10F5 PUSH2 0x1F4 DUP5 PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x10FF SWAP2 SWAP1 PUSH2 0x2D58 JUMP JUMPDEST PUSH1 0x9B SLOAD PUSH1 0x40 MLOAD PUSH4 0xA4B943FB PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA4B943FB SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1161 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1185 SWAP2 SWAP1 PUSH2 0x2D0A JUMP JUMPDEST PUSH2 0x1197 DUP4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x11A1 SWAP2 SWAP1 PUSH2 0x2D58 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x11B6 PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x9DC2340C6769757C8D7DFE3A65A3F1E297ED8F919BED31501223AC8AA85DC63D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x98 SSTORE JUMP JUMPDEST PUSH2 0x11FF PUSH2 0x1F28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1267 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546869732063757272656E6379206973206E6F742077686974656C6973746564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x631 JUMP JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x1290 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x631 SWAP1 PUSH2 0x2A4A JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT ISZERO PUSH2 0x12C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x631 SWAP1 PUSH2 0x2A8E JUMP JUMPDEST PUSH2 0xA8C0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT ISZERO PUSH2 0x131D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E696D756D206475726174696F6E20697320313220686F75727300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x631 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x132D DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1607 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH2 0x139B JUMPI PUSH1 0x98 SLOAD PUSH2 0x1353 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP11 AND PUSH2 0x2AF2 JUMP JUMPDEST CALLVALUE EQ PUSH2 0x1396 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B98DBDC9C9958DD08199959481CD95B9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x631 JUMP JUMPDEST PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x98 SLOAD CALLVALUE EQ PUSH2 0x13EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F7272656374204F50454E494E475F4645452073656E74000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x631 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1433 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1457 SWAP2 SWAP1 PUSH2 0x2D0A JUMP JUMPDEST SWAP1 POP PUSH2 0x1477 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND CALLER ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP14 AND PUSH2 0x221F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14E2 SWAP2 SWAP1 PUSH2 0x2D0A JUMP JUMPDEST SWAP1 POP PUSH2 0x14EE DUP3 DUP3 PUSH2 0x2D6C JUMP JUMPDEST DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND EQ PUSH2 0x1545 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323020746F6B656E207472616E73666572206661696C65640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x631 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x99 PUSH1 0x20 MSTORE PUSH32 0x235D629DC802037DED8C61CB27FB29E40FA01B299719D8F991FFE20BDCC59F4F DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1586 SWAP1 DUP5 SWAP1 PUSH2 0x2AF2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH32 0xB26C0BF32D8D3EFF0D0561D0B30F4BF8962A18678833B276FCBBE06C48E9EAAA SWAP1 POP DUP10 CALLER PUSH1 0x1 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0x96A PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP14 AND TIMESTAMP PUSH2 0x2AF2 JUMP JUMPDEST PUSH2 0x15D1 PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x9D DUP1 SLOAD PUSH1 0xFF NOT DUP2 AND PUSH1 0xFF SWAP1 SWAP2 AND ISZERO OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x15ED PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH2 0x15FF JUMPI PUSH2 0xF35 PUSH2 0x2257 JUMP JUMPDEST PUSH2 0xF35 PUSH2 0x22B1 JUMP JUMPDEST PUSH1 0x9D SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0xFF AND PUSH2 0x1653 JUMPI PUSH2 0x2710 PUSH2 0x1F4 PUSH2 0x162F DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 AND PUSH2 0x2D83 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x1642 SWAP2 SWAP1 PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x164C SWAP2 SWAP1 PUSH2 0x2D58 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A4E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH2 0x1717 JUMPI PUSH1 0x9B SLOAD PUSH1 0x40 MLOAD PUSH4 0xA4B943FB PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP11 POP PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP12 AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA4B943FB SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16FC SWAP2 SWAP1 PUSH2 0x2D0A JUMP JUMPDEST PUSH2 0x1706 SWAP2 SWAP1 PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x1710 SWAP2 SWAP1 PUSH2 0x2D58 JUMP JUMPDEST SWAP1 POP PUSH2 0x1812 JUMP JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1755 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1779 SWAP2 SWAP1 PUSH2 0x2BF2 JUMP JUMPDEST PUSH2 0x1784 SWAP1 PUSH1 0xA PUSH2 0x2CFB JUMP JUMPDEST PUSH1 0x9B SLOAD PUSH1 0x40 MLOAD PUSH4 0xA4B943FB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP13 AND SWAP3 AND SWAP1 PUSH4 0xA4B943FB SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17FB SWAP2 SWAP1 PUSH2 0x2D0A JUMP JUMPDEST PUSH2 0x1805 SWAP2 SWAP1 PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x180F SWAP2 SWAP1 PUSH2 0x2D58 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 MLOAD SWAP4 SWAP5 AND SWAP3 PUSH4 0x313CE567 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1869 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x188D SWAP2 SWAP1 PUSH2 0x2BF2 JUMP JUMPDEST PUSH2 0x1898 SWAP1 PUSH1 0xA PUSH2 0x2CFB JUMP JUMPDEST PUSH1 0x9B SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xA4B943FB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP12 AND SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP12 AND SWAP3 AND SWAP1 PUSH4 0xA4B943FB SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1909 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x192D SWAP2 SWAP1 PUSH2 0x2D0A JUMP JUMPDEST PUSH2 0x1937 SWAP2 SWAP1 PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x1941 SWAP2 SWAP1 PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x194B SWAP2 SWAP1 PUSH2 0x2D58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH2 0x195C DUP4 PUSH2 0x2710 PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x1966 SWAP2 SWAP1 PUSH2 0x2D58 JUMP JUMPDEST SWAP1 POP PUSH2 0x2710 DUP2 GT PUSH2 0x197A JUMPI PUSH1 0x0 SWAP4 POP PUSH2 0x1A4A JUMP JUMPDEST PUSH2 0x2710 DUP2 GT DUP1 ISZERO PUSH2 0x198D JUMPI POP PUSH2 0x2AF8 DUP2 GT ISZERO JUMPDEST ISZERO PUSH2 0x19CE JUMPI PUSH2 0x2710 PUSH2 0x19A8 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 AND PUSH2 0x2D83 JUMP JUMPDEST PUSH2 0x19B4 SWAP1 PUSH2 0x1F4 PUSH2 0x2D83 JUMP JUMPDEST PUSH2 0x19BE SWAP2 SWAP1 PUSH2 0x2DB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP4 POP PUSH2 0x1A4A JUMP JUMPDEST PUSH2 0x2AF8 DUP2 GT DUP1 ISZERO PUSH2 0x19E1 JUMPI POP PUSH2 0x30D4 DUP2 GT ISZERO JUMPDEST ISZERO PUSH2 0x1A08 JUMPI PUSH2 0x2710 PUSH2 0x19FC DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 AND PUSH2 0x2D83 JUMP JUMPDEST PUSH2 0x19B4 SWAP1 PUSH2 0x3E8 PUSH2 0x2D83 JUMP JUMPDEST PUSH2 0x30D4 DUP2 GT ISZERO PUSH2 0x1A4A JUMPI PUSH2 0x2710 PUSH2 0x1A28 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 AND PUSH2 0x2D83 JUMP JUMPDEST PUSH2 0x1A34 SWAP1 PUSH2 0x7D0 PUSH2 0x2D83 JUMP JUMPDEST PUSH2 0x1A3E SWAP2 SWAP1 PUSH2 0x2DB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP4 POP JUMPDEST POP POP POP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1A61 PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1AC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x631 JUMP JUMPDEST PUSH2 0x1ACF DUP2 PUSH2 0x21CD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x9A SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x27B7363CA932B630BCB2B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x631 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDE6 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1B39 JUMPI PUSH2 0x1B39 PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD ISZERO PUSH2 0x1C5A JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1B67 JUMPI PUSH2 0x1B67 PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1C55 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1B93 JUMPI PUSH2 0x1B93 PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD ADDRESS DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1BC0 JUMPI PUSH2 0x1BC0 PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1BDE JUMPI PUSH2 0x1BDE PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C50 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C77 JUMPI PUSH2 0x1C77 PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1D81 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1CAE JUMPI PUSH2 0x1CAE PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1D0C JUMPI PUSH2 0x1C55 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1CDD JUMPI PUSH2 0x1CDD PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1CFB JUMPI PUSH2 0x1CFB PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH2 0x1FC8 JUMP JUMPDEST PUSH2 0x1D81 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1D21 JUMPI PUSH2 0x1D21 PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1D3F JUMPI PUSH2 0x1D3F PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1D5D JUMPI PUSH2 0x1D5D PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x210C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1D95 JUMPI PUSH2 0x1D95 PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x80 ADD MLOAD GT ISZERO PUSH2 0x1E1C JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1DB9 JUMPI PUSH2 0x1DB9 PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0x99 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1DDB JUMPI PUSH2 0x1DDB PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1E16 SWAP2 SWAP1 PUSH2 0x2AF2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH32 0xFDF87137985FCE097C2059F7E3BD28B9104995CAD66709FDECBAA5E8E48DA9AF DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1E4F JUMPI PUSH2 0x1E4F PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1E6D JUMPI PUSH2 0x1E6D PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1E8B JUMPI PUSH2 0x1E8B PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1EA9 JUMPI PUSH2 0x1EA9 PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x1EC7 JUMPI PUSH2 0x1EC7 PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x1F10 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP4 SWAP1 SWAP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1F21 DUP2 PUSH2 0x2BD9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B1F JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x631 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x631 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x2018 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5F68616E646C6545746865725472616E7366657220696E736F6C76656E740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x631 JUMP JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP4 SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x206D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2072 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2106 JUMPI PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x20DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x2106 SWAP4 POP PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 SWAP3 POP DUP8 SWAP2 POP DUP7 SWAP1 POP PUSH2 0x210C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xDE6 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x22EA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2196 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x631 SWAP1 PUSH2 0x2DD8 JUMP JUMPDEST PUSH2 0xF35 PUSH2 0x23BC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x21C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x631 SWAP1 PUSH2 0x2DD8 JUMP JUMPDEST PUSH2 0xF35 PUSH2 0x23EC JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2106 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x2138 JUMP JUMPDEST PUSH2 0x225F PUSH2 0x1F28 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2294 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x22B9 PUSH2 0x241F JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER PUSH2 0x2294 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x233F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2468 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xDE6 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x235D SWAP2 SWAP1 PUSH2 0x2E23 JUMP JUMPDEST PUSH2 0xDE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x631 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x23E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x631 SWAP1 PUSH2 0x2DD8 JUMP JUMPDEST PUSH2 0xF35 CALLER PUSH2 0x21CD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2413 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x631 SWAP1 PUSH2 0x2DD8 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH2 0xF35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x631 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2477 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x247F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x24E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x631 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x2537 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x631 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2553 SWAP2 SWAP1 PUSH2 0x2E6C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2590 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2595 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1A4E DUP3 DUP3 DUP7 PUSH1 0x60 DUP4 ISZERO PUSH2 0x25AF JUMPI POP DUP2 PUSH2 0x11A7 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x25BF JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x631 SWAP2 SWAP1 PUSH2 0x2E88 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1ACF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2605 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2605 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x263E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x2649 DUP2 PUSH2 0x25D9 JUMP JUMPDEST SWAP8 POP PUSH2 0x2657 PUSH1 0x20 DUP11 ADD PUSH2 0x25EE JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x2667 DUP2 PUSH2 0x25D9 JUMP JUMPDEST SWAP6 POP PUSH2 0x2675 PUSH1 0x60 DUP11 ADD PUSH2 0x25EE JUMP JUMPDEST SWAP5 POP PUSH2 0x2683 PUSH1 0x80 DUP11 ADD PUSH2 0x260A JUMP JUMPDEST SWAP4 POP PUSH2 0x2691 PUSH1 0xA0 DUP11 ADD PUSH2 0x260A JUMP JUMPDEST SWAP3 POP PUSH2 0x269F PUSH1 0xC0 DUP11 ADD PUSH2 0x260A JUMP JUMPDEST SWAP2 POP PUSH1 0xE0 DUP10 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x26C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x26DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x26F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x272F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x273B DUP10 DUP4 DUP11 ADD PUSH2 0x26B5 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2761 DUP9 DUP3 DUP10 ADD PUSH2 0x26B5 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x2775 DUP2 PUSH2 0x25D9 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2796 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x27A1 DUP2 PUSH2 0x25D9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x27B1 DUP2 PUSH2 0x25D9 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11A7 DUP2 PUSH2 0x25D9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x27EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x27F9 DUP2 PUSH2 0x25D9 JUMP JUMPDEST SWAP3 POP PUSH2 0x2807 PUSH1 0x20 DUP6 ADD PUSH2 0x25EE JUMP JUMPDEST SWAP2 POP PUSH2 0x2815 PUSH1 0x40 DUP6 ADD PUSH2 0x260A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2830 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2850 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x285B DUP2 PUSH2 0x25D9 JUMP JUMPDEST SWAP6 POP PUSH2 0x2869 PUSH1 0x20 DUP9 ADD PUSH2 0x25EE JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x2879 DUP2 PUSH2 0x25D9 JUMP JUMPDEST SWAP4 POP PUSH2 0x2887 PUSH1 0x60 DUP9 ADD PUSH2 0x25EE JUMP JUMPDEST SWAP3 POP PUSH2 0x2895 PUSH1 0x80 DUP9 ADD PUSH2 0x260A JUMP JUMPDEST SWAP2 POP PUSH2 0x28A3 PUSH1 0xA0 DUP9 ADD PUSH2 0x260A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x28E7 JUMPI PUSH2 0x28E7 PUSH2 0x28AF JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2915 JUMPI PUSH2 0x2915 PUSH2 0x28AF JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1ACF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x293E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2969 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x297B JUMPI PUSH2 0x297B PUSH2 0x28AF JUMP JUMPDEST PUSH2 0x2989 DUP5 DUP3 PUSH1 0x5 SHL ADD PUSH2 0x28ED JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP3 POP PUSH1 0xA0 SWAP2 DUP3 MUL DUP5 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x29A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x2A21 JUMPI DUP1 DUP6 DUP11 SUB SLT ISZERO PUSH2 0x29C5 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x29CD PUSH2 0x28C5 JUMP JUMPDEST DUP6 CALLDATALOAD PUSH2 0x29D8 DUP2 PUSH2 0x25D9 JUMP JUMPDEST DUP2 MSTORE DUP6 DUP8 ADD CALLDATALOAD PUSH2 0x29E7 DUP2 PUSH2 0x25D9 JUMP JUMPDEST DUP2 DUP9 ADD MSTORE PUSH1 0x40 DUP7 DUP2 ADD CALLDATALOAD PUSH2 0x29FA DUP2 PUSH2 0x291D JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP7 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP8 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE DUP5 MSTORE SWAP4 DUP5 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x29AD JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x11A7 DUP2 PUSH2 0x25D9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x526166666C6573206D7573742068617665206174206C65617374203220746963 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x6B657473 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x5F6D696E696D756D5469636B657473536F6C642073686F756C64203C3D205F6E PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x756D6265724F665469636B657473 PUSH1 0x90 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2B05 JUMPI PUSH2 0x2B05 PUSH2 0x2ADC JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND DUP3 MSTORE DUP12 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x160 DUP2 ADD PUSH1 0x2 DUP12 LT PUSH2 0x2B41 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP11 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2B5C PUSH1 0x60 DUP4 ADD DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP9 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 AND PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x120 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH2 0x140 ADD MSTORE SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2BEB JUMPI PUSH2 0x2BEB PUSH2 0x2ADC JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x11A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x2C50 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2C36 JUMPI PUSH2 0x2C36 PUSH2 0x2ADC JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x2C43 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x2C1A JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2C67 JUMPI POP PUSH1 0x1 PUSH2 0x2CF5 JUMP JUMPDEST DUP2 PUSH2 0x2C74 JUMPI POP PUSH1 0x0 PUSH2 0x2CF5 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2C8A JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2C94 JUMPI PUSH2 0x2CB0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2CF5 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2CA5 JUMPI PUSH2 0x2CA5 PUSH2 0x2ADC JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x2CF5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2CD3 JUMPI POP DUP2 DUP2 EXP PUSH2 0x2CF5 JUMP JUMPDEST PUSH2 0x2CDD DUP4 DUP4 PUSH2 0x2C15 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2CF1 JUMPI PUSH2 0x2CF1 PUSH2 0x2ADC JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A7 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x2C58 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2D3D JUMPI PUSH2 0x2D3D PUSH2 0x2ADC JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2D67 JUMPI PUSH2 0x2D67 PUSH2 0x2D42 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2D7E JUMPI PUSH2 0x2D7E PUSH2 0x2ADC JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP4 AND DUP2 DUP6 AND DUP2 DUP4 DIV DUP2 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2DA9 JUMPI PUSH2 0x2DA9 PUSH2 0x2ADC JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP5 AND DUP1 PUSH2 0x2DCC JUMPI PUSH2 0x2DCC PUSH2 0x2D42 JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x11A7 DUP2 PUSH2 0x291D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E5B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2E43 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2106 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2E7E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2E40 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2EA7 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2E40 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 MSTORE8 DUP2 0x49 0xA8 0x49 CALLDATACOPY EXTCODESIZE 0xD9 RETURN SWAP9 0xE3 PUSH9 0xA1FC8665BAA9D71DB6 0xBB GT PUSH5 0x44FFDF6BAF 0xAC 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
    "pcMap": {
      "0": {
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x80"
      },
      "2": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "4": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "5": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "7": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "8": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "LT",
        "path": "1"
      },
      "9": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1B7"
      },
      "12": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "13": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "15": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "CALLDATALOAD",
        "path": "1"
      },
      "16": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0xE0"
      },
      "18": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "SHR",
        "path": "1"
      },
      "19": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "20": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x724E78DA"
      },
      "25": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "GT",
        "path": "1"
      },
      "26": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xEC"
      },
      "29": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "30": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "31": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0xA21AFC76"
      },
      "36": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "GT",
        "path": "1"
      },
      "37": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x8A"
      },
      "40": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "41": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "42": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0xC4AE3168"
      },
      "47": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "GT",
        "path": "1"
      },
      "48": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x64"
      },
      "51": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "52": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "53": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0xC4AE3168"
      },
      "58": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "59": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x4E7"
      },
      "62": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "63": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "64": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0xDA653F00"
      },
      "69": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "70": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x4FC"
      },
      "73": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "74": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "75": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0xF2FDE38B"
      },
      "80": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "81": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x51C"
      },
      "84": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "85": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "86": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0xFCC76B80"
      },
      "91": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "92": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x53C"
      },
      "95": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "96": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "98": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "99": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "REVERT",
        "path": "1"
      },
      "100": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "101": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "102": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0xA21AFC76"
      },
      "107": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "108": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x492"
      },
      "111": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "112": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "113": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0xB3F8D40D"
      },
      "118": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "119": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x4BF"
      },
      "122": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "123": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "124": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0xC2F90A2B"
      },
      "129": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "130": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x4D2"
      },
      "133": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "134": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "136": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "137": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "REVERT",
        "path": "1"
      },
      "138": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "139": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "140": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x8406C079"
      },
      "145": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "GT",
        "path": "1"
      },
      "146": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xC6"
      },
      "149": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "150": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "151": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x8406C079"
      },
      "156": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "157": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3FE"
      },
      "160": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "161": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "162": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x86375994"
      },
      "167": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "168": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x41E"
      },
      "171": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "172": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "173": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x8DA5CB5B"
      },
      "178": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "179": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x43E"
      },
      "182": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "183": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "184": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x95E3D9AB"
      },
      "189": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "190": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x45C"
      },
      "193": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "194": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "196": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "197": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "REVERT",
        "path": "1"
      },
      "198": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "199": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "200": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x724E78DA"
      },
      "205": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "206": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x386"
      },
      "209": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "210": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "211": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x744476B6"
      },
      "216": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "217": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3A6"
      },
      "220": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "221": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "222": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x7B631DA5"
      },
      "227": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "228": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3C6"
      },
      "231": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "232": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "234": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "235": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "REVERT",
        "path": "1"
      },
      "236": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "237": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "238": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x4E4D58BB"
      },
      "243": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "GT",
        "path": "1"
      },
      "244": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x159"
      },
      "247": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "248": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "249": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x6548E9BC"
      },
      "254": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "GT",
        "path": "1"
      },
      "255": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x133"
      },
      "258": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "259": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "260": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x6548E9BC"
      },
      "265": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "266": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x321"
      },
      "269": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "270": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "271": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x66998E50"
      },
      "276": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "277": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x341"
      },
      "280": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "281": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "282": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x697CA930"
      },
      "287": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "288": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x357"
      },
      "291": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "292": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "293": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x715018A6"
      },
      "298": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "299": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x371"
      },
      "302": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "303": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "305": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "306": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "REVERT",
        "path": "1"
      },
      "307": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "308": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "309": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x4E4D58BB"
      },
      "314": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "315": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D3"
      },
      "318": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "319": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "320": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x52DEFBD0"
      },
      "325": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "326": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2E9"
      },
      "329": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "330": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "331": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x5C975ABB"
      },
      "336": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "337": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x309"
      },
      "340": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "341": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "343": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "344": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "REVERT",
        "path": "1"
      },
      "345": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "346": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "347": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x34F65FA2"
      },
      "352": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "GT",
        "path": "1"
      },
      "353": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x195"
      },
      "356": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "357": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "358": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x34F65FA2"
      },
      "363": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "364": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x21A"
      },
      "367": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "368": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "369": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x436CC138"
      },
      "374": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "375": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x23A"
      },
      "378": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "379": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "380": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x43B938C5"
      },
      "385": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "386": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x27A"
      },
      "389": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "390": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "391": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x485CC955"
      },
      "396": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "397": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2B3"
      },
      "400": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "401": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "403": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "404": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "REVERT",
        "path": "1"
      },
      "405": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "406": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "407": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x23BBCB29"
      },
      "412": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "413": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1BC"
      },
      "416": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "417": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "418": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x2BF78DD8"
      },
      "423": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "424": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1D1"
      },
      "427": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "428": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "429": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x31F91A84"
      },
      "434": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "EQ",
        "path": "1"
      },
      "435": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1FA"
      },
      "438": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "439": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "440": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "442": {
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "DUP1",
        "path": "1"
      },
      "443": {
        "first_revert": true,
        "fn": null,
        "offset": [
          1336,
          19410
        ],
        "op": "REVERT",
        "path": "1"
      },
      "444": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          5829,
          7501
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "445": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          5829,
          7501
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1CF"
      },
      "448": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          5829,
          7501
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1CA"
      },
      "451": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          5829,
          7501
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "452": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          5829,
          7501
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "454": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          5829,
          7501
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2621"
      },
      "457": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "jump": "i",
        "offset": [
          5829,
          7501
        ],
        "op": "JUMP",
        "path": "1"
      },
      "458": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          5829,
          7501
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "459": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          5829,
          7501
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x55C"
      },
      "462": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "jump": "i",
        "offset": [
          5829,
          7501
        ],
        "op": "JUMP",
        "path": "1"
      },
      "463": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          5829,
          7501
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "464": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          5829,
          7501
        ],
        "op": "STOP",
        "path": "1"
      },
      "465": {
        "offset": [
          2209,
          2235
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "466": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          2209,
          2235
        ],
        "op": "CALLVALUE",
        "path": "1"
      },
      "467": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          2209,
          2235
        ],
        "op": "DUP1",
        "path": "1"
      },
      "468": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          2209,
          2235
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "469": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          2209,
          2235
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1DD"
      },
      "472": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          2209,
          2235
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "473": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          2209,
          2235
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "475": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          2209,
          2235
        ],
        "op": "DUP1",
        "path": "1"
      },
      "476": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          2209,
          2235
        ],
        "op": "REVERT",
        "path": "1"
      },
      "477": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          2209,
          2235
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "478": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          2209,
          2235
        ],
        "op": "POP",
        "path": "1"
      },
      "479": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          2209,
          2235
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1E7"
      },
      "482": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          2209,
          2235
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x98"
      },
      "484": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          2209,
          2235
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "485": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          2209,
          2235
        ],
        "op": "DUP2",
        "path": "1"
      },
      "486": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          2209,
          2235
        ],
        "op": "JUMP",
        "path": "1"
      },
      "487": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          2209,
          2235
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "488": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          2209,
          2235
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "490": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          2209,
          2235
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "491": {
        "op": "SWAP1"
      },
      "492": {
        "op": "DUP2"
      },
      "493": {
        "op": "MSTORE"
      },
      "494": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "496": {
        "op": "ADD"
      },
      "497": {
        "offset": [
          2209,
          2235
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "498": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          2209,
          2235
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "500": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          2209,
          2235
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "501": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          2209,
          2235
        ],
        "op": "DUP1",
        "path": "1"
      },
      "502": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          2209,
          2235
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "503": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          2209,
          2235
        ],
        "op": "SUB",
        "path": "1"
      },
      "504": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          2209,
          2235
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "505": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          2209,
          2235
        ],
        "op": "RETURN",
        "path": "1"
      },
      "506": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15363,
          16286
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "507": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15363,
          16286
        ],
        "op": "CALLVALUE",
        "path": "1"
      },
      "508": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15363,
          16286
        ],
        "op": "DUP1",
        "path": "1"
      },
      "509": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15363,
          16286
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "510": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15363,
          16286
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x206"
      },
      "513": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15363,
          16286
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "514": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15363,
          16286
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "516": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15363,
          16286
        ],
        "op": "DUP1",
        "path": "1"
      },
      "517": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15363,
          16286
        ],
        "op": "REVERT",
        "path": "1"
      },
      "518": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15363,
          16286
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "519": {
        "op": "POP"
      },
      "520": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15363,
          16286
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1CF"
      },
      "523": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15363,
          16286
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x215"
      },
      "526": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15363,
          16286
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "527": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15363,
          16286
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "529": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15363,
          16286
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2700"
      },
      "532": {
        "fn": "MainnetEscrow.withdrawFees",
        "jump": "i",
        "offset": [
          15363,
          16286
        ],
        "op": "JUMP",
        "path": "1"
      },
      "533": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15363,
          16286
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "534": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15363,
          16286
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x996"
      },
      "537": {
        "fn": "MainnetEscrow.withdrawFees",
        "jump": "i",
        "offset": [
          15363,
          16286
        ],
        "op": "JUMP",
        "path": "1"
      },
      "538": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14203,
          14644
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "539": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14203,
          14644
        ],
        "op": "CALLVALUE",
        "path": "1"
      },
      "540": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14203,
          14644
        ],
        "op": "DUP1",
        "path": "1"
      },
      "541": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14203,
          14644
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "542": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14203,
          14644
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x226"
      },
      "545": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14203,
          14644
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "546": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14203,
          14644
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "548": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14203,
          14644
        ],
        "op": "DUP1",
        "path": "1"
      },
      "549": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14203,
          14644
        ],
        "op": "REVERT",
        "path": "1"
      },
      "550": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14203,
          14644
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "551": {
        "op": "POP"
      },
      "552": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14203,
          14644
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1CF"
      },
      "555": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14203,
          14644
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x235"
      },
      "558": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14203,
          14644
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "559": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14203,
          14644
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "561": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14203,
          14644
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2783"
      },
      "564": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "jump": "i",
        "offset": [
          14203,
          14644
        ],
        "op": "JUMP",
        "path": "1"
      },
      "565": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14203,
          14644
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "566": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14203,
          14644
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xB12"
      },
      "569": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "jump": "i",
        "offset": [
          14203,
          14644
        ],
        "op": "JUMP",
        "path": "1"
      },
      "570": {
        "offset": [
          2064,
          2117
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "571": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "CALLVALUE",
        "path": "1"
      },
      "572": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "DUP1",
        "path": "1"
      },
      "573": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "574": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x246"
      },
      "577": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "578": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "580": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "DUP1",
        "path": "1"
      },
      "581": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "REVERT",
        "path": "1"
      },
      "582": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "583": {
        "op": "POP"
      },
      "584": {
        "offset": [
          2064,
          2117
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x26A"
      },
      "587": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x255"
      },
      "590": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "591": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "593": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x27BC"
      },
      "596": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "jump": "i",
        "offset": [
          2064,
          2117
        ],
        "op": "JUMP",
        "path": "1"
      },
      "597": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "598": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x97"
      },
      "600": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "602": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "603": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "605": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "606": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "DUP2",
        "path": "1"
      },
      "607": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "608": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "610": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "611": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "612": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "613": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0xFF"
      },
      "615": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "AND",
        "path": "1"
      },
      "616": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "DUP2",
        "path": "1"
      },
      "617": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "JUMP",
        "path": "1"
      },
      "618": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "619": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "621": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          2064,
          2117
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "622": {
        "op": "SWAP1"
      },
      "623": {
        "op": "ISZERO"
      },
      "624": {
        "op": "ISZERO"
      },
      "625": {
        "op": "DUP2"
      },
      "626": {
        "op": "MSTORE"
      },
      "627": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "629": {
        "op": "ADD"
      },
      "630": {
        "offset": [
          2064,
          2117
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1F1"
      },
      "633": {
        "op": "JUMP"
      },
      "634": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16541,
          16679
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "635": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16541,
          16679
        ],
        "op": "CALLVALUE",
        "path": "1"
      },
      "636": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16541,
          16679
        ],
        "op": "DUP1",
        "path": "1"
      },
      "637": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16541,
          16679
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "638": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16541,
          16679
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x286"
      },
      "641": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16541,
          16679
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "642": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16541,
          16679
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "644": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16541,
          16679
        ],
        "op": "DUP1",
        "path": "1"
      },
      "645": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16541,
          16679
        ],
        "op": "REVERT",
        "path": "1"
      },
      "646": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16541,
          16679
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "647": {
        "op": "POP"
      },
      "648": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16541,
          16679
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x26A"
      },
      "651": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16541,
          16679
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x295"
      },
      "654": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16541,
          16679
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "655": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16541,
          16679
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "657": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16541,
          16679
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x27BC"
      },
      "660": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "jump": "i",
        "offset": [
          16541,
          16679
        ],
        "op": "JUMP",
        "path": "1"
      },
      "661": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16541,
          16679
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "662": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "664": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "666": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "668": {
        "op": "SHL"
      },
      "669": {
        "op": "SUB"
      },
      "670": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16638,
          16672
        ],
        "op": "AND",
        "path": "1",
        "statement": 0
      },
      "671": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16615,
          16619
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "673": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16638,
          16672
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "674": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16638,
          16672
        ],
        "op": "DUP2",
        "path": "1"
      },
      "675": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16638,
          16672
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "676": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16638,
          16659
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x97"
      },
      "678": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16638,
          16672
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "680": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16638,
          16672
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "681": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16638,
          16672
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "683": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16638,
          16672
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "684": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16638,
          16672
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "685": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16638,
          16672
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "686": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16638,
          16672
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0xFF"
      },
      "688": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16638,
          16672
        ],
        "op": "AND",
        "path": "1"
      },
      "689": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16638,
          16672
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "690": {
        "fn": "MainnetEscrow.isCurrencyWhitelisted",
        "offset": [
          16541,
          16679
        ],
        "op": "JUMP",
        "path": "1"
      },
      "691": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4123,
          4688
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "692": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4123,
          4688
        ],
        "op": "CALLVALUE",
        "path": "1"
      },
      "693": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4123,
          4688
        ],
        "op": "DUP1",
        "path": "1"
      },
      "694": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4123,
          4688
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "695": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4123,
          4688
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BF"
      },
      "698": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4123,
          4688
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "699": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4123,
          4688
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "701": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4123,
          4688
        ],
        "op": "DUP1",
        "path": "1"
      },
      "702": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4123,
          4688
        ],
        "op": "REVERT",
        "path": "1"
      },
      "703": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4123,
          4688
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "704": {
        "op": "POP"
      },
      "705": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4123,
          4688
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1CF"
      },
      "708": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4123,
          4688
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2CE"
      },
      "711": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4123,
          4688
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "712": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4123,
          4688
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "714": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4123,
          4688
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2783"
      },
      "717": {
        "fn": "MainnetEscrow.initialize",
        "jump": "i",
        "offset": [
          4123,
          4688
        ],
        "op": "JUMP",
        "path": "1"
      },
      "718": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4123,
          4688
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "719": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4123,
          4688
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xBFD"
      },
      "722": {
        "fn": "MainnetEscrow.initialize",
        "jump": "i",
        "offset": [
          4123,
          4688
        ],
        "op": "JUMP",
        "path": "1"
      },
      "723": {
        "offset": [
          2294,
          2349
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "724": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          2294,
          2349
        ],
        "op": "CALLVALUE",
        "path": "1"
      },
      "725": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          2294,
          2349
        ],
        "op": "DUP1",
        "path": "1"
      },
      "726": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          2294,
          2349
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "727": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          2294,
          2349
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2DF"
      },
      "730": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          2294,
          2349
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "731": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          2294,
          2349
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "733": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          2294,
          2349
        ],
        "op": "DUP1",
        "path": "1"
      },
      "734": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          2294,
          2349
        ],
        "op": "REVERT",
        "path": "1"
      },
      "735": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          2294,
          2349
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "736": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          2294,
          2349
        ],
        "op": "POP",
        "path": "1"
      },
      "737": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          2294,
          2349
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1E7"
      },
      "740": {
        "offset": [
          2346,
          2349
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1F4"
      },
      "743": {
        "offset": [
          2294,
          2349
        ],
        "op": "DUP2",
        "path": "1"
      },
      "744": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          2294,
          2349
        ],
        "op": "JUMP",
        "path": "1"
      },
      "745": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14769,
          15080
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "746": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14769,
          15080
        ],
        "op": "CALLVALUE",
        "path": "1"
      },
      "747": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14769,
          15080
        ],
        "op": "DUP1",
        "path": "1"
      },
      "748": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14769,
          15080
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "749": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14769,
          15080
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2F5"
      },
      "752": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14769,
          15080
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "753": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14769,
          15080
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "755": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14769,
          15080
        ],
        "op": "DUP1",
        "path": "1"
      },
      "756": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14769,
          15080
        ],
        "op": "REVERT",
        "path": "1"
      },
      "757": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14769,
          15080
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "758": {
        "op": "POP"
      },
      "759": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14769,
          15080
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1CF"
      },
      "762": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14769,
          15080
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x304"
      },
      "765": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14769,
          15080
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "766": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14769,
          15080
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "768": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14769,
          15080
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x27BC"
      },
      "771": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "jump": "i",
        "offset": [
          14769,
          15080
        ],
        "op": "JUMP",
        "path": "1"
      },
      "772": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14769,
          15080
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "773": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14769,
          15080
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xDEB"
      },
      "776": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "jump": "i",
        "offset": [
          14769,
          15080
        ],
        "op": "JUMP",
        "path": "1"
      },
      "777": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1858,
          1942
        ],
        "op": "JUMPDEST",
        "path": "28"
      },
      "778": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1858,
          1942
        ],
        "op": "CALLVALUE",
        "path": "28"
      },
      "779": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1858,
          1942
        ],
        "op": "DUP1",
        "path": "28"
      },
      "780": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1858,
          1942
        ],
        "op": "ISZERO",
        "path": "28"
      },
      "781": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1858,
          1942
        ],
        "op": "PUSH2",
        "path": "28",
        "value": "0x315"
      },
      "784": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1858,
          1942
        ],
        "op": "JUMPI",
        "path": "28"
      },
      "785": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1858,
          1942
        ],
        "op": "PUSH1",
        "path": "28",
        "value": "0x0"
      },
      "787": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1858,
          1942
        ],
        "op": "DUP1",
        "path": "28"
      },
      "788": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1858,
          1942
        ],
        "op": "REVERT",
        "path": "28"
      },
      "789": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1858,
          1942
        ],
        "op": "JUMPDEST",
        "path": "28"
      },
      "790": {
        "op": "POP"
      },
      "791": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1928,
          1935
        ],
        "op": "PUSH1",
        "path": "28",
        "statement": 1,
        "value": "0x65"
      },
      "793": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1928,
          1935
        ],
        "op": "SLOAD",
        "path": "28"
      },
      "794": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1928,
          1935
        ],
        "op": "PUSH1",
        "path": "28",
        "value": "0xFF"
      },
      "796": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1928,
          1935
        ],
        "op": "AND",
        "path": "28"
      },
      "797": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1858,
          1942
        ],
        "op": "PUSH2",
        "path": "28",
        "value": "0x26A"
      },
      "800": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1858,
          1942
        ],
        "op": "JUMP",
        "path": "28"
      },
      "801": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13083,
          13223
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "802": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13083,
          13223
        ],
        "op": "CALLVALUE",
        "path": "1"
      },
      "803": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13083,
          13223
        ],
        "op": "DUP1",
        "path": "1"
      },
      "804": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13083,
          13223
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "805": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13083,
          13223
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x32D"
      },
      "808": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13083,
          13223
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "809": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13083,
          13223
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "811": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13083,
          13223
        ],
        "op": "DUP1",
        "path": "1"
      },
      "812": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13083,
          13223
        ],
        "op": "REVERT",
        "path": "1"
      },
      "813": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13083,
          13223
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "814": {
        "op": "POP"
      },
      "815": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13083,
          13223
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1CF"
      },
      "818": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13083,
          13223
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x33C"
      },
      "821": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13083,
          13223
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "822": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13083,
          13223
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "824": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13083,
          13223
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x27BC"
      },
      "827": {
        "fn": "MainnetEscrow.setRelayer",
        "jump": "i",
        "offset": [
          13083,
          13223
        ],
        "op": "JUMP",
        "path": "1"
      },
      "828": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13083,
          13223
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "829": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13083,
          13223
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xEB2"
      },
      "832": {
        "fn": "MainnetEscrow.setRelayer",
        "jump": "i",
        "offset": [
          13083,
          13223
        ],
        "op": "JUMP",
        "path": "1"
      },
      "833": {
        "offset": [
          2355,
          2414
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "834": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          2355,
          2414
        ],
        "op": "CALLVALUE",
        "path": "1"
      },
      "835": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          2355,
          2414
        ],
        "op": "DUP1",
        "path": "1"
      },
      "836": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          2355,
          2414
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "837": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          2355,
          2414
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x34D"
      },
      "840": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          2355,
          2414
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "841": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          2355,
          2414
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "843": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          2355,
          2414
        ],
        "op": "DUP1",
        "path": "1"
      },
      "844": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          2355,
          2414
        ],
        "op": "REVERT",
        "path": "1"
      },
      "845": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          2355,
          2414
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "846": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          2355,
          2414
        ],
        "op": "POP",
        "path": "1"
      },
      "847": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          2355,
          2414
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1E7"
      },
      "850": {
        "offset": [
          2409,
          2414
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2710"
      },
      "853": {
        "offset": [
          2355,
          2414
        ],
        "op": "DUP2",
        "path": "1"
      },
      "854": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          2355,
          2414
        ],
        "op": "JUMP",
        "path": "1"
      },
      "855": {
        "offset": [
          3090,
          3119
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "856": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          3090,
          3119
        ],
        "op": "CALLVALUE",
        "path": "1"
      },
      "857": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          3090,
          3119
        ],
        "op": "DUP1",
        "path": "1"
      },
      "858": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          3090,
          3119
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "859": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          3090,
          3119
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x363"
      },
      "862": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          3090,
          3119
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "863": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          3090,
          3119
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "865": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          3090,
          3119
        ],
        "op": "DUP1",
        "path": "1"
      },
      "866": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          3090,
          3119
        ],
        "op": "REVERT",
        "path": "1"
      },
      "867": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          3090,
          3119
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "868": {
        "op": "POP"
      },
      "869": {
        "offset": [
          3090,
          3119
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x9D"
      },
      "871": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          3090,
          3119
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "872": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          3090,
          3119
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x26A"
      },
      "875": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          3090,
          3119
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "876": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          3090,
          3119
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0xFF"
      },
      "878": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          3090,
          3119
        ],
        "op": "AND",
        "path": "1"
      },
      "879": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          3090,
          3119
        ],
        "op": "DUP2",
        "path": "1"
      },
      "880": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          3090,
          3119
        ],
        "op": "JUMP",
        "path": "1"
      },
      "881": {
        "fn": "OwnableUpgradeable.renounceOwnership",
        "offset": [
          2071,
          2172
        ],
        "op": "JUMPDEST",
        "path": "26"
      },
      "882": {
        "fn": "OwnableUpgradeable.renounceOwnership",
        "offset": [
          2071,
          2172
        ],
        "op": "CALLVALUE",
        "path": "26"
      },
      "883": {
        "fn": "OwnableUpgradeable.renounceOwnership",
        "offset": [
          2071,
          2172
        ],
        "op": "DUP1",
        "path": "26"
      },
      "884": {
        "fn": "OwnableUpgradeable.renounceOwnership",
        "offset": [
          2071,
          2172
        ],
        "op": "ISZERO",
        "path": "26"
      },
      "885": {
        "fn": "OwnableUpgradeable.renounceOwnership",
        "offset": [
          2071,
          2172
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x37D"
      },
      "888": {
        "fn": "OwnableUpgradeable.renounceOwnership",
        "offset": [
          2071,
          2172
        ],
        "op": "JUMPI",
        "path": "26"
      },
      "889": {
        "fn": "OwnableUpgradeable.renounceOwnership",
        "offset": [
          2071,
          2172
        ],
        "op": "PUSH1",
        "path": "26",
        "value": "0x0"
      },
      "891": {
        "fn": "OwnableUpgradeable.renounceOwnership",
        "offset": [
          2071,
          2172
        ],
        "op": "DUP1",
        "path": "26"
      },
      "892": {
        "fn": "OwnableUpgradeable.renounceOwnership",
        "offset": [
          2071,
          2172
        ],
        "op": "REVERT",
        "path": "26"
      },
      "893": {
        "fn": "OwnableUpgradeable.renounceOwnership",
        "offset": [
          2071,
          2172
        ],
        "op": "JUMPDEST",
        "path": "26"
      },
      "894": {
        "fn": "OwnableUpgradeable.renounceOwnership",
        "offset": [
          2071,
          2172
        ],
        "op": "POP",
        "path": "26"
      },
      "895": {
        "fn": "OwnableUpgradeable.renounceOwnership",
        "offset": [
          2071,
          2172
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x1CF"
      },
      "898": {
        "fn": "OwnableUpgradeable.renounceOwnership",
        "offset": [
          2071,
          2172
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0xF23"
      },
      "901": {
        "fn": "OwnableUpgradeable.renounceOwnership",
        "jump": "i",
        "offset": [
          2071,
          2172
        ],
        "op": "JUMP",
        "path": "26"
      },
      "902": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13306,
          13529
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "903": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13306,
          13529
        ],
        "op": "CALLVALUE",
        "path": "1"
      },
      "904": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13306,
          13529
        ],
        "op": "DUP1",
        "path": "1"
      },
      "905": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13306,
          13529
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "906": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13306,
          13529
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x392"
      },
      "909": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13306,
          13529
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "910": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13306,
          13529
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "912": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13306,
          13529
        ],
        "op": "DUP1",
        "path": "1"
      },
      "913": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13306,
          13529
        ],
        "op": "REVERT",
        "path": "1"
      },
      "914": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13306,
          13529
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "915": {
        "op": "POP"
      },
      "916": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13306,
          13529
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1CF"
      },
      "919": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13306,
          13529
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3A1"
      },
      "922": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13306,
          13529
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "923": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13306,
          13529
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "925": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13306,
          13529
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x27BC"
      },
      "928": {
        "fn": "MainnetEscrow.setPriceFeed",
        "jump": "i",
        "offset": [
          13306,
          13529
        ],
        "op": "JUMP",
        "path": "1"
      },
      "929": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13306,
          13529
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "930": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13306,
          13529
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xF37"
      },
      "933": {
        "fn": "MainnetEscrow.setPriceFeed",
        "jump": "i",
        "offset": [
          13306,
          13529
        ],
        "op": "JUMP",
        "path": "1"
      },
      "934": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18684,
          19408
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "935": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18684,
          19408
        ],
        "op": "CALLVALUE",
        "path": "1"
      },
      "936": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18684,
          19408
        ],
        "op": "DUP1",
        "path": "1"
      },
      "937": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18684,
          19408
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "938": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18684,
          19408
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3B2"
      },
      "941": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18684,
          19408
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "942": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18684,
          19408
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "944": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18684,
          19408
        ],
        "op": "DUP1",
        "path": "1"
      },
      "945": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18684,
          19408
        ],
        "op": "REVERT",
        "path": "1"
      },
      "946": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18684,
          19408
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "947": {
        "op": "POP"
      },
      "948": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18684,
          19408
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1E7"
      },
      "951": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18684,
          19408
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3C1"
      },
      "954": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18684,
          19408
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "955": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18684,
          19408
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "957": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18684,
          19408
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x27D9"
      },
      "960": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "jump": "i",
        "offset": [
          18684,
          19408
        ],
        "op": "JUMP",
        "path": "1"
      },
      "961": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18684,
          19408
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "962": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18684,
          19408
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xFA8"
      },
      "965": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "jump": "i",
        "offset": [
          18684,
          19408
        ],
        "op": "JUMP",
        "path": "1"
      },
      "966": {
        "offset": [
          2810,
          2853
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "967": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2810,
          2853
        ],
        "op": "CALLVALUE",
        "path": "1"
      },
      "968": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2810,
          2853
        ],
        "op": "DUP1",
        "path": "1"
      },
      "969": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2810,
          2853
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "970": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2810,
          2853
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3D2"
      },
      "973": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2810,
          2853
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "974": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2810,
          2853
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "976": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2810,
          2853
        ],
        "op": "DUP1",
        "path": "1"
      },
      "977": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2810,
          2853
        ],
        "op": "REVERT",
        "path": "1"
      },
      "978": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2810,
          2853
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "979": {
        "op": "POP"
      },
      "980": {
        "offset": [
          2810,
          2853
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x9B"
      },
      "982": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2810,
          2853
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "983": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2810,
          2853
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3E6"
      },
      "986": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2810,
          2853
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "987": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "989": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "991": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "993": {
        "op": "SHL"
      },
      "994": {
        "op": "SUB"
      },
      "995": {
        "offset": [
          2810,
          2853
        ],
        "op": "AND",
        "path": "1"
      },
      "996": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2810,
          2853
        ],
        "op": "DUP2",
        "path": "1"
      },
      "997": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2810,
          2853
        ],
        "op": "JUMP",
        "path": "1"
      },
      "998": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2810,
          2853
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "999": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2810,
          2853
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1001": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2810,
          2853
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "1002": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1004": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1006": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1008": {
        "op": "SHL"
      },
      "1009": {
        "op": "SUB"
      },
      "1010": {
        "op": "SWAP1"
      },
      "1011": {
        "op": "SWAP2"
      },
      "1012": {
        "op": "AND"
      },
      "1013": {
        "op": "DUP2"
      },
      "1014": {
        "op": "MSTORE"
      },
      "1015": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "1017": {
        "op": "ADD"
      },
      "1018": {
        "offset": [
          2810,
          2853
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1F1"
      },
      "1021": {
        "op": "JUMP"
      },
      "1022": {
        "offset": [
          2690,
          2712
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1023": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2690,
          2712
        ],
        "op": "CALLVALUE",
        "path": "1"
      },
      "1024": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2690,
          2712
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1025": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2690,
          2712
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "1026": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2690,
          2712
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x40A"
      },
      "1029": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2690,
          2712
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "1030": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2690,
          2712
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1032": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2690,
          2712
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1033": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2690,
          2712
        ],
        "op": "REVERT",
        "path": "1"
      },
      "1034": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2690,
          2712
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1035": {
        "op": "POP"
      },
      "1036": {
        "offset": [
          2690,
          2712
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x9A"
      },
      "1038": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2690,
          2712
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "1039": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2690,
          2712
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3E6"
      },
      "1042": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2690,
          2712
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1043": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1045": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1047": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1049": {
        "op": "SHL"
      },
      "1050": {
        "op": "SUB"
      },
      "1051": {
        "offset": [
          2690,
          2712
        ],
        "op": "AND",
        "path": "1"
      },
      "1052": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2690,
          2712
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1053": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          2690,
          2712
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1054": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13787,
          13950
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1055": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13787,
          13950
        ],
        "op": "CALLVALUE",
        "path": "1"
      },
      "1056": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13787,
          13950
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1057": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13787,
          13950
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "1058": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13787,
          13950
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x42A"
      },
      "1061": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13787,
          13950
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "1062": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13787,
          13950
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1064": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13787,
          13950
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1065": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13787,
          13950
        ],
        "op": "REVERT",
        "path": "1"
      },
      "1066": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13787,
          13950
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1067": {
        "op": "POP"
      },
      "1068": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13787,
          13950
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1CF"
      },
      "1071": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13787,
          13950
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x439"
      },
      "1074": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13787,
          13950
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "1075": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13787,
          13950
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "1077": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13787,
          13950
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x281E"
      },
      "1080": {
        "fn": "MainnetEscrow.setOpeningFee",
        "jump": "i",
        "offset": [
          13787,
          13950
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1081": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13787,
          13950
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1082": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13787,
          13950
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x11AE"
      },
      "1085": {
        "fn": "MainnetEscrow.setOpeningFee",
        "jump": "i",
        "offset": [
          13787,
          13950
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1086": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          1441,
          1526
        ],
        "op": "JUMPDEST",
        "path": "26"
      },
      "1087": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          1441,
          1526
        ],
        "op": "CALLVALUE",
        "path": "26"
      },
      "1088": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          1441,
          1526
        ],
        "op": "DUP1",
        "path": "26"
      },
      "1089": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          1441,
          1526
        ],
        "op": "ISZERO",
        "path": "26"
      },
      "1090": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          1441,
          1526
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x44A"
      },
      "1093": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          1441,
          1526
        ],
        "op": "JUMPI",
        "path": "26"
      },
      "1094": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          1441,
          1526
        ],
        "op": "PUSH1",
        "path": "26",
        "value": "0x0"
      },
      "1096": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          1441,
          1526
        ],
        "op": "DUP1",
        "path": "26"
      },
      "1097": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          1441,
          1526
        ],
        "op": "REVERT",
        "path": "26"
      },
      "1098": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          1441,
          1526
        ],
        "op": "JUMPDEST",
        "path": "26"
      },
      "1099": {
        "op": "POP"
      },
      "1100": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          1513,
          1519
        ],
        "op": "PUSH1",
        "path": "26",
        "statement": 2,
        "value": "0x33"
      },
      "1102": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          1513,
          1519
        ],
        "op": "SLOAD",
        "path": "26"
      },
      "1103": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1105": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1107": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1109": {
        "op": "SHL"
      },
      "1110": {
        "op": "SUB"
      },
      "1111": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          1513,
          1519
        ],
        "op": "AND",
        "path": "26"
      },
      "1112": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          1441,
          1526
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x3E6"
      },
      "1115": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          1441,
          1526
        ],
        "op": "JUMP",
        "path": "26"
      },
      "1116": {
        "offset": [
          2948,
          3011
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1117": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "CALLVALUE",
        "path": "1"
      },
      "1118": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1119": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "1120": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x468"
      },
      "1123": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "1124": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1126": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1127": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "REVERT",
        "path": "1"
      },
      "1128": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1129": {
        "op": "POP"
      },
      "1130": {
        "offset": [
          2948,
          3011
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3E6"
      },
      "1133": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x477"
      },
      "1136": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "1137": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "1139": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x27BC"
      },
      "1142": {
        "fn": "OwnableUpgradeable.owner",
        "jump": "i",
        "offset": [
          2948,
          3011
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1143": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1144": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x9C"
      },
      "1146": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "1148": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1149": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1151": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1152": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1153": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1154": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1156": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1157": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "1158": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "1159": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1161": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1163": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1165": {
        "op": "SHL"
      },
      "1166": {
        "op": "SUB"
      },
      "1167": {
        "offset": [
          2948,
          3011
        ],
        "op": "AND",
        "path": "1"
      },
      "1168": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1169": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2948,
          3011
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1170": {
        "offset": [
          2548,
          2603
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1171": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "CALLVALUE",
        "path": "1"
      },
      "1172": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1173": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "1174": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x49E"
      },
      "1177": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "1178": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1180": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1181": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "REVERT",
        "path": "1"
      },
      "1182": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1183": {
        "op": "POP"
      },
      "1184": {
        "offset": [
          2548,
          2603
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1E7"
      },
      "1187": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x4AD"
      },
      "1190": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "1191": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "1193": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x27BC"
      },
      "1196": {
        "fn": "OwnableUpgradeable.owner",
        "jump": "i",
        "offset": [
          2548,
          2603
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1197": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1198": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x99"
      },
      "1200": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "1202": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1203": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1205": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1206": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1207": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1208": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1210": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1211": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "1212": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "1213": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1214": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          2548,
          2603
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1215": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8580,
          10426
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1216": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8580,
          10426
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1CF"
      },
      "1219": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8580,
          10426
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x4CD"
      },
      "1222": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8580,
          10426
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "1223": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8580,
          10426
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "1225": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8580,
          10426
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2621"
      },
      "1228": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "jump": "i",
        "offset": [
          8580,
          10426
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1229": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8580,
          10426
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1230": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8580,
          10426
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x11F7"
      },
      "1233": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "jump": "i",
        "offset": [
          8580,
          10426
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1234": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13618,
          13719
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1235": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13618,
          13719
        ],
        "op": "CALLVALUE",
        "path": "1"
      },
      "1236": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13618,
          13719
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1237": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13618,
          13719
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "1238": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13618,
          13719
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x4DE"
      },
      "1241": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13618,
          13719
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "1242": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13618,
          13719
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1244": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13618,
          13719
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1245": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13618,
          13719
        ],
        "op": "REVERT",
        "path": "1"
      },
      "1246": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13618,
          13719
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1247": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13618,
          13719
        ],
        "op": "POP",
        "path": "1"
      },
      "1248": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13618,
          13719
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1CF"
      },
      "1251": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13618,
          13719
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x15C9"
      },
      "1254": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "jump": "i",
        "offset": [
          13618,
          13719
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1255": {
        "fn": "MainnetEscrow.togglePause",
        "offset": [
          12904,
          13011
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1256": {
        "fn": "MainnetEscrow.togglePause",
        "offset": [
          12904,
          13011
        ],
        "op": "CALLVALUE",
        "path": "1"
      },
      "1257": {
        "fn": "MainnetEscrow.togglePause",
        "offset": [
          12904,
          13011
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1258": {
        "fn": "MainnetEscrow.togglePause",
        "offset": [
          12904,
          13011
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "1259": {
        "fn": "MainnetEscrow.togglePause",
        "offset": [
          12904,
          13011
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x4F3"
      },
      "1262": {
        "fn": "MainnetEscrow.togglePause",
        "offset": [
          12904,
          13011
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "1263": {
        "fn": "MainnetEscrow.togglePause",
        "offset": [
          12904,
          13011
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1265": {
        "fn": "MainnetEscrow.togglePause",
        "offset": [
          12904,
          13011
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1266": {
        "fn": "MainnetEscrow.togglePause",
        "offset": [
          12904,
          13011
        ],
        "op": "REVERT",
        "path": "1"
      },
      "1267": {
        "fn": "MainnetEscrow.togglePause",
        "offset": [
          12904,
          13011
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1268": {
        "fn": "MainnetEscrow.togglePause",
        "offset": [
          12904,
          13011
        ],
        "op": "POP",
        "path": "1"
      },
      "1269": {
        "fn": "MainnetEscrow.togglePause",
        "offset": [
          12904,
          13011
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1CF"
      },
      "1272": {
        "fn": "MainnetEscrow.togglePause",
        "offset": [
          12904,
          13011
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x15E5"
      },
      "1275": {
        "fn": "MainnetEscrow.togglePause",
        "jump": "i",
        "offset": [
          12904,
          13011
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1276": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16685,
          18678
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1277": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16685,
          18678
        ],
        "op": "CALLVALUE",
        "path": "1"
      },
      "1278": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16685,
          18678
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1279": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16685,
          18678
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "1280": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16685,
          18678
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x508"
      },
      "1283": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16685,
          18678
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "1284": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16685,
          18678
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1286": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16685,
          18678
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1287": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16685,
          18678
        ],
        "op": "REVERT",
        "path": "1"
      },
      "1288": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16685,
          18678
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1289": {
        "op": "POP"
      },
      "1290": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16685,
          18678
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1E7"
      },
      "1293": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16685,
          18678
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x517"
      },
      "1296": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16685,
          18678
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "1297": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16685,
          18678
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "1299": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16685,
          18678
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2837"
      },
      "1302": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          16685,
          18678
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1303": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16685,
          18678
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1304": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16685,
          18678
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1607"
      },
      "1307": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          16685,
          18678
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1308": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2321,
          2519
        ],
        "op": "JUMPDEST",
        "path": "26"
      },
      "1309": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2321,
          2519
        ],
        "op": "CALLVALUE",
        "path": "26"
      },
      "1310": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2321,
          2519
        ],
        "op": "DUP1",
        "path": "26"
      },
      "1311": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2321,
          2519
        ],
        "op": "ISZERO",
        "path": "26"
      },
      "1312": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2321,
          2519
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x528"
      },
      "1315": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2321,
          2519
        ],
        "op": "JUMPI",
        "path": "26"
      },
      "1316": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2321,
          2519
        ],
        "op": "PUSH1",
        "path": "26",
        "value": "0x0"
      },
      "1318": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2321,
          2519
        ],
        "op": "DUP1",
        "path": "26"
      },
      "1319": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2321,
          2519
        ],
        "op": "REVERT",
        "path": "26"
      },
      "1320": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2321,
          2519
        ],
        "op": "JUMPDEST",
        "path": "26"
      },
      "1321": {
        "op": "POP"
      },
      "1322": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2321,
          2519
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x1CF"
      },
      "1325": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2321,
          2519
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x537"
      },
      "1328": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2321,
          2519
        ],
        "op": "CALLDATASIZE",
        "path": "26"
      },
      "1329": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2321,
          2519
        ],
        "op": "PUSH1",
        "path": "26",
        "value": "0x4"
      },
      "1331": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2321,
          2519
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x27BC"
      },
      "1334": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "jump": "i",
        "offset": [
          2321,
          2519
        ],
        "op": "JUMP",
        "path": "26"
      },
      "1335": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2321,
          2519
        ],
        "op": "JUMPDEST",
        "path": "26"
      },
      "1336": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2321,
          2519
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x1A59"
      },
      "1339": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "jump": "i",
        "offset": [
          2321,
          2519
        ],
        "op": "JUMP",
        "path": "26"
      },
      "1340": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10525,
          11975
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1341": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10525,
          11975
        ],
        "op": "CALLVALUE",
        "path": "1"
      },
      "1342": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10525,
          11975
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1343": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10525,
          11975
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "1344": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10525,
          11975
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x548"
      },
      "1347": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10525,
          11975
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "1348": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10525,
          11975
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1350": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10525,
          11975
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1351": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10525,
          11975
        ],
        "op": "REVERT",
        "path": "1"
      },
      "1352": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10525,
          11975
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1353": {
        "op": "POP"
      },
      "1354": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10525,
          11975
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1CF"
      },
      "1357": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10525,
          11975
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x557"
      },
      "1360": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10525,
          11975
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "1361": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10525,
          11975
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "1363": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10525,
          11975
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x292B"
      },
      "1366": {
        "fn": "MainnetEscrow.polygonCallback",
        "jump": "i",
        "offset": [
          10525,
          11975
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1367": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10525,
          11975
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1368": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10525,
          11975
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1AD2"
      },
      "1371": {
        "fn": "MainnetEscrow.polygonCallback",
        "jump": "i",
        "offset": [
          10525,
          11975
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1372": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          5829,
          7501
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1373": {
        "offset": [
          1482,
          1501
        ],
        "op": "PUSH2",
        "path": "28",
        "value": "0x564"
      },
      "1376": {
        "offset": [
          1482,
          1499
        ],
        "op": "PUSH2",
        "path": "28",
        "value": "0x1F28"
      },
      "1379": {
        "jump": "i",
        "offset": [
          1482,
          1501
        ],
        "op": "JUMP",
        "path": "28"
      },
      "1380": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          1482,
          1501
        ],
        "op": "JUMPDEST",
        "path": "28"
      },
      "1381": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 3,
        "value": "0x40"
      },
      "1383": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "1384": {
        "op": "PUSH4",
        "value": "0x31A9108F"
      },
      "1389": {
        "op": "PUSH1",
        "value": "0xE1"
      },
      "1391": {
        "op": "SHL"
      },
      "1392": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1393": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1394": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1396": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1398": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "1400": {
        "op": "SHL"
      },
      "1401": {
        "op": "SUB"
      },
      "1402": {
        "op": "DUP9"
      },
      "1403": {
        "op": "AND"
      },
      "1404": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "1406": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "DUP3",
        "path": "1"
      },
      "1407": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "ADD",
        "path": "1"
      },
      "1408": {
        "op": "MSTORE"
      },
      "1409": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1411": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1413": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1415": {
        "op": "SHL"
      },
      "1416": {
        "op": "SUB"
      },
      "1417": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6145
        ],
        "op": "DUP10",
        "path": "1"
      },
      "1418": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6145
        ],
        "op": "AND",
        "path": "1"
      },
      "1419": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6145
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1420": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6145
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x6352211E"
      },
      "1425": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6145
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1426": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "1428": {
        "op": "ADD"
      },
      "1429": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "1431": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1433": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "1434": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1435": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "DUP4",
        "path": "1"
      },
      "1436": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "SUB",
        "path": "1"
      },
      "1437": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1438": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "DUP7",
        "path": "1"
      },
      "1439": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "GAS",
        "path": "1"
      },
      "1440": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "STATICCALL",
        "path": "1"
      },
      "1441": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "1442": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1443": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "1444": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x5B1"
      },
      "1447": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "1448": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "1449": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1451": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1452": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "RETURNDATACOPY",
        "path": "1"
      },
      "1453": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "1454": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1456": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "REVERT",
        "optimizer_revert": true,
        "path": "1"
      },
      "1457": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1458": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "POP",
        "path": "1"
      },
      "1459": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "POP",
        "path": "1"
      },
      "1460": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "POP",
        "path": "1"
      },
      "1461": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "POP",
        "path": "1"
      },
      "1462": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1464": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "1465": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "1466": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "1468": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "NOT",
        "path": "1"
      },
      "1469": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "1471": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "DUP3",
        "path": "1"
      },
      "1472": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "ADD",
        "path": "1"
      },
      "1473": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "AND",
        "path": "1"
      },
      "1474": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "DUP3",
        "path": "1"
      },
      "1475": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "ADD",
        "path": "1"
      },
      "1476": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1477": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1479": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1480": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "POP",
        "path": "1"
      },
      "1481": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1482": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "ADD",
        "path": "1"
      },
      "1483": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1484": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x5D5"
      },
      "1487": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "1488": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1489": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2A2D"
      },
      "1492": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "jump": "i",
        "offset": [
          6114,
          6153
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1493": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6114,
          6153
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1494": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1496": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1498": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1500": {
        "op": "SHL"
      },
      "1501": {
        "op": "SUB"
      },
      "1502": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6100,
          6153
        ],
        "op": "AND",
        "path": "1"
      },
      "1503": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6100,
          6110
        ],
        "op": "CALLER",
        "path": "1"
      },
      "1504": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1506": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1508": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1510": {
        "op": "SHL"
      },
      "1511": {
        "op": "SUB"
      },
      "1512": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6100,
          6153
        ],
        "op": "AND",
        "path": "1"
      },
      "1513": {
        "branch": 98,
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6100,
          6153
        ],
        "op": "EQ",
        "path": "1"
      },
      "1514": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6092,
          6181
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x63A"
      },
      "1517": {
        "branch": 98,
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6092,
          6181
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "1518": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6092,
          6181
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1520": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6092,
          6181
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "1521": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "1525": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "1527": {
        "op": "SHL"
      },
      "1528": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6092,
          6181
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1529": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6092,
          6181
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1530": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "1532": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6092,
          6181
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "1534": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6092,
          6181
        ],
        "op": "DUP3",
        "path": "1"
      },
      "1535": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6092,
          6181
        ],
        "op": "ADD",
        "path": "1"
      },
      "1536": {
        "op": "MSTORE"
      },
      "1537": {
        "op": "PUSH1",
        "value": "0x17"
      },
      "1539": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "1541": {
        "op": "DUP3"
      },
      "1542": {
        "op": "ADD"
      },
      "1543": {
        "op": "MSTORE"
      },
      "1544": {
        "op": "PUSH32",
        "value": "0x596F7520646F206E6F74206F776E2074686973204E4654000000000000000000"
      },
      "1577": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "1579": {
        "op": "DUP3"
      },
      "1580": {
        "op": "ADD"
      },
      "1581": {
        "op": "MSTORE"
      },
      "1582": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "1584": {
        "op": "ADD"
      },
      "1585": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6092,
          6181
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1586": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6092,
          6181
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1588": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6092,
          6181
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "1589": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6092,
          6181
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1590": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6092,
          6181
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "1591": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6092,
          6181
        ],
        "op": "SUB",
        "path": "1"
      },
      "1592": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6092,
          6181
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1593": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6092,
          6181
        ],
        "op": "REVERT",
        "path": "1"
      },
      "1594": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6092,
          6181
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1595": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1597": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1599": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1601": {
        "op": "SHL"
      },
      "1602": {
        "op": "SUB"
      },
      "1603": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6199,
          6240
        ],
        "op": "DUP7",
        "path": "1",
        "statement": 4
      },
      "1604": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6199,
          6240
        ],
        "op": "AND",
        "path": "1"
      },
      "1605": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6199,
          6240
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1607": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6199,
          6240
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1608": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6199,
          6240
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1609": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6199,
          6240
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1610": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6199,
          6220
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x97"
      },
      "1612": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6199,
          6240
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "1614": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6199,
          6240
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1615": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6199,
          6240
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1617": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6199,
          6240
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1618": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6199,
          6240
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "1619": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6199,
          6240
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "1620": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6199,
          6240
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0xFF"
      },
      "1622": {
        "branch": 99,
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6199,
          6240
        ],
        "op": "AND",
        "path": "1"
      },
      "1623": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6191,
          6277
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x6A2"
      },
      "1626": {
        "branch": 99,
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6191,
          6277
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "1627": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6191,
          6277
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1629": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6191,
          6277
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "1630": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "1634": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "1636": {
        "op": "SHL"
      },
      "1637": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6191,
          6277
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1638": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6191,
          6277
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1639": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "1641": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6191,
          6277
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "1643": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6191,
          6277
        ],
        "op": "DUP3",
        "path": "1"
      },
      "1644": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6191,
          6277
        ],
        "op": "ADD",
        "path": "1"
      },
      "1645": {
        "op": "DUP2"
      },
      "1646": {
        "op": "SWAP1"
      },
      "1647": {
        "op": "MSTORE"
      },
      "1648": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "1650": {
        "op": "DUP3"
      },
      "1651": {
        "op": "ADD"
      },
      "1652": {
        "op": "MSTORE"
      },
      "1653": {
        "op": "PUSH32",
        "value": "0x546869732063757272656E6379206973206E6F742077686974656C6973746564"
      },
      "1686": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "1688": {
        "op": "DUP3"
      },
      "1689": {
        "op": "ADD"
      },
      "1690": {
        "op": "MSTORE"
      },
      "1691": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "1693": {
        "op": "ADD"
      },
      "1694": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6191,
          6277
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x631"
      },
      "1697": {
        "op": "JUMP"
      },
      "1698": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6191,
          6277
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1699": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6314,
          6315
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 5,
        "value": "0x1"
      },
      "1701": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6295,
          6311
        ],
        "op": "DUP5",
        "path": "1"
      },
      "1702": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1704": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1706": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "1708": {
        "op": "SHL"
      },
      "1709": {
        "op": "SUB"
      },
      "1710": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6295,
          6315
        ],
        "op": "AND",
        "path": "1"
      },
      "1711": {
        "branch": 100,
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6295,
          6315
        ],
        "op": "GT",
        "path": "1"
      },
      "1712": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6287,
          6356
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x6CB"
      },
      "1715": {
        "branch": 100,
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6287,
          6356
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "1716": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6287,
          6356
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1718": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6287,
          6356
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "1719": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "1723": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "1725": {
        "op": "SHL"
      },
      "1726": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6287,
          6356
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1727": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6287,
          6356
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1728": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6287,
          6356
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "1730": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6287,
          6356
        ],
        "op": "ADD",
        "path": "1"
      },
      "1731": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6287,
          6356
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x631"
      },
      "1734": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6287,
          6356
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1735": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6287,
          6356
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2A4A"
      },
      "1738": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "jump": "i",
        "offset": [
          6287,
          6356
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1739": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6287,
          6356
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1740": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6397,
          6413
        ],
        "op": "DUP4",
        "path": "1",
        "statement": 6
      },
      "1741": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1743": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1745": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "1747": {
        "op": "SHL"
      },
      "1748": {
        "op": "SUB"
      },
      "1749": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6374,
          6413
        ],
        "op": "AND",
        "path": "1"
      },
      "1750": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6374,
          6393
        ],
        "op": "DUP4",
        "path": "1"
      },
      "1751": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1753": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1755": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "1757": {
        "op": "SHL"
      },
      "1758": {
        "op": "SUB"
      },
      "1759": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6374,
          6413
        ],
        "op": "AND",
        "path": "1"
      },
      "1760": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6374,
          6413
        ],
        "op": "GT",
        "path": "1"
      },
      "1761": {
        "branch": 101,
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6374,
          6413
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "1762": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6366,
          6464
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x6FD"
      },
      "1765": {
        "branch": 101,
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6366,
          6464
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "1766": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6366,
          6464
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1768": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6366,
          6464
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "1769": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "1773": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "1775": {
        "op": "SHL"
      },
      "1776": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6366,
          6464
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1777": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6366,
          6464
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1778": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6366,
          6464
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "1780": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6366,
          6464
        ],
        "op": "ADD",
        "path": "1"
      },
      "1781": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6366,
          6464
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x631"
      },
      "1784": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6366,
          6464
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1785": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6366,
          6464
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2A8E"
      },
      "1788": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "jump": "i",
        "offset": [
          6366,
          6464
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1789": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6366,
          6464
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1790": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6504,
          6509
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 7,
        "value": "0xA8C0"
      },
      "1793": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6482,
          6500
        ],
        "op": "DUP3",
        "path": "1"
      },
      "1794": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1796": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1798": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "1800": {
        "op": "SHL"
      },
      "1801": {
        "op": "SUB"
      },
      "1802": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6482,
          6509
        ],
        "op": "AND",
        "path": "1"
      },
      "1803": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6482,
          6509
        ],
        "op": "LT",
        "path": "1"
      },
      "1804": {
        "branch": 102,
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6482,
          6509
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "1805": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6474,
          6542
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x758"
      },
      "1808": {
        "branch": 102,
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6474,
          6542
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "1809": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6474,
          6542
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1811": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6474,
          6542
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "1812": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "1816": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "1818": {
        "op": "SHL"
      },
      "1819": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6474,
          6542
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1820": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6474,
          6542
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1821": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "1823": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6474,
          6542
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "1825": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6474,
          6542
        ],
        "op": "DUP3",
        "path": "1"
      },
      "1826": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6474,
          6542
        ],
        "op": "ADD",
        "path": "1"
      },
      "1827": {
        "op": "MSTORE"
      },
      "1828": {
        "op": "PUSH1",
        "value": "0x1C"
      },
      "1830": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "1832": {
        "op": "DUP3"
      },
      "1833": {
        "op": "ADD"
      },
      "1834": {
        "op": "MSTORE"
      },
      "1835": {
        "op": "PUSH32",
        "value": "0x4D696E696D756D206475726174696F6E20697320313220686F75727300000000"
      },
      "1868": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "1870": {
        "op": "DUP3"
      },
      "1871": {
        "op": "ADD"
      },
      "1872": {
        "op": "MSTORE"
      },
      "1873": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "1875": {
        "op": "ADD"
      },
      "1876": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6474,
          6542
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x631"
      },
      "1879": {
        "op": "JUMP"
      },
      "1880": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6474,
          6542
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1881": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6638,
          6661
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1883": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6664,
          6741
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x765"
      },
      "1886": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6684,
          6702
        ],
        "op": "DUP8",
        "path": "1"
      },
      "1887": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6704,
          6719
        ],
        "op": "DUP8",
        "path": "1"
      },
      "1888": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6721,
          6740
        ],
        "op": "DUP7",
        "path": "1"
      },
      "1889": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6664,
          6683
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xFA8"
      },
      "1892": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "jump": "i",
        "offset": [
          6664,
          6741
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1893": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6664,
          6741
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1894": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6638,
          6741
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1895": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6638,
          6741
        ],
        "op": "POP",
        "path": "1"
      },
      "1896": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6788,
          6803
        ],
        "op": "DUP1",
        "path": "1",
        "statement": 8
      },
      "1897": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6774,
          6785
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x98"
      },
      "1899": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6774,
          6785
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "1900": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6774,
          6803
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x775"
      },
      "1903": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6774,
          6803
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "1904": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6774,
          6803
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1905": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6774,
          6803
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2AF2"
      },
      "1908": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "jump": "i",
        "offset": [
          6774,
          6803
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1909": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6774,
          6803
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1910": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6760,
          6769
        ],
        "op": "CALLVALUE",
        "path": "1"
      },
      "1911": {
        "branch": 103,
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6760,
          6804
        ],
        "op": "EQ",
        "path": "1"
      },
      "1912": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6752,
          6828
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x7B9"
      },
      "1915": {
        "branch": 103,
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6752,
          6828
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "1916": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6752,
          6828
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1918": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6752,
          6828
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "1919": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "1923": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "1925": {
        "op": "SHL"
      },
      "1926": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6752,
          6828
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1927": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6752,
          6828
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1928": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "1930": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6752,
          6828
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "1932": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6752,
          6828
        ],
        "op": "DUP3",
        "path": "1"
      },
      "1933": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6752,
          6828
        ],
        "op": "ADD",
        "path": "1"
      },
      "1934": {
        "op": "MSTORE"
      },
      "1935": {
        "op": "PUSH1",
        "value": "0x13"
      },
      "1937": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "1939": {
        "op": "DUP3"
      },
      "1940": {
        "op": "ADD"
      },
      "1941": {
        "op": "MSTORE"
      },
      "1942": {
        "op": "PUSH19",
        "value": "0x125B98DBDC9C9958DD081999595CC81CD95B9D"
      },
      "1962": {
        "op": "PUSH1",
        "value": "0x6A"
      },
      "1964": {
        "op": "SHL"
      },
      "1965": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "1967": {
        "op": "DUP3"
      },
      "1968": {
        "op": "ADD"
      },
      "1969": {
        "op": "MSTORE"
      },
      "1970": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "1972": {
        "op": "ADD"
      },
      "1973": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6752,
          6828
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x631"
      },
      "1976": {
        "op": "JUMP"
      },
      "1977": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6752,
          6828
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1978": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6874,
          6885
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 9,
        "value": "0x98"
      },
      "1980": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6874,
          6885
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "1981": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6838,
          6870
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1983": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6838,
          6870
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1984": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6838,
          6870
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1985": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6838,
          6870
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1986": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6838,
          6858
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x99"
      },
      "1988": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6838,
          6870
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "1990": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6838,
          6870
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1991": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6838,
          6870
        ],
        "op": "PUSH32",
        "path": "1",
        "value": "0x235D629DC802037DED8C61CB27FB29E40FA01B299719D8F991FFE20BDCC59F4F"
      },
      "2024": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6838,
          6885
        ],
        "op": "DUP1",
        "path": "1"
      },
      "2025": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6838,
          6885
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "2026": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6838,
          6870
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2027": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6838,
          6870
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "2028": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6838,
          6870
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2029": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6838,
          6885
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x7F7"
      },
      "2032": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6838,
          6885
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2033": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6874,
          6885
        ],
        "op": "DUP5",
        "path": "1"
      },
      "2034": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6874,
          6885
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2035": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6838,
          6885
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2AF2"
      },
      "2038": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "jump": "i",
        "offset": [
          6838,
          6885
        ],
        "op": "JUMP",
        "path": "1"
      },
      "2039": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6838,
          6885
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2040": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6838,
          6885
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2041": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6838,
          6885
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "2042": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6838,
          6885
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "2043": {
        "op": "POP"
      },
      "2044": {
        "op": "POP"
      },
      "2045": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 10,
        "value": "0x40"
      },
      "2047": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "2048": {
        "op": "PUSH4",
        "value": "0x23B872DD"
      },
      "2053": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "2055": {
        "op": "SHL"
      },
      "2056": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2057": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "2058": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6982,
          6992
        ],
        "op": "CALLER",
        "path": "1"
      },
      "2059": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "2061": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "DUP3",
        "path": "1"
      },
      "2062": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "ADD",
        "path": "1"
      },
      "2063": {
        "op": "MSTORE"
      },
      "2064": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7002,
          7006
        ],
        "op": "ADDRESS",
        "path": "1"
      },
      "2065": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "2067": {
        "op": "DUP3"
      },
      "2068": {
        "op": "ADD"
      },
      "2069": {
        "op": "MSTORE"
      },
      "2070": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2072": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2074": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "2076": {
        "op": "SHL"
      },
      "2077": {
        "op": "SUB"
      },
      "2078": {
        "op": "DUP10"
      },
      "2079": {
        "op": "AND"
      },
      "2080": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "2082": {
        "op": "DUP3"
      },
      "2083": {
        "op": "ADD"
      },
      "2084": {
        "op": "MSTORE"
      },
      "2085": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2087": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2089": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2091": {
        "op": "SHL"
      },
      "2092": {
        "op": "SUB"
      },
      "2093": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          6981
        ],
        "op": "DUP11",
        "path": "1"
      },
      "2094": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          6981
        ],
        "op": "AND",
        "path": "1"
      },
      "2095": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          6981
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2096": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          6981
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x23B872DD"
      },
      "2101": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          6981
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2102": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "2104": {
        "op": "ADD"
      },
      "2105": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "2107": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "2109": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "2110": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "DUP1",
        "path": "1"
      },
      "2111": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "DUP4",
        "path": "1"
      },
      "2112": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "SUB",
        "path": "1"
      },
      "2113": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2114": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "2116": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "DUP8",
        "path": "1"
      },
      "2117": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "DUP1",
        "path": "1"
      },
      "2118": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "EXTCODESIZE",
        "path": "1"
      },
      "2119": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "2120": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "DUP1",
        "path": "1"
      },
      "2121": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "2122": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x852"
      },
      "2125": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "2126": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "2128": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "DUP1",
        "path": "1"
      },
      "2129": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "REVERT",
        "path": "1"
      },
      "2130": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2131": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "POP",
        "path": "1"
      },
      "2132": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "GAS",
        "path": "1"
      },
      "2133": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "CALL",
        "path": "1"
      },
      "2134": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "2135": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "DUP1",
        "path": "1"
      },
      "2136": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "2137": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x866"
      },
      "2140": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "2141": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "2142": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "2144": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "DUP1",
        "path": "1"
      },
      "2145": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "RETURNDATACOPY",
        "path": "1"
      },
      "2146": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "2147": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "2149": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "REVERT",
        "path": "1"
      },
      "2150": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6945,
          7016
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2151": {
        "op": "POP"
      },
      "2152": {
        "op": "POP"
      },
      "2153": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 11,
        "value": "0x40"
      },
      "2155": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "2156": {
        "op": "PUSH4",
        "value": "0x31A9108F"
      },
      "2161": {
        "op": "PUSH1",
        "value": "0xE1"
      },
      "2163": {
        "op": "SHL"
      },
      "2164": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2165": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "2166": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2168": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2170": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "2172": {
        "op": "SHL"
      },
      "2173": {
        "op": "SUB"
      },
      "2174": {
        "op": "DUP12"
      },
      "2175": {
        "op": "AND"
      },
      "2176": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "2178": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "DUP3",
        "path": "1"
      },
      "2179": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "ADD",
        "path": "1"
      },
      "2180": {
        "op": "MSTORE"
      },
      "2181": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2183": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2185": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2187": {
        "op": "SHL"
      },
      "2188": {
        "op": "SUB"
      },
      "2189": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7082
        ],
        "op": "DUP13",
        "path": "1"
      },
      "2190": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7082
        ],
        "op": "AND",
        "path": "1"
      },
      "2191": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7082
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "2192": {
        "op": "POP"
      },
      "2193": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7082
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x6352211E"
      },
      "2198": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7082
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "2199": {
        "op": "POP"
      },
      "2200": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "2202": {
        "op": "ADD"
      },
      "2203": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "2205": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "2207": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "2208": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "DUP1",
        "path": "1"
      },
      "2209": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "DUP4",
        "path": "1"
      },
      "2210": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "SUB",
        "path": "1"
      },
      "2211": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2212": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "DUP7",
        "path": "1"
      },
      "2213": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "GAS",
        "path": "1"
      },
      "2214": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "STATICCALL",
        "path": "1"
      },
      "2215": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "2216": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "DUP1",
        "path": "1"
      },
      "2217": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "2218": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x8B7"
      },
      "2221": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "2222": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "2223": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "2225": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "DUP1",
        "path": "1"
      },
      "2226": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "RETURNDATACOPY",
        "path": "1"
      },
      "2227": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "2228": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "2230": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "REVERT",
        "path": "1"
      },
      "2231": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2232": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "POP",
        "path": "1"
      },
      "2233": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "POP",
        "path": "1"
      },
      "2234": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "POP",
        "path": "1"
      },
      "2235": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "POP",
        "path": "1"
      },
      "2236": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "2238": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "2239": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "2240": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "2242": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "NOT",
        "path": "1"
      },
      "2243": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "2245": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "DUP3",
        "path": "1"
      },
      "2246": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "ADD",
        "path": "1"
      },
      "2247": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "AND",
        "path": "1"
      },
      "2248": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "DUP3",
        "path": "1"
      },
      "2249": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "ADD",
        "path": "1"
      },
      "2250": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "DUP1",
        "path": "1"
      },
      "2251": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "2253": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "2254": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "POP",
        "path": "1"
      },
      "2255": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2256": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "ADD",
        "path": "1"
      },
      "2257": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2258": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x8DB"
      },
      "2261": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "2262": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2263": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2A2D"
      },
      "2266": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "jump": "i",
        "offset": [
          7051,
          7090
        ],
        "op": "JUMP",
        "path": "1"
      },
      "2267": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7051,
          7090
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2268": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2270": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2272": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2274": {
        "op": "SHL"
      },
      "2275": {
        "op": "SUB"
      },
      "2276": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7034,
          7090
        ],
        "op": "AND",
        "path": "1"
      },
      "2277": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7042,
          7046
        ],
        "op": "ADDRESS",
        "path": "1"
      },
      "2278": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2280": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2282": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2284": {
        "op": "SHL"
      },
      "2285": {
        "op": "SUB"
      },
      "2286": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7034,
          7090
        ],
        "op": "AND",
        "path": "1"
      },
      "2287": {
        "branch": 104,
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7034,
          7090
        ],
        "op": "EQ",
        "path": "1"
      },
      "2288": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7026,
          7110
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x92D"
      },
      "2291": {
        "branch": 104,
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7026,
          7110
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "2292": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7026,
          7110
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "2294": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7026,
          7110
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "2295": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "2299": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "2301": {
        "op": "SHL"
      },
      "2302": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7026,
          7110
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2303": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7026,
          7110
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "2304": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2306": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7026,
          7110
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "2308": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7026,
          7110
        ],
        "op": "DUP3",
        "path": "1"
      },
      "2309": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7026,
          7110
        ],
        "op": "ADD",
        "path": "1"
      },
      "2310": {
        "op": "MSTORE"
      },
      "2311": {
        "op": "PUSH1",
        "value": "0xF"
      },
      "2313": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "2315": {
        "op": "DUP3"
      },
      "2316": {
        "op": "ADD"
      },
      "2317": {
        "op": "MSTORE"
      },
      "2318": {
        "op": "PUSH15",
        "value": "0x151C985B9CD9995C8819985A5B1959"
      },
      "2334": {
        "op": "PUSH1",
        "value": "0x8A"
      },
      "2336": {
        "op": "SHL"
      },
      "2337": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "2339": {
        "op": "DUP3"
      },
      "2340": {
        "op": "ADD"
      },
      "2341": {
        "op": "MSTORE"
      },
      "2342": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "2344": {
        "op": "ADD"
      },
      "2345": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7026,
          7110
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x631"
      },
      "2348": {
        "op": "JUMP"
      },
      "2349": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7026,
          7110
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2350": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7126,
          7494
        ],
        "op": "PUSH32",
        "path": "1",
        "statement": 12,
        "value": "0xB26C0BF32D8D3EFF0D0561D0B30F4BF8962A18678833B276FCBBE06C48E9EAAA"
      },
      "2383": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7153,
          7167
        ],
        "op": "DUP10",
        "path": "1"
      },
      "2384": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7181,
          7191
        ],
        "op": "CALLER",
        "path": "1"
      },
      "2385": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7205,
          7222
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "2387": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7236,
          7242
        ],
        "op": "DUP12",
        "path": "1"
      },
      "2388": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7257,
          7275
        ],
        "op": "DUP12",
        "path": "1"
      },
      "2389": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7290,
          7305
        ],
        "op": "DUP12",
        "path": "1"
      },
      "2390": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7320,
          7336
        ],
        "op": "DUP12",
        "path": "1"
      },
      "2391": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7351,
          7370
        ],
        "op": "DUP12",
        "path": "1"
      },
      "2392": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7392,
          7428
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x96A"
      },
      "2395": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2397": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2399": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "2401": {
        "op": "SHL"
      },
      "2402": {
        "op": "SUB"
      },
      "2403": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7392,
          7428
        ],
        "op": "DUP14",
        "path": "1"
      },
      "2404": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7392,
          7428
        ],
        "op": "AND",
        "path": "1"
      },
      "2405": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7392,
          7407
        ],
        "op": "TIMESTAMP",
        "path": "1"
      },
      "2406": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7392,
          7428
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2AF2"
      },
      "2409": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "jump": "i",
        "offset": [
          7392,
          7428
        ],
        "op": "JUMP",
        "path": "1"
      },
      "2410": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7392,
          7428
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2411": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7444,
          7455
        ],
        "op": "DUP12",
        "path": "1"
      },
      "2412": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7469,
          7484
        ],
        "op": "DUP12",
        "path": "1"
      },
      "2413": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7126,
          7494
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "2415": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7126,
          7494
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "2416": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7126,
          7494
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x983"
      },
      "2419": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7126,
          7494
        ],
        "op": "SWAP12",
        "path": "1"
      },
      "2420": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7126,
          7494
        ],
        "op": "SWAP11",
        "path": "1"
      },
      "2421": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7126,
          7494
        ],
        "op": "SWAP10",
        "path": "1"
      },
      "2422": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7126,
          7494
        ],
        "op": "SWAP9",
        "path": "1"
      },
      "2423": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7126,
          7494
        ],
        "op": "SWAP8",
        "path": "1"
      },
      "2424": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7126,
          7494
        ],
        "op": "SWAP7",
        "path": "1"
      },
      "2425": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7126,
          7494
        ],
        "op": "SWAP6",
        "path": "1"
      },
      "2426": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7126,
          7494
        ],
        "op": "SWAP5",
        "path": "1"
      },
      "2427": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7126,
          7494
        ],
        "op": "SWAP4",
        "path": "1"
      },
      "2428": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7126,
          7494
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "2429": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7126,
          7494
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "2430": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7126,
          7494
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2431": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7126,
          7494
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2B0A"
      },
      "2434": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "jump": "i",
        "offset": [
          7126,
          7494
        ],
        "op": "JUMP",
        "path": "1"
      },
      "2435": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7126,
          7494
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2436": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7126,
          7494
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "2438": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7126,
          7494
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "2439": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7126,
          7494
        ],
        "op": "DUP1",
        "path": "1"
      },
      "2440": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7126,
          7494
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "2441": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7126,
          7494
        ],
        "op": "SUB",
        "path": "1"
      },
      "2442": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7126,
          7494
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2443": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          7126,
          7494
        ],
        "op": "LOG1",
        "path": "1"
      },
      "2444": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          6082,
          7501
        ],
        "op": "POP",
        "path": "1"
      },
      "2445": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          5829,
          7501
        ],
        "op": "POP",
        "path": "1"
      },
      "2446": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          5829,
          7501
        ],
        "op": "POP",
        "path": "1"
      },
      "2447": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          5829,
          7501
        ],
        "op": "POP",
        "path": "1"
      },
      "2448": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          5829,
          7501
        ],
        "op": "POP",
        "path": "1"
      },
      "2449": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          5829,
          7501
        ],
        "op": "POP",
        "path": "1"
      },
      "2450": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          5829,
          7501
        ],
        "op": "POP",
        "path": "1"
      },
      "2451": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          5829,
          7501
        ],
        "op": "POP",
        "path": "1"
      },
      "2452": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "offset": [
          5829,
          7501
        ],
        "op": "POP",
        "path": "1"
      },
      "2453": {
        "fn": "MainnetEscrow.createERC721Raffle",
        "jump": "o",
        "offset": [
          5829,
          7501
        ],
        "op": "JUMP",
        "path": "1"
      },
      "2454": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15363,
          16286
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2455": {
        "offset": [
          1334,
          1347
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x99E"
      },
      "2458": {
        "offset": [
          1334,
          1345
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x1F6E"
      },
      "2461": {
        "jump": "i",
        "offset": [
          1334,
          1347
        ],
        "op": "JUMP",
        "path": "26"
      },
      "2462": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          1334,
          1347
        ],
        "op": "JUMPDEST",
        "path": "26"
      },
      "2463": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15510,
          15523
        ],
        "op": "DUP4",
        "path": "1"
      },
      "2464": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15548,
          15570
        ],
        "op": "DUP3",
        "path": "1",
        "statement": 13
      },
      "2465": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15548,
          15570
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2466": {
        "branch": 105,
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15548,
          15570
        ],
        "op": "EQ",
        "path": "1"
      },
      "2467": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15540,
          15601
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x9EE"
      },
      "2470": {
        "branch": 105,
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15540,
          15601
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "2471": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15540,
          15601
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "2473": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15540,
          15601
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "2474": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "2478": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "2480": {
        "op": "SHL"
      },
      "2481": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15540,
          15601
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2482": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15540,
          15601
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "2483": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2485": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15540,
          15601
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "2487": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15540,
          15601
        ],
        "op": "DUP3",
        "path": "1"
      },
      "2488": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15540,
          15601
        ],
        "op": "ADD",
        "path": "1"
      },
      "2489": {
        "op": "MSTORE"
      },
      "2490": {
        "op": "PUSH1",
        "value": "0x1A"
      },
      "2492": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "2494": {
        "op": "DUP3"
      },
      "2495": {
        "op": "ADD"
      },
      "2496": {
        "op": "MSTORE"
      },
      "2497": {
        "op": "PUSH32",
        "value": "0x4172726179206C656E6774687320646F206E6F74206D61746368000000000000"
      },
      "2530": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "2532": {
        "op": "DUP3"
      },
      "2533": {
        "op": "ADD"
      },
      "2534": {
        "op": "MSTORE"
      },
      "2535": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "2537": {
        "op": "ADD"
      },
      "2538": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15540,
          15601
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x631"
      },
      "2541": {
        "op": "JUMP"
      },
      "2542": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15540,
          15601
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2543": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15611,
          15625
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "2545": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15635,
          15655
        ],
        "op": "DUP1",
        "path": "1"
      },
      "2546": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15670,
          15679
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "2548": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15665,
          16280
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2549": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15685,
          15688
        ],
        "op": "DUP4",
        "path": "1"
      },
      "2550": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15681,
          15682
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2551": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15681,
          15688
        ],
        "op": "LT",
        "path": "1"
      },
      "2552": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15665,
          16280
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "2553": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15665,
          16280
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xB07"
      },
      "2556": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15665,
          16280
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "2557": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15724,
          15737
        ],
        "op": "DUP9",
        "path": "1",
        "statement": 14
      },
      "2558": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15724,
          15737
        ],
        "op": "DUP9",
        "path": "1"
      },
      "2559": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15738,
          15739
        ],
        "op": "DUP3",
        "path": "1"
      },
      "2560": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15724,
          15740
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2561": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15724,
          15740
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2562": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15724,
          15740
        ],
        "op": "LT",
        "path": "1"
      },
      "2563": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15724,
          15740
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xA0E"
      },
      "2566": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15724,
          15740
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "2567": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15724,
          15740
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xA0E"
      },
      "2570": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15724,
          15740
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BC3"
      },
      "2573": {
        "fn": "MainnetEscrow.withdrawFees",
        "jump": "i",
        "offset": [
          15724,
          15740
        ],
        "op": "JUMP",
        "path": "1"
      },
      "2574": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15724,
          15740
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2575": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15724,
          15740
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2576": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15724,
          15740
        ],
        "op": "POP",
        "path": "1"
      },
      "2577": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15724,
          15740
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "2579": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15724,
          15740
        ],
        "op": "MUL",
        "path": "1"
      },
      "2580": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15724,
          15740
        ],
        "op": "ADD",
        "path": "1"
      },
      "2581": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15724,
          15740
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "2583": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15724,
          15740
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2584": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15724,
          15740
        ],
        "op": "ADD",
        "path": "1"
      },
      "2585": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15724,
          15740
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2586": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15724,
          15740
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xA23"
      },
      "2589": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15724,
          15740
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "2590": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15724,
          15740
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2591": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15724,
          15740
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x27BC"
      },
      "2594": {
        "fn": "MainnetEscrow.withdrawFees",
        "jump": "i",
        "offset": [
          15724,
          15740
        ],
        "op": "JUMP",
        "path": "1"
      },
      "2595": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15724,
          15740
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2596": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15709,
          15740
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "2597": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15709,
          15740
        ],
        "op": "POP",
        "path": "1"
      },
      "2598": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15763,
          15771
        ],
        "op": "DUP7",
        "path": "1",
        "statement": 15
      },
      "2599": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15763,
          15771
        ],
        "op": "DUP7",
        "path": "1"
      },
      "2600": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15772,
          15773
        ],
        "op": "DUP3",
        "path": "1"
      },
      "2601": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15763,
          15774
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2602": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15763,
          15774
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2603": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15763,
          15774
        ],
        "op": "LT",
        "path": "1"
      },
      "2604": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15763,
          15774
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xA37"
      },
      "2607": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15763,
          15774
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "2608": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15763,
          15774
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xA37"
      },
      "2611": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15763,
          15774
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BC3"
      },
      "2614": {
        "fn": "MainnetEscrow.withdrawFees",
        "jump": "i",
        "offset": [
          15763,
          15774
        ],
        "op": "JUMP",
        "path": "1"
      },
      "2615": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15763,
          15774
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2616": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15763,
          15774
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2617": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15763,
          15774
        ],
        "op": "POP",
        "path": "1"
      },
      "2618": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15763,
          15774
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "2620": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15763,
          15774
        ],
        "op": "MUL",
        "path": "1"
      },
      "2621": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15763,
          15774
        ],
        "op": "ADD",
        "path": "1"
      },
      "2622": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15763,
          15774
        ],
        "op": "CALLDATALOAD",
        "path": "1"
      },
      "2623": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15754,
          15774
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "2624": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15754,
          15774
        ],
        "op": "POP",
        "path": "1"
      },
      "2625": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15806,
          15826
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 16,
        "value": "0x99"
      },
      "2627": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15806,
          15840
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "2629": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15827,
          15839
        ],
        "op": "DUP4",
        "path": "1"
      },
      "2630": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2632": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2634": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2636": {
        "op": "SHL"
      },
      "2637": {
        "op": "SUB"
      },
      "2638": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15806,
          15840
        ],
        "op": "AND",
        "path": "1"
      },
      "2639": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2641": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2643": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2645": {
        "op": "SHL"
      },
      "2646": {
        "op": "SUB"
      },
      "2647": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15806,
          15840
        ],
        "op": "AND",
        "path": "1"
      },
      "2648": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15806,
          15840
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2649": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15806,
          15840
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "2650": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15806,
          15840
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "2652": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15806,
          15840
        ],
        "op": "ADD",
        "path": "1"
      },
      "2653": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15806,
          15840
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2654": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15806,
          15840
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2655": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15806,
          15840
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "2656": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15806,
          15840
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "2658": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15806,
          15840
        ],
        "op": "ADD",
        "path": "1"
      },
      "2659": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15806,
          15840
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "2661": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15806,
          15840
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "2662": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15806,
          15840
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "2663": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15796,
          15802
        ],
        "op": "DUP4",
        "path": "1"
      },
      "2664": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15796,
          15840
        ],
        "op": "GT",
        "path": "1"
      },
      "2665": {
        "branch": 106,
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15796,
          15840
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "2666": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15788,
          15860
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xAA7"
      },
      "2669": {
        "branch": 106,
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15788,
          15860
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "2670": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15788,
          15860
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "2672": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15788,
          15860
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "2673": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "2677": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "2679": {
        "op": "SHL"
      },
      "2680": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15788,
          15860
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2681": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15788,
          15860
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "2682": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2684": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15788,
          15860
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "2686": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15788,
          15860
        ],
        "op": "DUP3",
        "path": "1"
      },
      "2687": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15788,
          15860
        ],
        "op": "ADD",
        "path": "1"
      },
      "2688": {
        "op": "MSTORE"
      },
      "2689": {
        "op": "PUSH1",
        "value": "0xF"
      },
      "2691": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "2693": {
        "op": "DUP3"
      },
      "2694": {
        "op": "ADD"
      },
      "2695": {
        "op": "MSTORE"
      },
      "2696": {
        "op": "PUSH15",
        "value": "0x82DADEEADCE840E8DEDE40D0D2CED"
      },
      "2712": {
        "op": "PUSH1",
        "value": "0x8B"
      },
      "2714": {
        "op": "SHL"
      },
      "2715": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "2717": {
        "op": "DUP3"
      },
      "2718": {
        "op": "ADD"
      },
      "2719": {
        "op": "MSTORE"
      },
      "2720": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "2722": {
        "op": "ADD"
      },
      "2723": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15788,
          15860
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x631"
      },
      "2726": {
        "op": "JUMP"
      },
      "2727": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15788,
          15860
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2728": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2730": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2732": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2734": {
        "op": "SHL"
      },
      "2735": {
        "op": "SUB"
      },
      "2736": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15877,
          15903
        ],
        "op": "DUP3",
        "path": "1"
      },
      "2737": {
        "branch": 107,
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15877,
          15903
        ],
        "op": "AND",
        "path": "1"
      },
      "2738": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15874,
          16078
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xAC4"
      },
      "2741": {
        "branch": 107,
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15874,
          16078
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "2742": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15922,
          15961
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 17,
        "value": "0xABF"
      },
      "2745": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15943,
          15952
        ],
        "op": "DUP6",
        "path": "1"
      },
      "2746": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15954,
          15960
        ],
        "op": "DUP5",
        "path": "1"
      },
      "2747": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15922,
          15942
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1FC8"
      },
      "2750": {
        "fn": "MainnetEscrow.withdrawFees",
        "jump": "i",
        "offset": [
          15922,
          15961
        ],
        "op": "JUMP",
        "path": "1"
      },
      "2751": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15922,
          15961
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2752": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15874,
          16078
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xAD8"
      },
      "2755": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15874,
          16078
        ],
        "op": "JUMP",
        "path": "1"
      },
      "2756": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15874,
          16078
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2757": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          16011,
          16063
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 18,
        "value": "0xAD8"
      },
      "2760": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2762": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2764": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2766": {
        "op": "SHL"
      },
      "2767": {
        "op": "SUB"
      },
      "2768": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          16011,
          16044
        ],
        "op": "DUP4",
        "path": "1"
      },
      "2769": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          16011,
          16044
        ],
        "op": "AND",
        "path": "1"
      },
      "2770": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          16045,
          16054
        ],
        "op": "DUP7",
        "path": "1"
      },
      "2771": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          16056,
          16062
        ],
        "op": "DUP6",
        "path": "1"
      },
      "2772": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          16011,
          16044
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x210C"
      },
      "2775": {
        "fn": "MainnetEscrow.withdrawFees",
        "jump": "i",
        "offset": [
          16011,
          16063
        ],
        "op": "JUMP",
        "path": "1"
      },
      "2776": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          16011,
          16063
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2777": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2779": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2781": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2783": {
        "op": "SHL"
      },
      "2784": {
        "op": "SUB"
      },
      "2785": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          16211,
          16245
        ],
        "op": "DUP3",
        "path": "1",
        "statement": 19
      },
      "2786": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          16211,
          16245
        ],
        "op": "AND",
        "path": "1"
      },
      "2787": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          16211,
          16245
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "2789": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          16211,
          16245
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2790": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          16211,
          16245
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2791": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          16211,
          16245
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "2792": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          16211,
          16231
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x99"
      },
      "2794": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          16211,
          16245
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "2796": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          16211,
          16245
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "2797": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          16211,
          16245
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "2799": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          16211,
          16245
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2800": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          16211,
          16245
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "2801": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          16211,
          16255
        ],
        "op": "DUP1",
        "path": "1"
      },
      "2802": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          16211,
          16255
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "2803": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          16211,
          16255
        ],
        "op": "DUP5",
        "path": "1"
      },
      "2804": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          16211,
          16255
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2805": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          16211,
          16255
        ],
        "op": "SUB",
        "path": "1"
      },
      "2806": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          16211,
          16255
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2807": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          16211,
          16255
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "2808": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15690,
          15693
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 20,
        "value": "0xB00"
      },
      "2811": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15690,
          15693
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2812": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15690,
          15693
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BD9"
      },
      "2815": {
        "fn": "MainnetEscrow.withdrawFees",
        "jump": "i",
        "offset": [
          15690,
          15693
        ],
        "op": "JUMP",
        "path": "1"
      },
      "2816": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15690,
          15693
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2817": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15690,
          15693
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2818": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15690,
          15693
        ],
        "op": "POP",
        "path": "1"
      },
      "2819": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15665,
          16280
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x9F4"
      },
      "2822": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15665,
          16280
        ],
        "op": "JUMP",
        "path": "1"
      },
      "2823": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15665,
          16280
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2824": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15665,
          16280
        ],
        "op": "POP",
        "path": "1"
      },
      "2825": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15486,
          16286
        ],
        "op": "POP",
        "path": "1"
      },
      "2826": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15486,
          16286
        ],
        "op": "POP",
        "path": "1"
      },
      "2827": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15486,
          16286
        ],
        "op": "POP",
        "path": "1"
      },
      "2828": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15363,
          16286
        ],
        "op": "POP",
        "path": "1"
      },
      "2829": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15363,
          16286
        ],
        "op": "POP",
        "path": "1"
      },
      "2830": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15363,
          16286
        ],
        "op": "POP",
        "path": "1"
      },
      "2831": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15363,
          16286
        ],
        "op": "POP",
        "path": "1"
      },
      "2832": {
        "fn": "MainnetEscrow.withdrawFees",
        "offset": [
          15363,
          16286
        ],
        "op": "POP",
        "path": "1"
      },
      "2833": {
        "fn": "MainnetEscrow.withdrawFees",
        "jump": "o",
        "offset": [
          15363,
          16286
        ],
        "op": "JUMP",
        "path": "1"
      },
      "2834": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14203,
          14644
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2835": {
        "offset": [
          1334,
          1347
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0xB1A"
      },
      "2838": {
        "offset": [
          1334,
          1345
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x1F6E"
      },
      "2841": {
        "jump": "i",
        "offset": [
          1334,
          1347
        ],
        "op": "JUMP",
        "path": "26"
      },
      "2842": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          1334,
          1347
        ],
        "op": "JUMPDEST",
        "path": "26"
      },
      "2843": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2845": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2847": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2849": {
        "op": "SHL"
      },
      "2850": {
        "op": "SUB"
      },
      "2851": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14338,
          14386
        ],
        "op": "DUP3",
        "path": "1",
        "statement": 21
      },
      "2852": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14338,
          14386
        ],
        "op": "AND",
        "path": "1"
      },
      "2853": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14338,
          14386
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "2855": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14338,
          14386
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2856": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14338,
          14386
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2857": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14338,
          14386
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "2858": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14338,
          14359
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x97"
      },
      "2860": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14338,
          14386
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "2862": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14338,
          14386
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "2863": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14338,
          14386
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "2865": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14338,
          14386
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2866": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14338,
          14386
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "2867": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14338,
          14386
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "2868": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14338,
          14386
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0xFF"
      },
      "2870": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14338,
          14386
        ],
        "op": "AND",
        "path": "1"
      },
      "2871": {
        "branch": 108,
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14337,
          14386
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "2872": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14329,
          14419
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xB83"
      },
      "2875": {
        "branch": 108,
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14329,
          14419
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "2876": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14329,
          14419
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "2878": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14329,
          14419
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "2879": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "2883": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "2885": {
        "op": "SHL"
      },
      "2886": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14329,
          14419
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2887": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14329,
          14419
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "2888": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2890": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14329,
          14419
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "2892": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14329,
          14419
        ],
        "op": "DUP3",
        "path": "1"
      },
      "2893": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14329,
          14419
        ],
        "op": "ADD",
        "path": "1"
      },
      "2894": {
        "op": "MSTORE"
      },
      "2895": {
        "op": "PUSH1",
        "value": "0x1C"
      },
      "2897": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "2899": {
        "op": "DUP3"
      },
      "2900": {
        "op": "ADD"
      },
      "2901": {
        "op": "MSTORE"
      },
      "2902": {
        "op": "PUSH32",
        "value": "0x546F6B656E20697320616C72656164792077686974656C697374656400000000"
      },
      "2935": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "2937": {
        "op": "DUP3"
      },
      "2938": {
        "op": "ADD"
      },
      "2939": {
        "op": "MSTORE"
      },
      "2940": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "2942": {
        "op": "ADD"
      },
      "2943": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14329,
          14419
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x631"
      },
      "2946": {
        "op": "JUMP"
      },
      "2947": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14329,
          14419
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2948": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2950": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2952": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2954": {
        "op": "SHL"
      },
      "2955": {
        "op": "SUB"
      },
      "2956": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14429,
          14477
        ],
        "op": "DUP3",
        "path": "1",
        "statement": 22
      },
      "2957": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14429,
          14477
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2958": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14429,
          14477
        ],
        "op": "AND",
        "path": "1"
      },
      "2959": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14429,
          14477
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "2961": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14429,
          14477
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2962": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14429,
          14477
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2963": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14429,
          14477
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "2964": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14429,
          14450
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x97"
      },
      "2966": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14429,
          14477
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "2968": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14429,
          14477
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2969": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14429,
          14477
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2970": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14429,
          14477
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "2971": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14429,
          14477
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "2973": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14429,
          14477
        ],
        "op": "DUP1",
        "path": "1"
      },
      "2974": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14429,
          14477
        ],
        "op": "DUP4",
        "path": "1"
      },
      "2975": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14429,
          14477
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "2976": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14429,
          14484
        ],
        "op": "DUP1",
        "path": "1"
      },
      "2977": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14429,
          14484
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "2978": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14480,
          14484
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1"
      },
      "2980": {
        "op": "PUSH1",
        "value": "0xFF"
      },
      "2982": {
        "op": "NOT"
      },
      "2983": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14429,
          14484
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2984": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14429,
          14484
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "2985": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14429,
          14484
        ],
        "op": "AND",
        "path": "1"
      },
      "2986": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14429,
          14484
        ],
        "op": "OR",
        "path": "1"
      },
      "2987": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14429,
          14484
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2988": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14429,
          14484
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "2989": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14494,
          14522
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 23,
        "value": "0x9C"
      },
      "2991": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14494,
          14549
        ],
        "op": "DUP3",
        "path": "1"
      },
      "2992": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14494,
          14549
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "2993": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14494,
          14549
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "2994": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14494,
          14549
        ],
        "op": "DUP3",
        "path": "1"
      },
      "2995": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14494,
          14549
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2996": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14494,
          14549
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "2997": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14494,
          14577
        ],
        "op": "DUP1",
        "path": "1"
      },
      "2998": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14494,
          14577
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "2999": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3001": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3003": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "3005": {
        "op": "SHL"
      },
      "3006": {
        "op": "SUB"
      },
      "3007": {
        "op": "NOT"
      },
      "3008": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14494,
          14577
        ],
        "op": "AND",
        "path": "1"
      },
      "3009": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14494,
          14577
        ],
        "op": "SWAP5",
        "path": "1"
      },
      "3010": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14494,
          14577
        ],
        "op": "DUP7",
        "path": "1"
      },
      "3011": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14494,
          14577
        ],
        "op": "AND",
        "path": "1"
      },
      "3012": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14494,
          14577
        ],
        "op": "SWAP5",
        "path": "1"
      },
      "3013": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14494,
          14577
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "3014": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14494,
          14577
        ],
        "op": "SWAP5",
        "path": "1"
      },
      "3015": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14494,
          14577
        ],
        "op": "OR",
        "path": "1"
      },
      "3016": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14494,
          14577
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "3017": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14494,
          14577
        ],
        "op": "SWAP4",
        "path": "1"
      },
      "3018": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14494,
          14577
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "3019": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14592,
          14637
        ],
        "op": "MLOAD",
        "path": "1",
        "statement": 24
      },
      "3020": {
        "op": "SWAP1"
      },
      "3021": {
        "op": "DUP2"
      },
      "3022": {
        "op": "MSTORE"
      },
      "3023": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14592,
          14637
        ],
        "op": "PUSH32",
        "path": "1",
        "value": "0x5C6CF68A9D7E416D0EEE740661627DD794257920F1C63DDAE6C6AF81D02D12EA"
      },
      "3056": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14592,
          14637
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "3057": {
        "op": "ADD"
      },
      "3058": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14592,
          14637
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "3060": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14592,
          14637
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "3061": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14592,
          14637
        ],
        "op": "DUP1",
        "path": "1"
      },
      "3062": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14592,
          14637
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "3063": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14592,
          14637
        ],
        "op": "SUB",
        "path": "1"
      },
      "3064": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14592,
          14637
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "3065": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14592,
          14637
        ],
        "op": "LOG1",
        "path": "1"
      },
      "3066": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14203,
          14644
        ],
        "op": "POP",
        "path": "1"
      },
      "3067": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "offset": [
          14203,
          14644
        ],
        "op": "POP",
        "path": "1"
      },
      "3068": {
        "fn": "MainnetEscrow.whitelistCurrency",
        "jump": "o",
        "offset": [
          14203,
          14644
        ],
        "op": "JUMP",
        "path": "1"
      },
      "3069": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4123,
          4688
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "3070": {
        "offset": [
          3111,
          3130
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0x0"
      },
      "3072": {
        "offset": [
          3134,
          3147
        ],
        "op": "SLOAD",
        "path": "27"
      },
      "3073": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3134,
          3147
        ],
        "op": "PUSH2",
        "path": "27",
        "value": "0x100"
      },
      "3076": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3134,
          3147
        ],
        "op": "SWAP1",
        "path": "27"
      },
      "3077": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3134,
          3147
        ],
        "op": "DIV",
        "path": "27"
      },
      "3078": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3134,
          3147
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0xFF"
      },
      "3080": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3134,
          3147
        ],
        "op": "AND",
        "path": "27"
      },
      "3081": {
        "offset": [
          3133,
          3147
        ],
        "op": "ISZERO",
        "path": "27"
      },
      "3082": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3133,
          3147
        ],
        "op": "DUP1",
        "path": "27"
      },
      "3083": {
        "offset": [
          3179,
          3213
        ],
        "op": "DUP1",
        "path": "27"
      },
      "3084": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3179,
          3213
        ],
        "op": "ISZERO",
        "path": "27"
      },
      "3085": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3179,
          3213
        ],
        "op": "PUSH2",
        "path": "27",
        "value": "0xC1D"
      },
      "3088": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3179,
          3213
        ],
        "op": "JUMPI",
        "path": "27"
      },
      "3089": {
        "op": "POP"
      },
      "3090": {
        "offset": [
          3197,
          3209
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0x0"
      },
      "3092": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3197,
          3209
        ],
        "op": "SLOAD",
        "path": "27"
      },
      "3093": {
        "offset": [
          3212,
          3213
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0x1"
      },
      "3095": {
        "offset": [
          3197,
          3209
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0xFF"
      },
      "3097": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3197,
          3209
        ],
        "op": "SWAP1",
        "path": "27"
      },
      "3098": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3197,
          3209
        ],
        "op": "SWAP2",
        "path": "27"
      },
      "3099": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3197,
          3209
        ],
        "op": "AND",
        "path": "27"
      },
      "3100": {
        "offset": [
          3197,
          3213
        ],
        "op": "LT",
        "path": "27"
      },
      "3101": {
        "offset": [
          3179,
          3213
        ],
        "op": "JUMPDEST",
        "path": "27"
      },
      "3102": {
        "offset": [
          3178,
          3286
        ],
        "op": "DUP1",
        "path": "27"
      },
      "3103": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3178,
          3286
        ],
        "op": "PUSH2",
        "path": "27",
        "value": "0xC37"
      },
      "3106": {
        "offset": [
          3178,
          3286
        ],
        "op": "JUMPI",
        "path": "27"
      },
      "3107": {
        "op": "POP"
      },
      "3108": {
        "offset": [
          3258,
          3262
        ],
        "op": "ADDRESS",
        "path": "27"
      },
      "3109": {
        "op": "EXTCODESIZE"
      },
      "3110": {
        "op": "ISZERO"
      },
      "3111": {
        "op": "DUP1"
      },
      "3112": {
        "op": "ISZERO"
      },
      "3113": {
        "offset": [
          3219,
          3285
        ],
        "op": "PUSH2",
        "path": "27",
        "value": "0xC37"
      },
      "3116": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3219,
          3285
        ],
        "op": "JUMPI",
        "path": "27"
      },
      "3117": {
        "op": "POP"
      },
      "3118": {
        "offset": [
          3268,
          3280
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0x0"
      },
      "3120": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3268,
          3280
        ],
        "op": "SLOAD",
        "path": "27"
      },
      "3121": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3268,
          3280
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0xFF"
      },
      "3123": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3268,
          3280
        ],
        "op": "AND",
        "path": "27"
      },
      "3124": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3268,
          3280
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0x1"
      },
      "3126": {
        "offset": [
          3268,
          3285
        ],
        "op": "EQ",
        "path": "27"
      },
      "3127": {
        "offset": [
          3219,
          3285
        ],
        "op": "JUMPDEST",
        "path": "27"
      },
      "3128": {
        "offset": [
          3157,
          3358
        ],
        "op": "PUSH2",
        "path": "27",
        "value": "0xC9A"
      },
      "3131": {
        "offset": [
          3157,
          3358
        ],
        "op": "JUMPI",
        "path": "27"
      },
      "3132": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3157,
          3358
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0x40"
      },
      "3134": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3157,
          3358
        ],
        "op": "MLOAD",
        "path": "27"
      },
      "3135": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "3139": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "3141": {
        "op": "SHL"
      },
      "3142": {
        "offset": [
          3157,
          3358
        ],
        "op": "DUP2",
        "path": "27"
      },
      "3143": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3157,
          3358
        ],
        "op": "MSTORE",
        "path": "27"
      },
      "3144": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "3146": {
        "offset": [
          3157,
          3358
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0x4"
      },
      "3148": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3157,
          3358
        ],
        "op": "DUP3",
        "path": "27"
      },
      "3149": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3157,
          3358
        ],
        "op": "ADD",
        "path": "27"
      },
      "3150": {
        "op": "MSTORE"
      },
      "3151": {
        "op": "PUSH1",
        "value": "0x2E"
      },
      "3153": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "3155": {
        "op": "DUP3"
      },
      "3156": {
        "op": "ADD"
      },
      "3157": {
        "op": "MSTORE"
      },
      "3158": {
        "op": "PUSH32",
        "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
      },
      "3191": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "3193": {
        "op": "DUP3"
      },
      "3194": {
        "op": "ADD"
      },
      "3195": {
        "op": "MSTORE"
      },
      "3196": {
        "op": "PUSH14",
        "value": "0x191E481A5B9A5D1A585B1A5E9959"
      },
      "3211": {
        "op": "PUSH1",
        "value": "0x92"
      },
      "3213": {
        "op": "SHL"
      },
      "3214": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "3216": {
        "op": "DUP3"
      },
      "3217": {
        "op": "ADD"
      },
      "3218": {
        "op": "MSTORE"
      },
      "3219": {
        "op": "PUSH1",
        "value": "0x84"
      },
      "3221": {
        "op": "ADD"
      },
      "3222": {
        "offset": [
          3157,
          3358
        ],
        "op": "PUSH2",
        "path": "27",
        "value": "0x631"
      },
      "3225": {
        "op": "JUMP"
      },
      "3226": {
        "offset": [
          3157,
          3358
        ],
        "op": "JUMPDEST",
        "path": "27"
      },
      "3227": {
        "offset": [
          3368,
          3380
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0x0"
      },
      "3229": {
        "offset": [
          3368,
          3384
        ],
        "op": "DUP1",
        "path": "27"
      },
      "3230": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3368,
          3384
        ],
        "op": "SLOAD",
        "path": "27"
      },
      "3231": {
        "op": "PUSH1",
        "value": "0xFF"
      },
      "3233": {
        "op": "NOT"
      },
      "3234": {
        "offset": [
          3368,
          3384
        ],
        "op": "AND",
        "path": "27"
      },
      "3235": {
        "offset": [
          3383,
          3384
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0x1"
      },
      "3237": {
        "offset": [
          3368,
          3384
        ],
        "op": "OR",
        "path": "27"
      },
      "3238": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3368,
          3384
        ],
        "op": "SWAP1",
        "path": "27"
      },
      "3239": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3368,
          3384
        ],
        "op": "SSTORE",
        "path": "27"
      },
      "3240": {
        "offset": [
          3394,
          3459
        ],
        "op": "DUP1",
        "path": "27"
      },
      "3241": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3394,
          3459
        ],
        "op": "ISZERO",
        "path": "27"
      },
      "3242": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3394,
          3459
        ],
        "op": "PUSH2",
        "path": "27",
        "value": "0xCBD"
      },
      "3245": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3394,
          3459
        ],
        "op": "JUMPI",
        "path": "27"
      },
      "3246": {
        "offset": [
          3428,
          3441
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0x0"
      },
      "3248": {
        "offset": [
          3428,
          3448
        ],
        "op": "DUP1",
        "path": "27"
      },
      "3249": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3428,
          3448
        ],
        "op": "SLOAD",
        "path": "27"
      },
      "3250": {
        "op": "PUSH2",
        "value": "0xFF00"
      },
      "3253": {
        "op": "NOT"
      },
      "3254": {
        "offset": [
          3428,
          3448
        ],
        "op": "AND",
        "path": "27"
      },
      "3255": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3428,
          3448
        ],
        "op": "PUSH2",
        "path": "27",
        "value": "0x100"
      },
      "3258": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3428,
          3448
        ],
        "op": "OR",
        "path": "27"
      },
      "3259": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3428,
          3448
        ],
        "op": "SWAP1",
        "path": "27"
      },
      "3260": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3428,
          3448
        ],
        "op": "SSTORE",
        "path": "27"
      },
      "3261": {
        "offset": [
          3394,
          3459
        ],
        "op": "JUMPDEST",
        "path": "27"
      },
      "3262": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4218,
          4234
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 25,
        "value": "0xCC5"
      },
      "3265": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4218,
          4232
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x216F"
      },
      "3268": {
        "fn": "MainnetEscrow.initialize",
        "jump": "i",
        "offset": [
          4218,
          4234
        ],
        "op": "JUMP",
        "path": "1"
      },
      "3269": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4218,
          4234
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "3270": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4244,
          4261
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 26,
        "value": "0xCCD"
      },
      "3273": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4244,
          4259
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x219E"
      },
      "3276": {
        "fn": "MainnetEscrow.initialize",
        "jump": "i",
        "offset": [
          4244,
          4261
        ],
        "op": "JUMP",
        "path": "1"
      },
      "3277": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4244,
          4261
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "3278": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4272,
          4279
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 27,
        "value": "0x9A"
      },
      "3280": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4272,
          4290
        ],
        "op": "DUP1",
        "path": "1"
      },
      "3281": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4272,
          4290
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "3282": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3284": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3286": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "3288": {
        "op": "SHL"
      },
      "3289": {
        "op": "SUB"
      },
      "3290": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4272,
          4290
        ],
        "op": "DUP1",
        "path": "1"
      },
      "3291": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4272,
          4290
        ],
        "op": "DUP7",
        "path": "1"
      },
      "3292": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4272,
          4290
        ],
        "op": "AND",
        "path": "1"
      },
      "3293": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3295": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3297": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "3299": {
        "op": "SHL"
      },
      "3300": {
        "op": "SUB"
      },
      "3301": {
        "op": "NOT"
      },
      "3302": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4272,
          4290
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "3303": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4272,
          4290
        ],
        "op": "DUP4",
        "path": "1"
      },
      "3304": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4272,
          4290
        ],
        "op": "AND",
        "path": "1"
      },
      "3305": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4272,
          4290
        ],
        "op": "OR",
        "path": "1"
      },
      "3306": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4272,
          4290
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "3307": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4272,
          4290
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "3308": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4272,
          4290
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "3309": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4300,
          4317
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 28,
        "value": "0x9B"
      },
      "3311": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4300,
          4358
        ],
        "op": "DUP1",
        "path": "1"
      },
      "3312": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4300,
          4358
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "3313": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4300,
          4358
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "3314": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4300,
          4358
        ],
        "op": "DUP6",
        "path": "1"
      },
      "3315": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4300,
          4358
        ],
        "op": "AND",
        "path": "1"
      },
      "3316": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4300,
          4358
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "3317": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4300,
          4358
        ],
        "op": "DUP3",
        "path": "1"
      },
      "3318": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4300,
          4358
        ],
        "op": "AND",
        "path": "1"
      },
      "3319": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4300,
          4358
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "3320": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4300,
          4358
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "3321": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4300,
          4358
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "3322": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4300,
          4358
        ],
        "op": "OR",
        "path": "1"
      },
      "3323": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4300,
          4358
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "3324": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4300,
          4358
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "3325": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4300,
          4358
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "3326": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4368,
          4385
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 29,
        "value": "0x9D"
      },
      "3328": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4368,
          4392
        ],
        "op": "DUP1",
        "path": "1"
      },
      "3329": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4368,
          4392
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "3330": {
        "op": "PUSH1",
        "value": "0xFF"
      },
      "3332": {
        "op": "NOT"
      },
      "3333": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4368,
          4392
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "3334": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4368,
          4392
        ],
        "op": "DUP2",
        "path": "1"
      },
      "3335": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4368,
          4392
        ],
        "op": "AND",
        "path": "1"
      },
      "3336": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4272,
          4290
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1"
      },
      "3338": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4368,
          4392
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "3339": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4368,
          4392
        ],
        "op": "DUP2",
        "path": "1"
      },
      "3340": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4368,
          4392
        ],
        "op": "OR",
        "path": "1"
      },
      "3341": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4368,
          4392
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "3342": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4368,
          4392
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "3343": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4368,
          4392
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "3344": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4459,
          4501
        ],
        "op": "PUSH20",
        "path": "1",
        "statement": 30,
        "value": "0x7CEB23FD6BC0ADD59E62AC25578270CFF1B9F619"
      },
      "3365": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4272,
          4279
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "3367": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4437,
          4502
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "3368": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4437,
          4502
        ],
        "op": "PUSH32",
        "path": "1",
        "value": "0x1A0ACAC70E8CAB5A31AC0C028653F1612AEC657B1C8333C74EABA0C30E0EE391"
      },
      "3401": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4437,
          4509
        ],
        "op": "DUP1",
        "path": "1"
      },
      "3402": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4437,
          4509
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "3403": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4437,
          4509
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "3404": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4437,
          4509
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "3405": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4437,
          4509
        ],
        "op": "AND",
        "path": "1"
      },
      "3406": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4437,
          4509
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "3407": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4437,
          4509
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "3408": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4437,
          4509
        ],
        "op": "OR",
        "path": "1"
      },
      "3409": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4437,
          4509
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "3410": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4437,
          4509
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "3411": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4559,
          4587
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 31,
        "value": "0x9C"
      },
      "3413": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4437,
          4502
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "3415": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4559,
          4631
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "3416": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4559,
          4631
        ],
        "op": "PUSH32",
        "path": "1",
        "value": "0x54CB885AAE8EFE3410AF7107761EDCAE51EE12661F9443184B5E9D063DDF7FA5"
      },
      "3449": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4559,
          4647
        ],
        "op": "DUP1",
        "path": "1"
      },
      "3450": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4559,
          4647
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "3451": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4559,
          4647
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "3452": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4559,
          4647
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "3453": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4559,
          4647
        ],
        "op": "AND",
        "path": "1"
      },
      "3454": {
        "offset": [
          2160,
          2202
        ],
        "op": "PUSH20",
        "path": "1",
        "value": "0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
      },
      "3475": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4559,
          4647
        ],
        "op": "OR",
        "path": "1"
      },
      "3476": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4559,
          4647
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "3477": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4559,
          4647
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "3478": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4671,
          4681
        ],
        "op": "PUSH7",
        "path": "1",
        "statement": 32,
        "value": "0x6A94D74F430000"
      },
      "3486": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4657,
          4668
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x98"
      },
      "3488": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4657,
          4681
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "3489": {
        "offset": [
          3479,
          3578
        ],
        "op": "DUP1",
        "path": "27"
      },
      "3490": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3479,
          3578
        ],
        "op": "ISZERO",
        "path": "27"
      },
      "3491": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3479,
          3578
        ],
        "op": "PUSH2",
        "path": "27",
        "value": "0xDE6"
      },
      "3494": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3479,
          3578
        ],
        "op": "JUMPI",
        "path": "27"
      },
      "3495": {
        "offset": [
          3529,
          3534
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0x0"
      },
      "3497": {
        "offset": [
          3513,
          3534
        ],
        "op": "DUP1",
        "path": "27"
      },
      "3498": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3513,
          3534
        ],
        "op": "SLOAD",
        "path": "27"
      },
      "3499": {
        "op": "PUSH2",
        "value": "0xFF00"
      },
      "3502": {
        "op": "NOT"
      },
      "3503": {
        "offset": [
          3513,
          3534
        ],
        "op": "AND",
        "path": "27"
      },
      "3504": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3513,
          3534
        ],
        "op": "SWAP1",
        "path": "27"
      },
      "3505": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3513,
          3534
        ],
        "op": "SSTORE",
        "path": "27"
      },
      "3506": {
        "offset": [
          3553,
          3567
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0x40"
      },
      "3508": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3553,
          3567
        ],
        "op": "MLOAD",
        "path": "27"
      },
      "3509": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3511": {
        "op": "DUP2"
      },
      "3512": {
        "op": "MSTORE"
      },
      "3513": {
        "offset": [
          3553,
          3567
        ],
        "op": "PUSH32",
        "path": "27",
        "value": "0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
      },
      "3546": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3553,
          3567
        ],
        "op": "SWAP1",
        "path": "27"
      },
      "3547": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "3549": {
        "op": "ADD"
      },
      "3550": {
        "offset": [
          3553,
          3567
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0x40"
      },
      "3552": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3553,
          3567
        ],
        "op": "MLOAD",
        "path": "27"
      },
      "3553": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3553,
          3567
        ],
        "op": "DUP1",
        "path": "27"
      },
      "3554": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3553,
          3567
        ],
        "op": "SWAP2",
        "path": "27"
      },
      "3555": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3553,
          3567
        ],
        "op": "SUB",
        "path": "27"
      },
      "3556": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3553,
          3567
        ],
        "op": "SWAP1",
        "path": "27"
      },
      "3557": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          3553,
          3567
        ],
        "op": "LOG1",
        "path": "27"
      },
      "3558": {
        "offset": [
          3479,
          3578
        ],
        "op": "JUMPDEST",
        "path": "27"
      },
      "3559": {
        "offset": [
          3101,
          3584
        ],
        "op": "POP",
        "path": "27"
      },
      "3560": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4123,
          4688
        ],
        "op": "POP",
        "path": "1"
      },
      "3561": {
        "fn": "MainnetEscrow.initialize",
        "offset": [
          4123,
          4688
        ],
        "op": "POP",
        "path": "1"
      },
      "3562": {
        "fn": "MainnetEscrow.initialize",
        "jump": "o",
        "offset": [
          4123,
          4688
        ],
        "op": "JUMP",
        "path": "1"
      },
      "3563": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14769,
          15080
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "3564": {
        "offset": [
          1334,
          1347
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0xDF3"
      },
      "3567": {
        "offset": [
          1334,
          1345
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x1F6E"
      },
      "3570": {
        "jump": "i",
        "offset": [
          1334,
          1347
        ],
        "op": "JUMP",
        "path": "26"
      },
      "3571": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          1334,
          1347
        ],
        "op": "JUMPDEST",
        "path": "26"
      },
      "3572": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3574": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3576": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "3578": {
        "op": "SHL"
      },
      "3579": {
        "op": "SUB"
      },
      "3580": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14868,
          14916
        ],
        "op": "DUP2",
        "path": "1",
        "statement": 33
      },
      "3581": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14868,
          14916
        ],
        "op": "AND",
        "path": "1"
      },
      "3582": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14868,
          14916
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "3584": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14868,
          14916
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "3585": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14868,
          14916
        ],
        "op": "DUP2",
        "path": "1"
      },
      "3586": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14868,
          14916
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "3587": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14868,
          14889
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x97"
      },
      "3589": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14868,
          14916
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "3591": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14868,
          14916
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "3592": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14868,
          14916
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "3594": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14868,
          14916
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "3595": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14868,
          14916
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "3596": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14868,
          14916
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "3597": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14868,
          14916
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0xFF"
      },
      "3599": {
        "branch": 109,
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14868,
          14916
        ],
        "op": "AND",
        "path": "1"
      },
      "3600": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14860,
          14945
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xE5B"
      },
      "3603": {
        "branch": 109,
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14860,
          14945
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "3604": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14860,
          14945
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "3606": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14860,
          14945
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "3607": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "3611": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "3613": {
        "op": "SHL"
      },
      "3614": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14860,
          14945
        ],
        "op": "DUP2",
        "path": "1"
      },
      "3615": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14860,
          14945
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "3616": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "3618": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14860,
          14945
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "3620": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14860,
          14945
        ],
        "op": "DUP3",
        "path": "1"
      },
      "3621": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14860,
          14945
        ],
        "op": "ADD",
        "path": "1"
      },
      "3622": {
        "op": "MSTORE"
      },
      "3623": {
        "op": "PUSH1",
        "value": "0x18"
      },
      "3625": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "3627": {
        "op": "DUP3"
      },
      "3628": {
        "op": "ADD"
      },
      "3629": {
        "op": "MSTORE"
      },
      "3630": {
        "op": "PUSH32",
        "value": "0x546F6B656E206973206E6F742077686974656C69737465640000000000000000"
      },
      "3663": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "3665": {
        "op": "DUP3"
      },
      "3666": {
        "op": "ADD"
      },
      "3667": {
        "op": "MSTORE"
      },
      "3668": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "3670": {
        "op": "ADD"
      },
      "3671": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14860,
          14945
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x631"
      },
      "3674": {
        "op": "JUMP"
      },
      "3675": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14860,
          14945
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "3676": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3678": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3680": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "3682": {
        "op": "SHL"
      },
      "3683": {
        "op": "SUB"
      },
      "3684": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14955,
          15003
        ],
        "op": "DUP2",
        "path": "1",
        "statement": 34
      },
      "3685": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14955,
          15003
        ],
        "op": "AND",
        "path": "1"
      },
      "3686": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          15006,
          15011
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "3688": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14955,
          15003
        ],
        "op": "DUP2",
        "path": "1"
      },
      "3689": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14955,
          15003
        ],
        "op": "DUP2",
        "path": "1"
      },
      "3690": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14955,
          15003
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "3691": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14955,
          14976
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x97"
      },
      "3693": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14955,
          15003
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "3695": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14955,
          15003
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "3696": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14955,
          15003
        ],
        "op": "DUP2",
        "path": "1"
      },
      "3697": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14955,
          15003
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "3698": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14955,
          15003
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "3700": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14955,
          15003
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "3701": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14955,
          15003
        ],
        "op": "DUP3",
        "path": "1"
      },
      "3702": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14955,
          15003
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "3703": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14955,
          15003
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "3704": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14955,
          15011
        ],
        "op": "DUP1",
        "path": "1"
      },
      "3705": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14955,
          15011
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "3706": {
        "op": "PUSH1",
        "value": "0xFF"
      },
      "3708": {
        "op": "NOT"
      },
      "3709": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14955,
          15011
        ],
        "op": "AND",
        "path": "1"
      },
      "3710": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14955,
          15011
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "3711": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14955,
          15011
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "3712": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          15026,
          15073
        ],
        "op": "SWAP1",
        "path": "1",
        "statement": 35
      },
      "3713": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          15026,
          15073
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "3714": {
        "op": "SWAP2"
      },
      "3715": {
        "op": "DUP3"
      },
      "3716": {
        "op": "MSTORE"
      },
      "3717": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          15026,
          15073
        ],
        "op": "PUSH32",
        "path": "1",
        "value": "0xDC0548BC90523A9E943EA77D199875FDC1E4F8A419B6D53A595B5E6671480E5"
      },
      "3750": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          15026,
          15073
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "3751": {
        "op": "ADD"
      },
      "3752": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          15026,
          15073
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "3754": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          15026,
          15073
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "3755": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          15026,
          15073
        ],
        "op": "DUP1",
        "path": "1"
      },
      "3756": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          15026,
          15073
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "3757": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          15026,
          15073
        ],
        "op": "SUB",
        "path": "1"
      },
      "3758": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          15026,
          15073
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "3759": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          15026,
          15073
        ],
        "op": "LOG1",
        "path": "1"
      },
      "3760": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "offset": [
          14769,
          15080
        ],
        "op": "POP",
        "path": "1"
      },
      "3761": {
        "fn": "MainnetEscrow.blacklistCurrency",
        "jump": "o",
        "offset": [
          14769,
          15080
        ],
        "op": "JUMP",
        "path": "1"
      },
      "3762": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13083,
          13223
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "3763": {
        "offset": [
          1334,
          1347
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0xEBA"
      },
      "3766": {
        "offset": [
          1334,
          1345
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x1F6E"
      },
      "3769": {
        "jump": "i",
        "offset": [
          1334,
          1347
        ],
        "op": "JUMP",
        "path": "26"
      },
      "3770": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          1334,
          1347
        ],
        "op": "JUMPDEST",
        "path": "26"
      },
      "3771": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13170,
          13177
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 36,
        "value": "0x9A"
      },
      "3773": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13170,
          13177
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "3774": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13155,
          13188
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "3776": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13155,
          13188
        ],
        "op": "DUP1",
        "path": "1"
      },
      "3777": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13155,
          13188
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "3778": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3780": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3782": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "3784": {
        "op": "SHL"
      },
      "3785": {
        "op": "SUB"
      },
      "3786": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13170,
          13177
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "3787": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13170,
          13177
        ],
        "op": "DUP4",
        "path": "1"
      },
      "3788": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13170,
          13177
        ],
        "op": "AND",
        "path": "1"
      },
      "3789": {
        "op": "DUP2"
      },
      "3790": {
        "op": "MSTORE"
      },
      "3791": {
        "op": "SWAP2"
      },
      "3792": {
        "op": "DUP4"
      },
      "3793": {
        "op": "AND"
      },
      "3794": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "3796": {
        "op": "DUP4"
      },
      "3797": {
        "op": "ADD"
      },
      "3798": {
        "op": "MSTORE"
      },
      "3799": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13155,
          13188
        ],
        "op": "PUSH32",
        "path": "1",
        "value": "0x605CA4E43489FB38B91AA63DD9147CD3847957694B080B9285EC898B34269F0C"
      },
      "3832": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13155,
          13188
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "3833": {
        "op": "ADD"
      },
      "3834": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13155,
          13188
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "3836": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13155,
          13188
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "3837": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13155,
          13188
        ],
        "op": "DUP1",
        "path": "1"
      },
      "3838": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13155,
          13188
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "3839": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13155,
          13188
        ],
        "op": "SUB",
        "path": "1"
      },
      "3840": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13155,
          13188
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "3841": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13155,
          13188
        ],
        "op": "LOG1",
        "path": "1"
      },
      "3842": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13198,
          13205
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 37,
        "value": "0x9A"
      },
      "3844": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13198,
          13216
        ],
        "op": "DUP1",
        "path": "1"
      },
      "3845": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13198,
          13216
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "3846": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3848": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3850": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "3852": {
        "op": "SHL"
      },
      "3853": {
        "op": "SUB"
      },
      "3854": {
        "op": "NOT"
      },
      "3855": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13198,
          13216
        ],
        "op": "AND",
        "path": "1"
      },
      "3856": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3858": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3860": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "3862": {
        "op": "SHL"
      },
      "3863": {
        "op": "SUB"
      },
      "3864": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13198,
          13216
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "3865": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13198,
          13216
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "3866": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13198,
          13216
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "3867": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13198,
          13216
        ],
        "op": "AND",
        "path": "1"
      },
      "3868": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13198,
          13216
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "3869": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13198,
          13216
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "3870": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13198,
          13216
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "3871": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13198,
          13216
        ],
        "op": "OR",
        "path": "1"
      },
      "3872": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13198,
          13216
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "3873": {
        "fn": "MainnetEscrow.setRelayer",
        "offset": [
          13198,
          13216
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "3874": {
        "fn": "MainnetEscrow.setRelayer",
        "jump": "o",
        "offset": [
          13083,
          13223
        ],
        "op": "JUMP",
        "path": "1"
      },
      "3875": {
        "fn": "OwnableUpgradeable.renounceOwnership",
        "offset": [
          2071,
          2172
        ],
        "op": "JUMPDEST",
        "path": "26"
      },
      "3876": {
        "offset": [
          1334,
          1347
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0xF2B"
      },
      "3879": {
        "offset": [
          1334,
          1345
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x1F6E"
      },
      "3882": {
        "jump": "i",
        "offset": [
          1334,
          1347
        ],
        "op": "JUMP",
        "path": "26"
      },
      "3883": {
        "fn": "OwnableUpgradeable.renounceOwnership",
        "offset": [
          1334,
          1347
        ],
        "op": "JUMPDEST",
        "path": "26"
      },
      "3884": {
        "fn": "OwnableUpgradeable.renounceOwnership",
        "offset": [
          2135,
          2165
        ],
        "op": "PUSH2",
        "path": "26",
        "statement": 38,
        "value": "0xF35"
      },
      "3887": {
        "fn": "OwnableUpgradeable.renounceOwnership",
        "offset": [
          2162,
          2163
        ],
        "op": "PUSH1",
        "path": "26",
        "value": "0x0"
      },
      "3889": {
        "fn": "OwnableUpgradeable.renounceOwnership",
        "offset": [
          2135,
          2153
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x21CD"
      },
      "3892": {
        "fn": "OwnableUpgradeable.renounceOwnership",
        "jump": "i",
        "offset": [
          2135,
          2165
        ],
        "op": "JUMP",
        "path": "26"
      },
      "3893": {
        "fn": "OwnableUpgradeable.renounceOwnership",
        "offset": [
          2135,
          2165
        ],
        "op": "JUMPDEST",
        "path": "26"
      },
      "3894": {
        "fn": "OwnableUpgradeable.renounceOwnership",
        "jump": "o",
        "offset": [
          2071,
          2172
        ],
        "op": "JUMP",
        "path": "26"
      },
      "3895": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13306,
          13529
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "3896": {
        "offset": [
          1334,
          1347
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0xF3F"
      },
      "3899": {
        "offset": [
          1334,
          1345
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x1F6E"
      },
      "3902": {
        "jump": "i",
        "offset": [
          1334,
          1347
        ],
        "op": "JUMP",
        "path": "26"
      },
      "3903": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          1334,
          1347
        ],
        "op": "JUMPDEST",
        "path": "26"
      },
      "3904": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13415,
          13432
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 39,
        "value": "0x9B"
      },
      "3906": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13415,
          13432
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "3907": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13390,
          13454
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "3909": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13390,
          13454
        ],
        "op": "DUP1",
        "path": "1"
      },
      "3910": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13390,
          13454
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "3911": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3913": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3915": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "3917": {
        "op": "SHL"
      },
      "3918": {
        "op": "SUB"
      },
      "3919": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13415,
          13432
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "3920": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13415,
          13432
        ],
        "op": "DUP4",
        "path": "1"
      },
      "3921": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13415,
          13432
        ],
        "op": "AND",
        "path": "1"
      },
      "3922": {
        "op": "DUP2"
      },
      "3923": {
        "op": "MSTORE"
      },
      "3924": {
        "op": "SWAP2"
      },
      "3925": {
        "op": "DUP4"
      },
      "3926": {
        "op": "AND"
      },
      "3927": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "3929": {
        "op": "DUP4"
      },
      "3930": {
        "op": "ADD"
      },
      "3931": {
        "op": "MSTORE"
      },
      "3932": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13390,
          13454
        ],
        "op": "PUSH32",
        "path": "1",
        "value": "0xA8ABE0398416476DB5B05737CD4DA3B3CBDE5012D978A6A6C3FD49D321753536"
      },
      "3965": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13390,
          13454
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "3966": {
        "op": "ADD"
      },
      "3967": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13390,
          13454
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "3969": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13390,
          13454
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "3970": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13390,
          13454
        ],
        "op": "DUP1",
        "path": "1"
      },
      "3971": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13390,
          13454
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "3972": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13390,
          13454
        ],
        "op": "SUB",
        "path": "1"
      },
      "3973": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13390,
          13454
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "3974": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13390,
          13454
        ],
        "op": "LOG1",
        "path": "1"
      },
      "3975": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13464,
          13481
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 40,
        "value": "0x9B"
      },
      "3977": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13464,
          13522
        ],
        "op": "DUP1",
        "path": "1"
      },
      "3978": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13464,
          13522
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "3979": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3981": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3983": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "3985": {
        "op": "SHL"
      },
      "3986": {
        "op": "SUB"
      },
      "3987": {
        "op": "NOT"
      },
      "3988": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13464,
          13522
        ],
        "op": "AND",
        "path": "1"
      },
      "3989": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3991": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3993": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "3995": {
        "op": "SHL"
      },
      "3996": {
        "op": "SUB"
      },
      "3997": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13464,
          13522
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "3998": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13464,
          13522
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "3999": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13464,
          13522
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "4000": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13464,
          13522
        ],
        "op": "AND",
        "path": "1"
      },
      "4001": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13464,
          13522
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "4002": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13464,
          13522
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4003": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13464,
          13522
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "4004": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13464,
          13522
        ],
        "op": "OR",
        "path": "1"
      },
      "4005": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13464,
          13522
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4006": {
        "fn": "MainnetEscrow.setPriceFeed",
        "offset": [
          13464,
          13522
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "4007": {
        "fn": "MainnetEscrow.setPriceFeed",
        "jump": "o",
        "offset": [
          13306,
          13529
        ],
        "op": "JUMP",
        "path": "1"
      },
      "4008": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18684,
          19408
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4009": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4011": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4013": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "4015": {
        "op": "SHL"
      },
      "4016": {
        "op": "SUB"
      },
      "4017": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19026,
          19074
        ],
        "op": "DUP1",
        "path": "1"
      },
      "4018": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19026,
          19074
        ],
        "op": "DUP5",
        "path": "1"
      },
      "4019": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19026,
          19074
        ],
        "op": "AND",
        "path": "1"
      },
      "4020": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18814,
          18821
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "4022": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19026,
          19074
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4023": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19026,
          19074
        ],
        "op": "DUP2",
        "path": "1"
      },
      "4024": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19026,
          19074
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "4025": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19026,
          19054
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x9C"
      },
      "4027": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19026,
          19074
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "4029": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19026,
          19074
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4030": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19026,
          19074
        ],
        "op": "DUP2",
        "path": "1"
      },
      "4031": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19026,
          19074
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "4032": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19026,
          19074
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "4034": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19026,
          19074
        ],
        "op": "DUP1",
        "path": "1"
      },
      "4035": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19026,
          19074
        ],
        "op": "DUP4",
        "path": "1"
      },
      "4036": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19026,
          19074
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "4037": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19026,
          19074
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "4038": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "DUP2",
        "path": "1"
      },
      "4039": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "4040": {
        "op": "PUSH4",
        "value": "0x313CE567"
      },
      "4045": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "4047": {
        "op": "SHL"
      },
      "4048": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "DUP2",
        "path": "1"
      },
      "4049": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "4050": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "4051": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "4052": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18814,
          18821
        ],
        "op": "SWAP4",
        "path": "1"
      },
      "4053": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18814,
          18821
        ],
        "op": "SWAP5",
        "path": "1"
      },
      "4054": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18814,
          18821
        ],
        "op": "DUP6",
        "path": "1"
      },
      "4055": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18814,
          18821
        ],
        "op": "SWAP5",
        "path": "1"
      },
      "4056": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19026,
          19074
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "4057": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19026,
          19074
        ],
        "op": "AND",
        "path": "1"
      },
      "4058": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19026,
          19074
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "4059": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19084
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x313CE567"
      },
      "4064": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19084
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "4065": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "4067": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "DUP1",
        "path": "1"
      },
      "4068": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "DUP3",
        "path": "1"
      },
      "4069": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "ADD",
        "path": "1"
      },
      "4070": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "SWAP4",
        "path": "1"
      },
      "4071": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "4072": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "DUP3",
        "path": "1"
      },
      "4073": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4074": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "SUB",
        "path": "1"
      },
      "4075": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "ADD",
        "path": "1"
      },
      "4076": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "DUP2",
        "path": "1"
      },
      "4077": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19026,
          19074
        ],
        "op": "DUP7",
        "path": "1"
      },
      "4078": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "GAS",
        "path": "1"
      },
      "4079": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "STATICCALL",
        "path": "1"
      },
      "4080": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "4081": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "DUP1",
        "path": "1"
      },
      "4082": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "4083": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1000"
      },
      "4086": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "4087": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "4088": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "4090": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "DUP1",
        "path": "1"
      },
      "4091": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "RETURNDATACOPY",
        "path": "1"
      },
      "4092": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "4093": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "4095": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "REVERT",
        "path": "1"
      },
      "4096": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4097": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "POP",
        "path": "1"
      },
      "4098": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "POP",
        "path": "1"
      },
      "4099": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "POP",
        "path": "1"
      },
      "4100": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "POP",
        "path": "1"
      },
      "4101": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "4103": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "4104": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "4105": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "4107": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "NOT",
        "path": "1"
      },
      "4108": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "4110": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "DUP3",
        "path": "1"
      },
      "4111": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "ADD",
        "path": "1"
      },
      "4112": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "AND",
        "path": "1"
      },
      "4113": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "DUP3",
        "path": "1"
      },
      "4114": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "ADD",
        "path": "1"
      },
      "4115": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "DUP1",
        "path": "1"
      },
      "4116": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "4118": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "4119": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "POP",
        "path": "1"
      },
      "4120": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "DUP2",
        "path": "1"
      },
      "4121": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "ADD",
        "path": "1"
      },
      "4122": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4123": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1024"
      },
      "4126": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "4127": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4128": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BF2"
      },
      "4131": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "jump": "i",
        "offset": [
          19011,
          19086
        ],
        "op": "JUMP",
        "path": "1"
      },
      "4132": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19011,
          19086
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4133": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19005,
          19086
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x102F"
      },
      "4136": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19005,
          19086
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4137": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19005,
          19007
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0xA"
      },
      "4139": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19005,
          19086
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2CFB"
      },
      "4142": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "jump": "i",
        "offset": [
          19005,
          19086
        ],
        "op": "JUMP",
        "path": "1"
      },
      "4143": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19005,
          19086
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4144": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18891
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x9B"
      },
      "4146": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18891
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "4147": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4149": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4151": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "4153": {
        "op": "SHL"
      },
      "4154": {
        "op": "SUB"
      },
      "4155": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18911,
          18959
        ],
        "op": "DUP8",
        "path": "1"
      },
      "4156": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18911,
          18959
        ],
        "op": "DUP2",
        "path": "1"
      },
      "4157": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18911,
          18959
        ],
        "op": "AND",
        "path": "1"
      },
      "4158": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18891
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "4160": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18911,
          18959
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4161": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18911,
          18959
        ],
        "op": "DUP2",
        "path": "1"
      },
      "4162": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18911,
          18959
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "4163": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18911,
          18939
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x9C"
      },
      "4165": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18911,
          18959
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "4167": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18911,
          18959
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "4168": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18911,
          18959
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "4170": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18911,
          18959
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4171": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18911,
          18959
        ],
        "op": "DUP2",
        "path": "1"
      },
      "4172": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18911,
          18959
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4173": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18911,
          18959
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "4174": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18911,
          18959
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "4175": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4176": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "4177": {
        "op": "PUSH4",
        "value": "0xA4B943FB"
      },
      "4182": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "4184": {
        "op": "SHL"
      },
      "4185": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "DUP2",
        "path": "1"
      },
      "4186": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "4187": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18911,
          18959
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4188": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18911,
          18959
        ],
        "op": "DUP3",
        "path": "1"
      },
      "4189": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18911,
          18959
        ],
        "op": "AND",
        "path": "1"
      },
      "4190": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "4192": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "DUP3",
        "path": "1"
      },
      "4193": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "ADD",
        "path": "1"
      },
      "4194": {
        "op": "MSTORE"
      },
      "4195": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4197": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4199": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "4201": {
        "op": "SHL"
      },
      "4202": {
        "op": "SUB"
      },
      "4203": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          19000
        ],
        "op": "DUP8",
        "path": "1"
      },
      "4204": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          19000
        ],
        "op": "AND",
        "path": "1"
      },
      "4205": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          19000
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "4206": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4208": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4210": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "4212": {
        "op": "SHL"
      },
      "4213": {
        "op": "SUB"
      },
      "4214": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18978
        ],
        "op": "DUP10",
        "path": "1"
      },
      "4215": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18978
        ],
        "op": "AND",
        "path": "1"
      },
      "4216": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18978
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "4217": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18891
        ],
        "op": "AND",
        "path": "1"
      },
      "4218": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18891
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4219": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18910
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0xA4B943FB"
      },
      "4224": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18910
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4225": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "4227": {
        "op": "ADD"
      },
      "4228": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "4230": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "4232": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "4233": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "DUP1",
        "path": "1"
      },
      "4234": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "DUP4",
        "path": "1"
      },
      "4235": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "SUB",
        "path": "1"
      },
      "4236": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "DUP2",
        "path": "1"
      },
      "4237": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "DUP7",
        "path": "1"
      },
      "4238": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "GAS",
        "path": "1"
      },
      "4239": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "STATICCALL",
        "path": "1"
      },
      "4240": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "4241": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "DUP1",
        "path": "1"
      },
      "4242": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "4243": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x10A0"
      },
      "4246": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "4247": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "4248": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "4250": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "DUP1",
        "path": "1"
      },
      "4251": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "RETURNDATACOPY",
        "path": "1"
      },
      "4252": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "4253": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "4255": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "REVERT",
        "path": "1"
      },
      "4256": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4257": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "POP",
        "path": "1"
      },
      "4258": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "POP",
        "path": "1"
      },
      "4259": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "POP",
        "path": "1"
      },
      "4260": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "POP",
        "path": "1"
      },
      "4261": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "4263": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "4264": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "4265": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "4267": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "NOT",
        "path": "1"
      },
      "4268": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "4270": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "DUP3",
        "path": "1"
      },
      "4271": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "ADD",
        "path": "1"
      },
      "4272": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "AND",
        "path": "1"
      },
      "4273": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "DUP3",
        "path": "1"
      },
      "4274": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "ADD",
        "path": "1"
      },
      "4275": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "DUP1",
        "path": "1"
      },
      "4276": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "4278": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "4279": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "POP",
        "path": "1"
      },
      "4280": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "DUP2",
        "path": "1"
      },
      "4281": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "ADD",
        "path": "1"
      },
      "4282": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4283": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x10C4"
      },
      "4286": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "4287": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4288": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D0A"
      },
      "4291": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "jump": "i",
        "offset": [
          18874,
          18960
        ],
        "op": "JUMP",
        "path": "1"
      },
      "4292": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18960
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4293": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18978
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x10CE"
      },
      "4296": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18978
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "4297": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18978
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4298": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18978
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D23"
      },
      "4301": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "jump": "i",
        "offset": [
          18874,
          18978
        ],
        "op": "JUMP",
        "path": "1"
      },
      "4302": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          18978
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4303": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          19000
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x10D8"
      },
      "4306": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          19000
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "4307": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          19000
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4308": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          19000
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D23"
      },
      "4311": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "jump": "i",
        "offset": [
          18874,
          19000
        ],
        "op": "JUMP",
        "path": "1"
      },
      "4312": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18874,
          19000
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4313": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18873,
          19087
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x10E2"
      },
      "4316": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18873,
          19087
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "4317": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18873,
          19087
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4318": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18873,
          19087
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D58"
      },
      "4321": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "jump": "i",
        "offset": [
          18873,
          19087
        ],
        "op": "JUMP",
        "path": "1"
      },
      "4322": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18873,
          19087
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4323": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18833,
          19087
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4324": {
        "op": "POP"
      },
      "4325": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19097,
          19127
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "4327": {
        "offset": [
          2409,
          2414
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2710"
      },
      "4330": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19131,
          19188
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x10F5"
      },
      "4333": {
        "offset": [
          2346,
          2349
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1F4"
      },
      "4336": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18833,
          19087
        ],
        "op": "DUP5",
        "path": "1"
      },
      "4337": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19131,
          19188
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D23"
      },
      "4340": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "jump": "i",
        "offset": [
          19131,
          19188
        ],
        "op": "JUMP",
        "path": "1"
      },
      "4341": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19131,
          19188
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4342": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19130,
          19219
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x10FF"
      },
      "4345": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19130,
          19219
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "4346": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19130,
          19219
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4347": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19130,
          19219
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D58"
      },
      "4350": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "jump": "i",
        "offset": [
          19130,
          19219
        ],
        "op": "JUMP",
        "path": "1"
      },
      "4351": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19130,
          19219
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4352": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19306
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x9B"
      },
      "4354": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19306
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "4355": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "4357": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "4358": {
        "op": "PUSH4",
        "value": "0xA4B943FB"
      },
      "4363": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "4365": {
        "op": "SHL"
      },
      "4366": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "DUP2",
        "path": "1"
      },
      "4367": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "4368": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19326,
          19368
        ],
        "op": "PUSH20",
        "path": "1",
        "value": "0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
      },
      "4389": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "4391": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "DUP3",
        "path": "1"
      },
      "4392": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "ADD",
        "path": "1"
      },
      "4393": {
        "op": "MSTORE"
      },
      "4394": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19097,
          19219
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "4395": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19097,
          19219
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "4396": {
        "op": "POP"
      },
      "4397": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19229,
          19252
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "4399": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19229,
          19252
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "4400": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4402": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4404": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "4406": {
        "op": "SHL"
      },
      "4407": {
        "op": "SUB"
      },
      "4408": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19306
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4409": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19306
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "4410": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19306
        ],
        "op": "AND",
        "path": "1"
      },
      "4411": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19306
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4412": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19325
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0xA4B943FB"
      },
      "4417": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19325
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4418": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "4420": {
        "op": "ADD"
      },
      "4421": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "4423": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "4425": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "4426": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "DUP1",
        "path": "1"
      },
      "4427": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "DUP4",
        "path": "1"
      },
      "4428": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "SUB",
        "path": "1"
      },
      "4429": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "DUP2",
        "path": "1"
      },
      "4430": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "DUP7",
        "path": "1"
      },
      "4431": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "GAS",
        "path": "1"
      },
      "4432": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "STATICCALL",
        "path": "1"
      },
      "4433": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "4434": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "DUP1",
        "path": "1"
      },
      "4435": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "4436": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1161"
      },
      "4439": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "4440": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "4441": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "4443": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "DUP1",
        "path": "1"
      },
      "4444": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "RETURNDATACOPY",
        "path": "1"
      },
      "4445": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "4446": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "4448": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "REVERT",
        "path": "1"
      },
      "4449": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4450": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "POP",
        "path": "1"
      },
      "4451": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "POP",
        "path": "1"
      },
      "4452": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "POP",
        "path": "1"
      },
      "4453": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "POP",
        "path": "1"
      },
      "4454": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "4456": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "4457": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "4458": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "4460": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "NOT",
        "path": "1"
      },
      "4461": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "4463": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "DUP3",
        "path": "1"
      },
      "4464": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "ADD",
        "path": "1"
      },
      "4465": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "AND",
        "path": "1"
      },
      "4466": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "DUP3",
        "path": "1"
      },
      "4467": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "ADD",
        "path": "1"
      },
      "4468": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "DUP1",
        "path": "1"
      },
      "4469": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "4471": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "4472": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "POP",
        "path": "1"
      },
      "4473": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "DUP2",
        "path": "1"
      },
      "4474": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "ADD",
        "path": "1"
      },
      "4475": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4476": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1185"
      },
      "4479": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "4480": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4481": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D0A"
      },
      "4484": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "jump": "i",
        "offset": [
          19289,
          19369
        ],
        "op": "JUMP",
        "path": "1"
      },
      "4485": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19289,
          19369
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4486": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19256,
          19285
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1197"
      },
      "4489": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19256,
          19278
        ],
        "op": "DUP4",
        "path": "1"
      },
      "4490": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19281,
          19285
        ],
        "op": "PUSH8",
        "path": "1",
        "value": "0xDE0B6B3A7640000"
      },
      "4499": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19256,
          19285
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D23"
      },
      "4502": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "jump": "i",
        "offset": [
          19256,
          19285
        ],
        "op": "JUMP",
        "path": "1"
      },
      "4503": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19256,
          19285
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4504": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19255,
          19369
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x11A1"
      },
      "4507": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19255,
          19369
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "4508": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19255,
          19369
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4509": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19255,
          19369
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D58"
      },
      "4512": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "jump": "i",
        "offset": [
          19255,
          19369
        ],
        "op": "JUMP",
        "path": "1"
      },
      "4513": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19255,
          19369
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4514": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          19229,
          19369
        ],
        "op": "SWAP4",
        "path": "1"
      },
      "4515": {
        "op": "POP"
      },
      "4516": {
        "op": "POP"
      },
      "4517": {
        "op": "POP"
      },
      "4518": {
        "op": "POP"
      },
      "4519": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18684,
          19408
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4520": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18684,
          19408
        ],
        "op": "SWAP4",
        "path": "1"
      },
      "4521": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18684,
          19408
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "4522": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18684,
          19408
        ],
        "op": "POP",
        "path": "1"
      },
      "4523": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18684,
          19408
        ],
        "op": "POP",
        "path": "1"
      },
      "4524": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "offset": [
          18684,
          19408
        ],
        "op": "POP",
        "path": "1"
      },
      "4525": {
        "fn": "MainnetEscrow.fairRaffleFeeERC721",
        "jump": "o",
        "offset": [
          18684,
          19408
        ],
        "op": "JUMP",
        "path": "1"
      },
      "4526": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13787,
          13950
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4527": {
        "offset": [
          1334,
          1347
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x11B6"
      },
      "4530": {
        "offset": [
          1334,
          1345
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x1F6E"
      },
      "4533": {
        "jump": "i",
        "offset": [
          1334,
          1347
        ],
        "op": "JUMP",
        "path": "26"
      },
      "4534": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          1334,
          1347
        ],
        "op": "JUMPDEST",
        "path": "26"
      },
      "4535": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13883,
          13894
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 41,
        "value": "0x98"
      },
      "4537": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13883,
          13894
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "4538": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13865,
          13908
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "4540": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13865,
          13908
        ],
        "op": "DUP1",
        "path": "1"
      },
      "4541": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13865,
          13908
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "4542": {
        "op": "SWAP2"
      },
      "4543": {
        "op": "DUP3"
      },
      "4544": {
        "op": "MSTORE"
      },
      "4545": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "4547": {
        "op": "DUP3"
      },
      "4548": {
        "op": "ADD"
      },
      "4549": {
        "op": "DUP4"
      },
      "4550": {
        "op": "SWAP1"
      },
      "4551": {
        "op": "MSTORE"
      },
      "4552": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13865,
          13908
        ],
        "op": "PUSH32",
        "path": "1",
        "value": "0x9DC2340C6769757C8D7DFE3A65A3F1E297ED8F919BED31501223AC8AA85DC63D"
      },
      "4585": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13865,
          13908
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "4586": {
        "op": "ADD"
      },
      "4587": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13865,
          13908
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "4589": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13865,
          13908
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "4590": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13865,
          13908
        ],
        "op": "DUP1",
        "path": "1"
      },
      "4591": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13865,
          13908
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "4592": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13865,
          13908
        ],
        "op": "SUB",
        "path": "1"
      },
      "4593": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13865,
          13908
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4594": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13865,
          13908
        ],
        "op": "LOG1",
        "path": "1"
      },
      "4595": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13918,
          13929
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 42,
        "value": "0x98"
      },
      "4597": {
        "fn": "MainnetEscrow.setOpeningFee",
        "offset": [
          13918,
          13943
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "4598": {
        "fn": "MainnetEscrow.setOpeningFee",
        "jump": "o",
        "offset": [
          13787,
          13950
        ],
        "op": "JUMP",
        "path": "1"
      },
      "4599": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8580,
          10426
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4600": {
        "offset": [
          1482,
          1501
        ],
        "op": "PUSH2",
        "path": "28",
        "value": "0x11FF"
      },
      "4603": {
        "offset": [
          1482,
          1499
        ],
        "op": "PUSH2",
        "path": "28",
        "value": "0x1F28"
      },
      "4606": {
        "jump": "i",
        "offset": [
          1482,
          1501
        ],
        "op": "JUMP",
        "path": "28"
      },
      "4607": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          1482,
          1501
        ],
        "op": "JUMPDEST",
        "path": "28"
      },
      "4608": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4610": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4612": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "4614": {
        "op": "SHL"
      },
      "4615": {
        "op": "SUB"
      },
      "4616": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8850,
          8891
        ],
        "op": "DUP7",
        "path": "1",
        "statement": 43
      },
      "4617": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8850,
          8891
        ],
        "op": "AND",
        "path": "1"
      },
      "4618": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8850,
          8891
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "4620": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8850,
          8891
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4621": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8850,
          8891
        ],
        "op": "DUP2",
        "path": "1"
      },
      "4622": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8850,
          8891
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "4623": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8850,
          8871
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x97"
      },
      "4625": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8850,
          8891
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "4627": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8850,
          8891
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "4628": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8850,
          8891
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "4630": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8850,
          8891
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4631": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8850,
          8891
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "4632": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8850,
          8891
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "4633": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8850,
          8891
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0xFF"
      },
      "4635": {
        "branch": 110,
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8850,
          8891
        ],
        "op": "AND",
        "path": "1"
      },
      "4636": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8842,
          8928
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1267"
      },
      "4639": {
        "branch": 110,
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8842,
          8928
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "4640": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8842,
          8928
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "4642": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8842,
          8928
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "4643": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "4647": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "4649": {
        "op": "SHL"
      },
      "4650": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8842,
          8928
        ],
        "op": "DUP2",
        "path": "1"
      },
      "4651": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8842,
          8928
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "4652": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "4654": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8842,
          8928
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "4656": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8842,
          8928
        ],
        "op": "DUP3",
        "path": "1"
      },
      "4657": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8842,
          8928
        ],
        "op": "ADD",
        "path": "1"
      },
      "4658": {
        "op": "DUP2"
      },
      "4659": {
        "op": "SWAP1"
      },
      "4660": {
        "op": "MSTORE"
      },
      "4661": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "4663": {
        "op": "DUP3"
      },
      "4664": {
        "op": "ADD"
      },
      "4665": {
        "op": "MSTORE"
      },
      "4666": {
        "op": "PUSH32",
        "value": "0x546869732063757272656E6379206973206E6F742077686974656C6973746564"
      },
      "4699": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "4701": {
        "op": "DUP3"
      },
      "4702": {
        "op": "ADD"
      },
      "4703": {
        "op": "MSTORE"
      },
      "4704": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "4706": {
        "op": "ADD"
      },
      "4707": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8842,
          8928
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x631"
      },
      "4710": {
        "op": "JUMP"
      },
      "4711": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8842,
          8928
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4712": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8965,
          8966
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 44,
        "value": "0x1"
      },
      "4714": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8946,
          8962
        ],
        "op": "DUP5",
        "path": "1"
      },
      "4715": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4717": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4719": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "4721": {
        "op": "SHL"
      },
      "4722": {
        "op": "SUB"
      },
      "4723": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8946,
          8966
        ],
        "op": "AND",
        "path": "1"
      },
      "4724": {
        "branch": 111,
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8946,
          8966
        ],
        "op": "GT",
        "path": "1"
      },
      "4725": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8938,
          9007
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1290"
      },
      "4728": {
        "branch": 111,
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8938,
          9007
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "4729": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8938,
          9007
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "4731": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8938,
          9007
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "4732": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "4736": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "4738": {
        "op": "SHL"
      },
      "4739": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8938,
          9007
        ],
        "op": "DUP2",
        "path": "1"
      },
      "4740": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8938,
          9007
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "4741": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8938,
          9007
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "4743": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8938,
          9007
        ],
        "op": "ADD",
        "path": "1"
      },
      "4744": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8938,
          9007
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x631"
      },
      "4747": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8938,
          9007
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4748": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8938,
          9007
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2A4A"
      },
      "4751": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "jump": "i",
        "offset": [
          8938,
          9007
        ],
        "op": "JUMP",
        "path": "1"
      },
      "4752": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          8938,
          9007
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4753": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9048,
          9064
        ],
        "op": "DUP4",
        "path": "1",
        "statement": 45
      },
      "4754": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4756": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4758": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "4760": {
        "op": "SHL"
      },
      "4761": {
        "op": "SUB"
      },
      "4762": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9025,
          9064
        ],
        "op": "AND",
        "path": "1"
      },
      "4763": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9025,
          9044
        ],
        "op": "DUP4",
        "path": "1"
      },
      "4764": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4766": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4768": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "4770": {
        "op": "SHL"
      },
      "4771": {
        "op": "SUB"
      },
      "4772": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9025,
          9064
        ],
        "op": "AND",
        "path": "1"
      },
      "4773": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9025,
          9064
        ],
        "op": "GT",
        "path": "1"
      },
      "4774": {
        "branch": 112,
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9025,
          9064
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "4775": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9017,
          9115
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x12C2"
      },
      "4778": {
        "branch": 112,
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9017,
          9115
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "4779": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9017,
          9115
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "4781": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9017,
          9115
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "4782": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "4786": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "4788": {
        "op": "SHL"
      },
      "4789": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9017,
          9115
        ],
        "op": "DUP2",
        "path": "1"
      },
      "4790": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9017,
          9115
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "4791": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9017,
          9115
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "4793": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9017,
          9115
        ],
        "op": "ADD",
        "path": "1"
      },
      "4794": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9017,
          9115
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x631"
      },
      "4797": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9017,
          9115
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4798": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9017,
          9115
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2A8E"
      },
      "4801": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "jump": "i",
        "offset": [
          9017,
          9115
        ],
        "op": "JUMP",
        "path": "1"
      },
      "4802": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9017,
          9115
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4803": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9155,
          9160
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 46,
        "value": "0xA8C0"
      },
      "4806": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9133,
          9151
        ],
        "op": "DUP3",
        "path": "1"
      },
      "4807": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4809": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4811": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "4813": {
        "op": "SHL"
      },
      "4814": {
        "op": "SUB"
      },
      "4815": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9133,
          9160
        ],
        "op": "AND",
        "path": "1"
      },
      "4816": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9133,
          9160
        ],
        "op": "LT",
        "path": "1"
      },
      "4817": {
        "branch": 113,
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9133,
          9160
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "4818": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9125,
          9193
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x131D"
      },
      "4821": {
        "branch": 113,
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9125,
          9193
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "4822": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9125,
          9193
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "4824": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9125,
          9193
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "4825": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "4829": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "4831": {
        "op": "SHL"
      },
      "4832": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9125,
          9193
        ],
        "op": "DUP2",
        "path": "1"
      },
      "4833": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9125,
          9193
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "4834": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "4836": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9125,
          9193
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "4838": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9125,
          9193
        ],
        "op": "DUP3",
        "path": "1"
      },
      "4839": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9125,
          9193
        ],
        "op": "ADD",
        "path": "1"
      },
      "4840": {
        "op": "MSTORE"
      },
      "4841": {
        "op": "PUSH1",
        "value": "0x1C"
      },
      "4843": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "4845": {
        "op": "DUP3"
      },
      "4846": {
        "op": "ADD"
      },
      "4847": {
        "op": "MSTORE"
      },
      "4848": {
        "op": "PUSH32",
        "value": "0x4D696E696D756D206475726174696F6E20697320313220686F75727300000000"
      },
      "4881": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "4883": {
        "op": "DUP3"
      },
      "4884": {
        "op": "ADD"
      },
      "4885": {
        "op": "MSTORE"
      },
      "4886": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "4888": {
        "op": "ADD"
      },
      "4889": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9125,
          9193
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x631"
      },
      "4892": {
        "op": "JUMP"
      },
      "4893": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9125,
          9193
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4894": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9212,
          9235
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "4896": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9238,
          9357
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x132D"
      },
      "4899": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9258,
          9271
        ],
        "op": "DUP10",
        "path": "1"
      },
      "4900": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9273,
          9280
        ],
        "op": "DUP10",
        "path": "1"
      },
      "4901": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9282,
          9300
        ],
        "op": "DUP10",
        "path": "1"
      },
      "4902": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9302,
          9317
        ],
        "op": "DUP10",
        "path": "1"
      },
      "4903": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9319,
          9335
        ],
        "op": "DUP10",
        "path": "1"
      },
      "4904": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9337,
          9356
        ],
        "op": "DUP10",
        "path": "1"
      },
      "4905": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9238,
          9256
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1607"
      },
      "4908": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "jump": "i",
        "offset": [
          9238,
          9357
        ],
        "op": "JUMP",
        "path": "1"
      },
      "4909": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9238,
          9357
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4910": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9212,
          9357
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4911": {
        "op": "POP"
      },
      "4912": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4914": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4916": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "4918": {
        "op": "SHL"
      },
      "4919": {
        "op": "SUB"
      },
      "4920": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9372,
          9399
        ],
        "op": "DUP10",
        "path": "1"
      },
      "4921": {
        "branch": 114,
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9372,
          9399
        ],
        "op": "AND",
        "path": "1"
      },
      "4922": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9368,
          9980
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x139B"
      },
      "4925": {
        "branch": 114,
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9368,
          9980
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "4926": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9446,
          9457
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 47,
        "value": "0x98"
      },
      "4928": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9446,
          9457
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "4929": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9436,
          9457
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1353"
      },
      "4932": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9436,
          9457
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4933": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4935": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4937": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "4939": {
        "op": "SHL"
      },
      "4940": {
        "op": "SUB"
      },
      "4941": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9436,
          9457
        ],
        "op": "DUP11",
        "path": "1"
      },
      "4942": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9436,
          9457
        ],
        "op": "AND",
        "path": "1"
      },
      "4943": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9436,
          9457
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2AF2"
      },
      "4946": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "jump": "i",
        "offset": [
          9436,
          9457
        ],
        "op": "JUMP",
        "path": "1"
      },
      "4947": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9436,
          9457
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4948": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9423,
          9432
        ],
        "op": "CALLVALUE",
        "path": "1"
      },
      "4949": {
        "branch": 115,
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9423,
          9457
        ],
        "op": "EQ",
        "path": "1"
      },
      "4950": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9415,
          9480
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1396"
      },
      "4953": {
        "branch": 115,
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9415,
          9480
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "4954": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9415,
          9480
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "4956": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9415,
          9480
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "4957": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "4961": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "4963": {
        "op": "SHL"
      },
      "4964": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9415,
          9480
        ],
        "op": "DUP2",
        "path": "1"
      },
      "4965": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9415,
          9480
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "4966": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "4968": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9415,
          9480
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "4970": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9415,
          9480
        ],
        "op": "DUP3",
        "path": "1"
      },
      "4971": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9415,
          9480
        ],
        "op": "ADD",
        "path": "1"
      },
      "4972": {
        "op": "MSTORE"
      },
      "4973": {
        "op": "PUSH1",
        "value": "0x12"
      },
      "4975": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "4977": {
        "op": "DUP3"
      },
      "4978": {
        "op": "ADD"
      },
      "4979": {
        "op": "MSTORE"
      },
      "4980": {
        "op": "PUSH18",
        "value": "0x125B98DBDC9C9958DD08199959481CD95B9D"
      },
      "4999": {
        "op": "PUSH1",
        "value": "0x72"
      },
      "5001": {
        "op": "SHL"
      },
      "5002": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "5004": {
        "op": "DUP3"
      },
      "5005": {
        "op": "ADD"
      },
      "5006": {
        "op": "MSTORE"
      },
      "5007": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "5009": {
        "op": "ADD"
      },
      "5010": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9415,
          9480
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x631"
      },
      "5013": {
        "op": "JUMP"
      },
      "5014": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9415,
          9480
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "5015": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9368,
          9980
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1548"
      },
      "5018": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9368,
          9980
        ],
        "op": "JUMP",
        "path": "1"
      },
      "5019": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9368,
          9980
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "5020": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9532,
          9543
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 48,
        "value": "0x98"
      },
      "5022": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9532,
          9543
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "5023": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9519,
          9528
        ],
        "op": "CALLVALUE",
        "path": "1"
      },
      "5024": {
        "branch": 116,
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9519,
          9543
        ],
        "op": "EQ",
        "path": "1"
      },
      "5025": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9511,
          9574
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x13EC"
      },
      "5028": {
        "branch": 116,
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9511,
          9574
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "5029": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9511,
          9574
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "5031": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9511,
          9574
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "5032": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "5036": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "5038": {
        "op": "SHL"
      },
      "5039": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9511,
          9574
        ],
        "op": "DUP2",
        "path": "1"
      },
      "5040": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9511,
          9574
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "5041": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "5043": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9511,
          9574
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "5045": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9511,
          9574
        ],
        "op": "DUP3",
        "path": "1"
      },
      "5046": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9511,
          9574
        ],
        "op": "ADD",
        "path": "1"
      },
      "5047": {
        "op": "MSTORE"
      },
      "5048": {
        "op": "PUSH1",
        "value": "0x1A"
      },
      "5050": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "5052": {
        "op": "DUP3"
      },
      "5053": {
        "op": "ADD"
      },
      "5054": {
        "op": "MSTORE"
      },
      "5055": {
        "op": "PUSH32",
        "value": "0x496E636F7272656374204F50454E494E475F4645452073656E74000000000000"
      },
      "5088": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "5090": {
        "op": "DUP3"
      },
      "5091": {
        "op": "ADD"
      },
      "5092": {
        "op": "MSTORE"
      },
      "5093": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "5095": {
        "op": "ADD"
      },
      "5096": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9511,
          9574
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x631"
      },
      "5099": {
        "op": "JUMP"
      },
      "5100": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9511,
          9574
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "5101": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "5103": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "5104": {
        "op": "PUSH4",
        "value": "0x70A08231"
      },
      "5109": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "5111": {
        "op": "SHL"
      },
      "5112": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "DUP2",
        "path": "1"
      },
      "5113": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "5114": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9652,
          9656
        ],
        "op": "ADDRESS",
        "path": "1"
      },
      "5115": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "5117": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "DUP3",
        "path": "1"
      },
      "5118": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "ADD",
        "path": "1"
      },
      "5119": {
        "op": "MSTORE"
      },
      "5120": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9588,
          9609
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "5122": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9588,
          9609
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5123": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5125": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5127": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "5129": {
        "op": "SHL"
      },
      "5130": {
        "op": "SUB"
      },
      "5131": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9643
        ],
        "op": "DUP12",
        "path": "1"
      },
      "5132": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9643
        ],
        "op": "AND",
        "path": "1"
      },
      "5133": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9643
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5134": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9643
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x70A08231"
      },
      "5139": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9643
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5140": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "5142": {
        "op": "ADD"
      },
      "5143": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "5145": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "5147": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "5148": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "DUP1",
        "path": "1"
      },
      "5149": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "DUP4",
        "path": "1"
      },
      "5150": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "SUB",
        "path": "1"
      },
      "5151": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "DUP2",
        "path": "1"
      },
      "5152": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "DUP7",
        "path": "1"
      },
      "5153": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "GAS",
        "path": "1"
      },
      "5154": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "STATICCALL",
        "path": "1"
      },
      "5155": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "5156": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "DUP1",
        "path": "1"
      },
      "5157": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "5158": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1433"
      },
      "5161": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "5162": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "5163": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "5165": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "DUP1",
        "path": "1"
      },
      "5166": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "RETURNDATACOPY",
        "path": "1"
      },
      "5167": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "5168": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "5170": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "REVERT",
        "path": "1"
      },
      "5171": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "5172": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "POP",
        "path": "1"
      },
      "5173": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "POP",
        "path": "1"
      },
      "5174": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "POP",
        "path": "1"
      },
      "5175": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "POP",
        "path": "1"
      },
      "5176": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "5178": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "5179": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "5180": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "5182": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "NOT",
        "path": "1"
      },
      "5183": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "5185": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "DUP3",
        "path": "1"
      },
      "5186": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "ADD",
        "path": "1"
      },
      "5187": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "AND",
        "path": "1"
      },
      "5188": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "DUP3",
        "path": "1"
      },
      "5189": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "ADD",
        "path": "1"
      },
      "5190": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "DUP1",
        "path": "1"
      },
      "5191": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "5193": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "5194": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "POP",
        "path": "1"
      },
      "5195": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "DUP2",
        "path": "1"
      },
      "5196": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "ADD",
        "path": "1"
      },
      "5197": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5198": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1457"
      },
      "5201": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "5202": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5203": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D0A"
      },
      "5206": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "jump": "i",
        "offset": [
          9612,
          9658
        ],
        "op": "JUMP",
        "path": "1"
      },
      "5207": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9612,
          9658
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "5208": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9588,
          9658
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5209": {
        "op": "POP"
      },
      "5210": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9719,
          9793
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 49,
        "value": "0x1477"
      },
      "5213": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5215": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5217": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "5219": {
        "op": "SHL"
      },
      "5220": {
        "op": "SUB"
      },
      "5221": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9719,
          9757
        ],
        "op": "DUP12",
        "path": "1"
      },
      "5222": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9719,
          9757
        ],
        "op": "AND",
        "path": "1"
      },
      "5223": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9758,
          9768
        ],
        "op": "CALLER",
        "path": "1"
      },
      "5224": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9778,
          9782
        ],
        "op": "ADDRESS",
        "path": "1"
      },
      "5225": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5227": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5229": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "5231": {
        "op": "SHL"
      },
      "5232": {
        "op": "SUB"
      },
      "5233": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9719,
          9793
        ],
        "op": "DUP14",
        "path": "1"
      },
      "5234": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9719,
          9793
        ],
        "op": "AND",
        "path": "1"
      },
      "5235": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9719,
          9757
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x221F"
      },
      "5238": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "jump": "i",
        "offset": [
          9719,
          9793
        ],
        "op": "JUMP",
        "path": "1"
      },
      "5239": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9719,
          9793
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "5240": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "5242": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "5243": {
        "op": "PUSH4",
        "value": "0x70A08231"
      },
      "5248": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "5250": {
        "op": "SHL"
      },
      "5251": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "DUP2",
        "path": "1"
      },
      "5252": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "5253": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9870,
          9874
        ],
        "op": "ADDRESS",
        "path": "1"
      },
      "5254": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "5256": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "DUP3",
        "path": "1"
      },
      "5257": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "ADD",
        "path": "1"
      },
      "5258": {
        "op": "MSTORE"
      },
      "5259": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9807,
          9827
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "5261": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9807,
          9827
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5262": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5264": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5266": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "5268": {
        "op": "SHL"
      },
      "5269": {
        "op": "SUB"
      },
      "5270": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9861
        ],
        "op": "DUP13",
        "path": "1"
      },
      "5271": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9861
        ],
        "op": "AND",
        "path": "1"
      },
      "5272": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9861
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5273": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9861
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x70A08231"
      },
      "5278": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9861
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5279": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "5281": {
        "op": "ADD"
      },
      "5282": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "5284": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "5286": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "5287": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "DUP1",
        "path": "1"
      },
      "5288": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "DUP4",
        "path": "1"
      },
      "5289": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "SUB",
        "path": "1"
      },
      "5290": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "DUP2",
        "path": "1"
      },
      "5291": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "DUP7",
        "path": "1"
      },
      "5292": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "GAS",
        "path": "1"
      },
      "5293": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "STATICCALL",
        "path": "1"
      },
      "5294": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "5295": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "DUP1",
        "path": "1"
      },
      "5296": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "5297": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x14BE"
      },
      "5300": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "5301": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "5302": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "5304": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "DUP1",
        "path": "1"
      },
      "5305": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "RETURNDATACOPY",
        "path": "1"
      },
      "5306": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "5307": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "5309": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "REVERT",
        "path": "1"
      },
      "5310": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "5311": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "POP",
        "path": "1"
      },
      "5312": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "POP",
        "path": "1"
      },
      "5313": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "POP",
        "path": "1"
      },
      "5314": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "POP",
        "path": "1"
      },
      "5315": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "5317": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "5318": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "5319": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "5321": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "NOT",
        "path": "1"
      },
      "5322": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "5324": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "DUP3",
        "path": "1"
      },
      "5325": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "ADD",
        "path": "1"
      },
      "5326": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "AND",
        "path": "1"
      },
      "5327": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "DUP3",
        "path": "1"
      },
      "5328": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "ADD",
        "path": "1"
      },
      "5329": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "DUP1",
        "path": "1"
      },
      "5330": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "5332": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "5333": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "POP",
        "path": "1"
      },
      "5334": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "DUP2",
        "path": "1"
      },
      "5335": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "ADD",
        "path": "1"
      },
      "5336": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5337": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x14E2"
      },
      "5340": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "5341": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5342": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D0A"
      },
      "5345": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "jump": "i",
        "offset": [
          9830,
          9876
        ],
        "op": "JUMP",
        "path": "1"
      },
      "5346": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9830,
          9876
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "5347": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9807,
          9876
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5348": {
        "op": "POP"
      },
      "5349": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9909,
          9937
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 50,
        "value": "0x14EE"
      },
      "5352": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9924,
          9937
        ],
        "op": "DUP3",
        "path": "1"
      },
      "5353": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9807,
          9876
        ],
        "op": "DUP3",
        "path": "1"
      },
      "5354": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9909,
          9937
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D6C"
      },
      "5357": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "jump": "i",
        "offset": [
          9909,
          9937
        ],
        "op": "JUMP",
        "path": "1"
      },
      "5358": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9909,
          9937
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "5359": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9898,
          9905
        ],
        "op": "DUP11",
        "path": "1"
      },
      "5360": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5362": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5364": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "5366": {
        "op": "SHL"
      },
      "5367": {
        "op": "SUB"
      },
      "5368": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9898,
          9937
        ],
        "op": "AND",
        "path": "1"
      },
      "5369": {
        "branch": 117,
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9898,
          9937
        ],
        "op": "EQ",
        "path": "1"
      },
      "5370": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9890,
          9969
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1545"
      },
      "5373": {
        "branch": 117,
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9890,
          9969
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "5374": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9890,
          9969
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "5376": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9890,
          9969
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "5377": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "5381": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "5383": {
        "op": "SHL"
      },
      "5384": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9890,
          9969
        ],
        "op": "DUP2",
        "path": "1"
      },
      "5385": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9890,
          9969
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "5386": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "5388": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9890,
          9969
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "5390": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9890,
          9969
        ],
        "op": "DUP3",
        "path": "1"
      },
      "5391": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9890,
          9969
        ],
        "op": "ADD",
        "path": "1"
      },
      "5392": {
        "op": "MSTORE"
      },
      "5393": {
        "op": "PUSH1",
        "value": "0x1B"
      },
      "5395": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "5397": {
        "op": "DUP3"
      },
      "5398": {
        "op": "ADD"
      },
      "5399": {
        "op": "MSTORE"
      },
      "5400": {
        "op": "PUSH32",
        "value": "0x455243323020746F6B656E207472616E73666572206661696C65640000000000"
      },
      "5433": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "5435": {
        "op": "DUP3"
      },
      "5436": {
        "op": "ADD"
      },
      "5437": {
        "op": "MSTORE"
      },
      "5438": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "5440": {
        "op": "ADD"
      },
      "5441": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9890,
          9969
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x631"
      },
      "5444": {
        "op": "JUMP"
      },
      "5445": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9890,
          9969
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "5446": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9497,
          9980
        ],
        "op": "POP",
        "path": "1"
      },
      "5447": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9497,
          9980
        ],
        "op": "POP",
        "path": "1"
      },
      "5448": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9368,
          9980
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "5449": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          10026,
          10037
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 51,
        "value": "0x98"
      },
      "5451": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          10026,
          10037
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "5452": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9990,
          10022
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "5454": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9990,
          10022
        ],
        "op": "DUP1",
        "path": "1"
      },
      "5455": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9990,
          10022
        ],
        "op": "DUP1",
        "path": "1"
      },
      "5456": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9990,
          10022
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "5457": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9990,
          10010
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x99"
      },
      "5459": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9990,
          10022
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "5461": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9990,
          10022
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "5462": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9990,
          10022
        ],
        "op": "PUSH32",
        "path": "1",
        "value": "0x235D629DC802037DED8C61CB27FB29E40FA01B299719D8F991FFE20BDCC59F4F"
      },
      "5495": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9990,
          10037
        ],
        "op": "DUP1",
        "path": "1"
      },
      "5496": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9990,
          10037
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "5497": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9990,
          10022
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5498": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9990,
          10022
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "5499": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9990,
          10022
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5500": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9990,
          10037
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1586"
      },
      "5503": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9990,
          10037
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5504": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          10026,
          10037
        ],
        "op": "DUP5",
        "path": "1"
      },
      "5505": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          10026,
          10037
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5506": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9990,
          10037
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2AF2"
      },
      "5509": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "jump": "i",
        "offset": [
          9990,
          10037
        ],
        "op": "JUMP",
        "path": "1"
      },
      "5510": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9990,
          10037
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "5511": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9990,
          10037
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5512": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9990,
          10037
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "5513": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          9990,
          10037
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "5514": {
        "op": "POP"
      },
      "5515": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          10052,
          10419
        ],
        "op": "PUSH32",
        "path": "1",
        "statement": 52,
        "value": "0xB26C0BF32D8D3EFF0D0561D0B30F4BF8962A18678833B276FCBBE06C48E9EAAA"
      },
      "5548": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          10052,
          10419
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5549": {
        "op": "POP"
      },
      "5550": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          10079,
          10092
        ],
        "op": "DUP10",
        "path": "1"
      },
      "5551": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          10106,
          10116
        ],
        "op": "CALLER",
        "path": "1"
      },
      "5552": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          10130,
          10146
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1"
      },
      "5554": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          10160,
          10167
        ],
        "op": "DUP12",
        "path": "1"
      },
      "5555": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          10182,
          10200
        ],
        "op": "DUP12",
        "path": "1"
      },
      "5556": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          10215,
          10230
        ],
        "op": "DUP12",
        "path": "1"
      },
      "5557": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          10245,
          10261
        ],
        "op": "DUP12",
        "path": "1"
      },
      "5558": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          10276,
          10295
        ],
        "op": "DUP12",
        "path": "1"
      },
      "5559": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          10317,
          10353
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x96A"
      },
      "5562": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5564": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5566": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "5568": {
        "op": "SHL"
      },
      "5569": {
        "op": "SUB"
      },
      "5570": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          10317,
          10353
        ],
        "op": "DUP14",
        "path": "1"
      },
      "5571": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          10317,
          10353
        ],
        "op": "AND",
        "path": "1"
      },
      "5572": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          10317,
          10332
        ],
        "op": "TIMESTAMP",
        "path": "1"
      },
      "5573": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "offset": [
          10317,
          10353
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2AF2"
      },
      "5576": {
        "fn": "MainnetEscrow.createERC20Raffle",
        "jump": "i",
        "offset": [
          10317,
          10353
        ],
        "op": "JUMP",
        "path": "1"
      },
      "5577": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13618,
          13719
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "5578": {
        "offset": [
          1334,
          1347
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x15D1"
      },
      "5581": {
        "offset": [
          1334,
          1345
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x1F6E"
      },
      "5584": {
        "jump": "i",
        "offset": [
          1334,
          1347
        ],
        "op": "JUMP",
        "path": "26"
      },
      "5585": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          1334,
          1347
        ],
        "op": "JUMPDEST",
        "path": "26"
      },
      "5586": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13695,
          13712
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 53,
        "value": "0x9D"
      },
      "5588": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13695,
          13712
        ],
        "op": "DUP1",
        "path": "1"
      },
      "5589": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13695,
          13712
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "5590": {
        "op": "PUSH1",
        "value": "0xFF"
      },
      "5592": {
        "op": "NOT"
      },
      "5593": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13674,
          13712
        ],
        "op": "DUP2",
        "path": "1"
      },
      "5594": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13674,
          13712
        ],
        "op": "AND",
        "path": "1"
      },
      "5595": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13695,
          13712
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0xFF"
      },
      "5597": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13695,
          13712
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5598": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13695,
          13712
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "5599": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13695,
          13712
        ],
        "op": "AND",
        "path": "1"
      },
      "5600": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13694,
          13712
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "5601": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13674,
          13712
        ],
        "op": "OR",
        "path": "1"
      },
      "5602": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13674,
          13712
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5603": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "offset": [
          13674,
          13712
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "5604": {
        "fn": "MainnetEscrow.togglePriceFeed",
        "jump": "o",
        "offset": [
          13618,
          13719
        ],
        "op": "JUMP",
        "path": "1"
      },
      "5605": {
        "fn": "MainnetEscrow.togglePause",
        "offset": [
          12904,
          13011
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "5606": {
        "offset": [
          1334,
          1347
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x15ED"
      },
      "5609": {
        "offset": [
          1334,
          1345
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x1F6E"
      },
      "5612": {
        "jump": "i",
        "offset": [
          1334,
          1347
        ],
        "op": "JUMP",
        "path": "26"
      },
      "5613": {
        "fn": "MainnetEscrow.togglePause",
        "offset": [
          1334,
          1347
        ],
        "op": "JUMPDEST",
        "path": "26"
      },
      "5614": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1928,
          1935
        ],
        "op": "PUSH1",
        "path": "28",
        "value": "0x65"
      },
      "5616": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1928,
          1935
        ],
        "op": "SLOAD",
        "path": "28"
      },
      "5617": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1928,
          1935
        ],
        "op": "PUSH1",
        "path": "28",
        "value": "0xFF"
      },
      "5619": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1928,
          1935
        ],
        "op": "AND",
        "path": "28"
      },
      "5620": {
        "fn": "MainnetEscrow.togglePause",
        "offset": [
          12956,
          13004
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x15FF"
      },
      "5623": {
        "fn": "MainnetEscrow.togglePause",
        "offset": [
          12956,
          13004
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "5624": {
        "fn": "MainnetEscrow.togglePause",
        "offset": [
          12971,
          12979
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 54,
        "value": "0xF35"
      },
      "5627": {
        "fn": "MainnetEscrow.togglePause",
        "offset": [
          12971,
          12977
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2257"
      },
      "5630": {
        "fn": "MainnetEscrow.togglePause",
        "jump": "i",
        "offset": [
          12971,
          12979
        ],
        "op": "JUMP",
        "path": "1"
      },
      "5631": {
        "fn": "MainnetEscrow.togglePause",
        "offset": [
          12956,
          13004
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "5632": {
        "fn": "MainnetEscrow.togglePause",
        "offset": [
          12994,
          13004
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 55,
        "value": "0xF35"
      },
      "5635": {
        "fn": "MainnetEscrow.togglePause",
        "offset": [
          12994,
          13002
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x22B1"
      },
      "5638": {
        "fn": "MainnetEscrow.togglePause",
        "jump": "i",
        "offset": [
          12994,
          13004
        ],
        "op": "JUMP",
        "path": "1"
      },
      "5639": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16685,
          18678
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "5640": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16936,
          16953
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x9D"
      },
      "5642": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16936,
          16953
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "5643": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16879,
          16886
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "5645": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16879,
          16886
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5646": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16879,
          16886
        ],
        "op": "DUP2",
        "path": "1"
      },
      "5647": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16879,
          16886
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5648": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16936,
          16953
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0xFF"
      },
      "5650": {
        "branch": 118,
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16936,
          16953
        ],
        "op": "AND",
        "path": "1"
      },
      "5651": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16931,
          18640
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1653"
      },
      "5654": {
        "branch": 118,
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16931,
          18640
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "5655": {
        "offset": [
          2409,
          2414
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2710"
      },
      "5658": {
        "offset": [
          2346,
          2349
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1F4"
      },
      "5661": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16987,
          17024
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 56,
        "value": "0x162F"
      },
      "5664": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17009,
          17024
        ],
        "op": "DUP8",
        "path": "1"
      },
      "5665": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5667": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5669": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "5671": {
        "op": "SHL"
      },
      "5672": {
        "op": "SUB"
      },
      "5673": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16987,
          17024
        ],
        "op": "DUP8",
        "path": "1"
      },
      "5674": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16987,
          17024
        ],
        "op": "AND",
        "path": "1"
      },
      "5675": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16987,
          17024
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D83"
      },
      "5678": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          16987,
          17024
        ],
        "op": "JUMP",
        "path": "1"
      },
      "5679": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16987,
          17024
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "5680": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5682": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5684": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "5686": {
        "op": "SHL"
      },
      "5687": {
        "op": "SUB"
      },
      "5688": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16987,
          17052
        ],
        "op": "AND",
        "path": "1"
      },
      "5689": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16987,
          17052
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1642"
      },
      "5692": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16987,
          17052
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "5693": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16987,
          17052
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5694": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16987,
          17052
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D23"
      },
      "5697": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          16987,
          17052
        ],
        "op": "JUMP",
        "path": "1"
      },
      "5698": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16987,
          17052
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "5699": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16986,
          17083
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x164C"
      },
      "5702": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16986,
          17083
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "5703": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16986,
          17083
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5704": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16986,
          17083
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D58"
      },
      "5707": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          16986,
          17083
        ],
        "op": "JUMP",
        "path": "1"
      },
      "5708": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16986,
          17083
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "5709": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16968,
          17083
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5710": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16968,
          17083
        ],
        "op": "POP",
        "path": "1"
      },
      "5711": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16931,
          18640
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1A4E"
      },
      "5714": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16931,
          18640
        ],
        "op": "JUMP",
        "path": "1"
      },
      "5715": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16931,
          18640
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "5716": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17121,
          17150
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "5718": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5720": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5722": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "5724": {
        "op": "SHL"
      },
      "5725": {
        "op": "SUB"
      },
      "5726": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17168,
          17195
        ],
        "op": "DUP10",
        "path": "1"
      },
      "5727": {
        "branch": 119,
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17168,
          17195
        ],
        "op": "AND",
        "path": "1"
      },
      "5728": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17164,
          17592
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1717"
      },
      "5731": {
        "branch": 119,
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17164,
          17592
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "5732": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17303
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 57,
        "value": "0x9B"
      },
      "5734": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17303
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "5735": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "5737": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "5738": {
        "op": "PUSH4",
        "value": "0xA4B943FB"
      },
      "5743": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "5745": {
        "op": "SHL"
      },
      "5746": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "DUP2",
        "path": "1"
      },
      "5747": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "5748": {
        "offset": [
          2160,
          2202
        ],
        "op": "PUSH20",
        "path": "1",
        "value": "0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
      },
      "5769": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "5771": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "DUP3",
        "path": "1"
      },
      "5772": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "ADD",
        "path": "1"
      },
      "5773": {
        "op": "DUP2"
      },
      "5774": {
        "op": "SWAP1"
      },
      "5775": {
        "op": "MSTORE"
      },
      "5776": {
        "offset": [
          2160,
          2202
        ],
        "op": "SWAP11",
        "path": "1"
      },
      "5777": {
        "op": "POP"
      },
      "5778": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17352,
          17360
        ],
        "op": "PUSH8",
        "path": "1",
        "value": "0xDE0B6B3A7640000"
      },
      "5787": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17352,
          17360
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "5788": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5790": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5792": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "5794": {
        "op": "SHL"
      },
      "5795": {
        "op": "SUB"
      },
      "5796": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17347
        ],
        "op": "DUP12",
        "path": "1"
      },
      "5797": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17347
        ],
        "op": "AND",
        "path": "1"
      },
      "5798": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17347
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "5799": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5801": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5803": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "5805": {
        "op": "SHL"
      },
      "5806": {
        "op": "SUB"
      },
      "5807": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17303
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5808": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17303
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "5809": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17303
        ],
        "op": "AND",
        "path": "1"
      },
      "5810": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17303
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5811": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17322
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0xA4B943FB"
      },
      "5816": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17322
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5817": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "5819": {
        "op": "ADD"
      },
      "5820": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "5822": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "5824": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "5825": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "DUP1",
        "path": "1"
      },
      "5826": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "DUP4",
        "path": "1"
      },
      "5827": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "SUB",
        "path": "1"
      },
      "5828": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "DUP2",
        "path": "1"
      },
      "5829": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "DUP7",
        "path": "1"
      },
      "5830": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "GAS",
        "path": "1"
      },
      "5831": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "STATICCALL",
        "path": "1"
      },
      "5832": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "5833": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "DUP1",
        "path": "1"
      },
      "5834": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "5835": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x16D8"
      },
      "5838": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "5839": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "5840": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "5842": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "DUP1",
        "path": "1"
      },
      "5843": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "RETURNDATACOPY",
        "path": "1"
      },
      "5844": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "5845": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "5847": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "REVERT",
        "path": "1"
      },
      "5848": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "5849": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "POP",
        "path": "1"
      },
      "5850": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "POP",
        "path": "1"
      },
      "5851": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "POP",
        "path": "1"
      },
      "5852": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "POP",
        "path": "1"
      },
      "5853": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "5855": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "5856": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "5857": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "5859": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "NOT",
        "path": "1"
      },
      "5860": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "5862": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "DUP3",
        "path": "1"
      },
      "5863": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "ADD",
        "path": "1"
      },
      "5864": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "AND",
        "path": "1"
      },
      "5865": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "DUP3",
        "path": "1"
      },
      "5866": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "ADD",
        "path": "1"
      },
      "5867": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "DUP1",
        "path": "1"
      },
      "5868": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "5870": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "5871": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "POP",
        "path": "1"
      },
      "5872": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "DUP2",
        "path": "1"
      },
      "5873": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "ADD",
        "path": "1"
      },
      "5874": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5875": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x16FC"
      },
      "5878": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "5879": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5880": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D0A"
      },
      "5883": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          17286,
          17337
        ],
        "op": "JUMP",
        "path": "1"
      },
      "5884": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17337
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "5885": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17347
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1706"
      },
      "5888": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17347
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "5889": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17347
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5890": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17347
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D23"
      },
      "5893": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          17286,
          17347
        ],
        "op": "JUMP",
        "path": "1"
      },
      "5894": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17286,
          17347
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "5895": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17285,
          17361
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1710"
      },
      "5898": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17285,
          17361
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "5899": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17285,
          17361
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5900": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17285,
          17361
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D58"
      },
      "5903": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          17285,
          17361
        ],
        "op": "JUMP",
        "path": "1"
      },
      "5904": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17285,
          17361
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "5905": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17261,
          17361
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "5906": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17261,
          17361
        ],
        "op": "POP",
        "path": "1"
      },
      "5907": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17164,
          17592
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1812"
      },
      "5910": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17164,
          17592
        ],
        "op": "JUMP",
        "path": "1"
      },
      "5911": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17164,
          17592
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "5912": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17551,
          17564
        ],
        "op": "DUP9",
        "path": "1",
        "statement": 58
      },
      "5913": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5915": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5917": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "5919": {
        "op": "SHL"
      },
      "5920": {
        "op": "SUB"
      },
      "5921": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17574
        ],
        "op": "AND",
        "path": "1"
      },
      "5922": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17574
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x313CE567"
      },
      "5927": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "5929": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "5930": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "DUP2",
        "path": "1"
      },
      "5931": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0xFFFFFFFF"
      },
      "5936": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "AND",
        "path": "1"
      },
      "5937": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0xE0"
      },
      "5939": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "SHL",
        "path": "1"
      },
      "5940": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "DUP2",
        "path": "1"
      },
      "5941": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "5942": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "5944": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "ADD",
        "path": "1"
      },
      "5945": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "5947": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "5949": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "5950": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "DUP1",
        "path": "1"
      },
      "5951": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "DUP4",
        "path": "1"
      },
      "5952": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "SUB",
        "path": "1"
      },
      "5953": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "DUP2",
        "path": "1"
      },
      "5954": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "DUP7",
        "path": "1"
      },
      "5955": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "GAS",
        "path": "1"
      },
      "5956": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "STATICCALL",
        "path": "1"
      },
      "5957": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "5958": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "DUP1",
        "path": "1"
      },
      "5959": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "5960": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1755"
      },
      "5963": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "5964": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "5965": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "5967": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "DUP1",
        "path": "1"
      },
      "5968": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "RETURNDATACOPY",
        "path": "1"
      },
      "5969": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "5970": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "5972": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "REVERT",
        "path": "1"
      },
      "5973": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "5974": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "POP",
        "path": "1"
      },
      "5975": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "POP",
        "path": "1"
      },
      "5976": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "POP",
        "path": "1"
      },
      "5977": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "POP",
        "path": "1"
      },
      "5978": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "5980": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "5981": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "5982": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "5984": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "NOT",
        "path": "1"
      },
      "5985": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "5987": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "DUP3",
        "path": "1"
      },
      "5988": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "ADD",
        "path": "1"
      },
      "5989": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "AND",
        "path": "1"
      },
      "5990": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "DUP3",
        "path": "1"
      },
      "5991": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "ADD",
        "path": "1"
      },
      "5992": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "DUP1",
        "path": "1"
      },
      "5993": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "5995": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "5996": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "POP",
        "path": "1"
      },
      "5997": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "DUP2",
        "path": "1"
      },
      "5998": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "ADD",
        "path": "1"
      },
      "5999": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6000": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1779"
      },
      "6003": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "6004": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6005": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BF2"
      },
      "6008": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          17536,
          17576
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6009": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17536,
          17576
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6010": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17530,
          17576
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1784"
      },
      "6013": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17530,
          17576
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6014": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17530,
          17532
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0xA"
      },
      "6016": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17530,
          17576
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2CFB"
      },
      "6019": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          17530,
          17576
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6020": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17530,
          17576
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6021": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17481
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x9B"
      },
      "6023": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17481
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "6024": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "6026": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "6027": {
        "op": "PUSH4",
        "value": "0xA4B943FB"
      },
      "6032": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "6034": {
        "op": "SHL"
      },
      "6035": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6036": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "6037": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6039": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6041": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "6043": {
        "op": "SHL"
      },
      "6044": {
        "op": "SUB"
      },
      "6045": {
        "op": "DUP13"
      },
      "6046": {
        "op": "DUP2"
      },
      "6047": {
        "op": "AND"
      },
      "6048": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "6050": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "DUP4",
        "path": "1"
      },
      "6051": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "ADD",
        "path": "1"
      },
      "6052": {
        "op": "MSTORE"
      },
      "6053": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6055": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6057": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "6059": {
        "op": "SHL"
      },
      "6060": {
        "op": "SUB"
      },
      "6061": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17525
        ],
        "op": "DUP13",
        "path": "1"
      },
      "6062": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17525
        ],
        "op": "AND",
        "path": "1"
      },
      "6063": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17525
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "6064": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17481
        ],
        "op": "AND",
        "path": "1"
      },
      "6065": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17481
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6066": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17500
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0xA4B943FB"
      },
      "6071": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17500
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6072": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "6074": {
        "op": "ADD"
      },
      "6075": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "6077": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "6079": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "6080": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "DUP1",
        "path": "1"
      },
      "6081": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "DUP4",
        "path": "1"
      },
      "6082": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "SUB",
        "path": "1"
      },
      "6083": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6084": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "DUP7",
        "path": "1"
      },
      "6085": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "GAS",
        "path": "1"
      },
      "6086": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "STATICCALL",
        "path": "1"
      },
      "6087": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "6088": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "DUP1",
        "path": "1"
      },
      "6089": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "6090": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x17D7"
      },
      "6093": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "6094": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "6095": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "6097": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "DUP1",
        "path": "1"
      },
      "6098": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "RETURNDATACOPY",
        "path": "1"
      },
      "6099": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "6100": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "6102": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "REVERT",
        "path": "1"
      },
      "6103": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6104": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "POP",
        "path": "1"
      },
      "6105": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "POP",
        "path": "1"
      },
      "6106": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "POP",
        "path": "1"
      },
      "6107": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "POP",
        "path": "1"
      },
      "6108": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "6110": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "6111": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "6112": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "6114": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "NOT",
        "path": "1"
      },
      "6115": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "6117": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "DUP3",
        "path": "1"
      },
      "6118": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "ADD",
        "path": "1"
      },
      "6119": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "AND",
        "path": "1"
      },
      "6120": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "DUP3",
        "path": "1"
      },
      "6121": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "ADD",
        "path": "1"
      },
      "6122": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "DUP1",
        "path": "1"
      },
      "6123": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "6125": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "6126": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "POP",
        "path": "1"
      },
      "6127": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6128": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "ADD",
        "path": "1"
      },
      "6129": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6130": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x17FB"
      },
      "6133": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "6134": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6135": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D0A"
      },
      "6138": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          17464,
          17515
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6139": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17515
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6140": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17525
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1805"
      },
      "6143": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17525
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "6144": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17525
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6145": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17525
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D23"
      },
      "6148": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          17464,
          17525
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6149": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17464,
          17525
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6150": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17463,
          17577
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x180F"
      },
      "6153": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17463,
          17577
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "6154": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17463,
          17577
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6155": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17463,
          17577
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D58"
      },
      "6158": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          17463,
          17577
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6159": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17463,
          17577
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6160": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17439,
          17577
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6161": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17439,
          17577
        ],
        "op": "POP",
        "path": "1"
      },
      "6162": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17164,
          17592
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6163": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6165": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6167": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "6169": {
        "op": "SHL"
      },
      "6170": {
        "op": "SUB"
      },
      "6171": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17791,
          17839
        ],
        "op": "DUP1",
        "path": "1"
      },
      "6172": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17791,
          17839
        ],
        "op": "DUP9",
        "path": "1"
      },
      "6173": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17791,
          17839
        ],
        "op": "AND",
        "path": "1"
      },
      "6174": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17605,
          17638
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "6176": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17791,
          17839
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6177": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17791,
          17839
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6178": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17791,
          17839
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "6179": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17791,
          17819
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x9C"
      },
      "6181": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17791,
          17839
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "6183": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17791,
          17839
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6184": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17791,
          17839
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6185": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17791,
          17839
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "6186": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17791,
          17839
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "6188": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17791,
          17839
        ],
        "op": "DUP1",
        "path": "1"
      },
      "6189": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17791,
          17839
        ],
        "op": "DUP4",
        "path": "1"
      },
      "6190": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17791,
          17839
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "6191": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17791,
          17839
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "6192": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6193": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "6194": {
        "op": "PUSH4",
        "value": "0x313CE567"
      },
      "6199": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "6201": {
        "op": "SHL"
      },
      "6202": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6203": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "6204": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "6205": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "6206": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17605,
          17638
        ],
        "op": "SWAP4",
        "path": "1"
      },
      "6207": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17605,
          17638
        ],
        "op": "SWAP5",
        "path": "1"
      },
      "6208": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17791,
          17839
        ],
        "op": "AND",
        "path": "1"
      },
      "6209": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17791,
          17839
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "6210": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17849
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x313CE567"
      },
      "6215": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17849
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "6216": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "6218": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "DUP1",
        "path": "1"
      },
      "6219": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "DUP5",
        "path": "1"
      },
      "6220": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "ADD",
        "path": "1"
      },
      "6221": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "SWAP4",
        "path": "1"
      },
      "6222": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17791,
          17839
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "6223": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17791,
          17839
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "6224": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "6225": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "DUP3",
        "path": "1"
      },
      "6226": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6227": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "SUB",
        "path": "1"
      },
      "6228": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "ADD",
        "path": "1"
      },
      "6229": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6230": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17791,
          17839
        ],
        "op": "DUP7",
        "path": "1"
      },
      "6231": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "GAS",
        "path": "1"
      },
      "6232": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "STATICCALL",
        "path": "1"
      },
      "6233": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "6234": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "DUP1",
        "path": "1"
      },
      "6235": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "6236": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1869"
      },
      "6239": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "6240": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "6241": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "6243": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "DUP1",
        "path": "1"
      },
      "6244": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "RETURNDATACOPY",
        "path": "1"
      },
      "6245": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "6246": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "6248": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "REVERT",
        "path": "1"
      },
      "6249": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6250": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "POP",
        "path": "1"
      },
      "6251": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "POP",
        "path": "1"
      },
      "6252": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "POP",
        "path": "1"
      },
      "6253": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "POP",
        "path": "1"
      },
      "6254": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "6256": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "6257": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "6258": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "6260": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "NOT",
        "path": "1"
      },
      "6261": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "6263": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "DUP3",
        "path": "1"
      },
      "6264": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "ADD",
        "path": "1"
      },
      "6265": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "AND",
        "path": "1"
      },
      "6266": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "DUP3",
        "path": "1"
      },
      "6267": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "ADD",
        "path": "1"
      },
      "6268": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "DUP1",
        "path": "1"
      },
      "6269": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "6271": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "6272": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "POP",
        "path": "1"
      },
      "6273": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6274": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "ADD",
        "path": "1"
      },
      "6275": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6276": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x188D"
      },
      "6279": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "6280": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6281": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BF2"
      },
      "6284": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          17776,
          17851
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6285": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17776,
          17851
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6286": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17770,
          17851
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1898"
      },
      "6289": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17770,
          17851
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6290": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17770,
          17772
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0xA"
      },
      "6292": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17770,
          17851
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2CFB"
      },
      "6295": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          17770,
          17851
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6296": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17770,
          17851
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6297": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17659
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x9B"
      },
      "6299": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17659
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "6300": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6302": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6304": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "6306": {
        "op": "SHL"
      },
      "6307": {
        "op": "SUB"
      },
      "6308": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17679,
          17727
        ],
        "op": "DUP11",
        "path": "1"
      },
      "6309": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17679,
          17727
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6310": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17679,
          17727
        ],
        "op": "AND",
        "path": "1"
      },
      "6311": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17659
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "6313": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17679,
          17727
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6314": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17679,
          17727
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6315": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17679,
          17727
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "6316": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17679,
          17707
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x9C"
      },
      "6318": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17679,
          17727
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "6320": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17679,
          17727
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "6321": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17679,
          17727
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "6323": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17679,
          17727
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6324": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17679,
          17727
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6325": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17679,
          17727
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6326": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17679,
          17727
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "6327": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17679,
          17727
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "6328": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6329": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "6330": {
        "op": "PUSH4",
        "value": "0xA4B943FB"
      },
      "6335": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "6337": {
        "op": "SHL"
      },
      "6338": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6339": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "6340": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17679,
          17727
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6341": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17679,
          17727
        ],
        "op": "DUP3",
        "path": "1"
      },
      "6342": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17679,
          17727
        ],
        "op": "AND",
        "path": "1"
      },
      "6343": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "6345": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "DUP3",
        "path": "1"
      },
      "6346": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "ADD",
        "path": "1"
      },
      "6347": {
        "op": "MSTORE"
      },
      "6348": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6350": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6352": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "6354": {
        "op": "SHL"
      },
      "6355": {
        "op": "SUB"
      },
      "6356": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17765
        ],
        "op": "DUP12",
        "path": "1"
      },
      "6357": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17765
        ],
        "op": "AND",
        "path": "1"
      },
      "6358": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17765
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "6359": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6361": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6363": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "6365": {
        "op": "SHL"
      },
      "6366": {
        "op": "SUB"
      },
      "6367": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17747
        ],
        "op": "DUP12",
        "path": "1"
      },
      "6368": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17747
        ],
        "op": "AND",
        "path": "1"
      },
      "6369": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17747
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "6370": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17659
        ],
        "op": "AND",
        "path": "1"
      },
      "6371": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17659
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6372": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17678
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0xA4B943FB"
      },
      "6377": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17678
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6378": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "6380": {
        "op": "ADD"
      },
      "6381": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "6383": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "6385": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "6386": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "DUP1",
        "path": "1"
      },
      "6387": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "DUP4",
        "path": "1"
      },
      "6388": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "SUB",
        "path": "1"
      },
      "6389": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6390": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "DUP7",
        "path": "1"
      },
      "6391": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "GAS",
        "path": "1"
      },
      "6392": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "STATICCALL",
        "path": "1"
      },
      "6393": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "6394": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "DUP1",
        "path": "1"
      },
      "6395": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "6396": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1909"
      },
      "6399": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "6400": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "6401": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "6403": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "DUP1",
        "path": "1"
      },
      "6404": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "RETURNDATACOPY",
        "path": "1"
      },
      "6405": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "6406": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "6408": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "REVERT",
        "path": "1"
      },
      "6409": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6410": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "POP",
        "path": "1"
      },
      "6411": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "POP",
        "path": "1"
      },
      "6412": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "POP",
        "path": "1"
      },
      "6413": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "POP",
        "path": "1"
      },
      "6414": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "6416": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "6417": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "6418": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "6420": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "NOT",
        "path": "1"
      },
      "6421": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "6423": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "DUP3",
        "path": "1"
      },
      "6424": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "ADD",
        "path": "1"
      },
      "6425": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "AND",
        "path": "1"
      },
      "6426": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "DUP3",
        "path": "1"
      },
      "6427": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "ADD",
        "path": "1"
      },
      "6428": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "DUP1",
        "path": "1"
      },
      "6429": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "6431": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "6432": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "POP",
        "path": "1"
      },
      "6433": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6434": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "ADD",
        "path": "1"
      },
      "6435": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6436": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x192D"
      },
      "6439": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "6440": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6441": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D0A"
      },
      "6444": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          17642,
          17728
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6445": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17728
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6446": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17747
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1937"
      },
      "6449": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17747
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "6450": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17747
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6451": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17747
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D23"
      },
      "6454": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          17642,
          17747
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6455": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17747
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6456": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17765
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1941"
      },
      "6459": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17765
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "6460": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17765
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6461": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17765
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D23"
      },
      "6464": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          17642,
          17765
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6465": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17642,
          17765
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6466": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17641,
          17852
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x194B"
      },
      "6469": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17641,
          17852
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "6470": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17641,
          17852
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6471": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17641,
          17852
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D58"
      },
      "6474": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          17641,
          17852
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6475": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17641,
          17852
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6476": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17605,
          17852
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6477": {
        "op": "POP"
      },
      "6478": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17866,
          17879
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "6480": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17920,
          17941
        ],
        "op": "DUP3",
        "path": "1"
      },
      "6481": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17883,
          17916
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x195C"
      },
      "6484": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17605,
          17852
        ],
        "op": "DUP4",
        "path": "1"
      },
      "6485": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17911,
          17916
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2710"
      },
      "6488": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17883,
          17916
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D23"
      },
      "6491": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          17883,
          17916
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6492": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17883,
          17916
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6493": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17882,
          17941
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1966"
      },
      "6496": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17882,
          17941
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "6497": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17882,
          17941
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6498": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17882,
          17941
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D58"
      },
      "6501": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          17882,
          17941
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6502": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17882,
          17941
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6503": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17866,
          17941
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6504": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17866,
          17941
        ],
        "op": "POP",
        "path": "1"
      },
      "6505": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18035,
          18040
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2710"
      },
      "6508": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18026,
          18031
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6509": {
        "branch": 120,
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18026,
          18040
        ],
        "op": "GT",
        "path": "1"
      },
      "6510": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18022,
          18630
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x197A"
      },
      "6513": {
        "branch": 120,
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18022,
          18630
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "6514": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18077,
          18078
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 59,
        "value": "0x0"
      },
      "6516": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18059,
          18078
        ],
        "op": "SWAP4",
        "path": "1"
      },
      "6517": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18059,
          18078
        ],
        "op": "POP",
        "path": "1"
      },
      "6518": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18022,
          18630
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1A4A"
      },
      "6521": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18022,
          18630
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6522": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18022,
          18630
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6523": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18124,
          18129
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2710"
      },
      "6526": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18116,
          18121
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6527": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18116,
          18129
        ],
        "op": "GT",
        "path": "1"
      },
      "6528": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18115,
          18150
        ],
        "op": "DUP1",
        "path": "1"
      },
      "6529": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18115,
          18150
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "6530": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18115,
          18150
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x198D"
      },
      "6533": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18115,
          18150
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "6534": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18115,
          18150
        ],
        "op": "POP",
        "path": "1"
      },
      "6535": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18144,
          18149
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2AF8"
      },
      "6538": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18135,
          18140
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6539": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18135,
          18149
        ],
        "op": "GT",
        "path": "1"
      },
      "6540": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18135,
          18149
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "6541": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18115,
          18150
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6542": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18111,
          18630
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "6543": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18111,
          18630
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x19CE"
      },
      "6546": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18111,
          18630
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "6547": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18258,
          18263
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 60,
        "value": "0x2710"
      },
      "6550": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18211,
          18248
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x19A8"
      },
      "6553": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18233,
          18248
        ],
        "op": "DUP10",
        "path": "1"
      },
      "6554": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6556": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6558": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "6560": {
        "op": "SHL"
      },
      "6561": {
        "op": "SUB"
      },
      "6562": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18211,
          18248
        ],
        "op": "DUP10",
        "path": "1"
      },
      "6563": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18211,
          18248
        ],
        "op": "AND",
        "path": "1"
      },
      "6564": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18211,
          18248
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D83"
      },
      "6567": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          18211,
          18248
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6568": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18211,
          18248
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6569": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18211,
          18254
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x19B4"
      },
      "6572": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18211,
          18254
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6573": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18251,
          18254
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1F4"
      },
      "6576": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18211,
          18254
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D83"
      },
      "6579": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          18211,
          18254
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6580": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18211,
          18254
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6581": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18210,
          18263
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x19BE"
      },
      "6584": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18210,
          18263
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "6585": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18210,
          18263
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6586": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18210,
          18263
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2DB2"
      },
      "6589": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          18210,
          18263
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6590": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18210,
          18263
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6591": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6593": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6595": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "6597": {
        "op": "SHL"
      },
      "6598": {
        "op": "SUB"
      },
      "6599": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18192,
          18263
        ],
        "op": "AND",
        "path": "1"
      },
      "6600": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18192,
          18263
        ],
        "op": "SWAP4",
        "path": "1"
      },
      "6601": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18192,
          18263
        ],
        "op": "POP",
        "path": "1"
      },
      "6602": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18111,
          18630
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1A4A"
      },
      "6605": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18111,
          18630
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6606": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18111,
          18630
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6607": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18309,
          18314
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2AF8"
      },
      "6610": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18301,
          18306
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6611": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18301,
          18314
        ],
        "op": "GT",
        "path": "1"
      },
      "6612": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18300,
          18335
        ],
        "op": "DUP1",
        "path": "1"
      },
      "6613": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18300,
          18335
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "6614": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18300,
          18335
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x19E1"
      },
      "6617": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18300,
          18335
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "6618": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18300,
          18335
        ],
        "op": "POP",
        "path": "1"
      },
      "6619": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18329,
          18334
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x30D4"
      },
      "6622": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18320,
          18325
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6623": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18320,
          18334
        ],
        "op": "GT",
        "path": "1"
      },
      "6624": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18320,
          18334
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "6625": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18300,
          18335
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6626": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18296,
          18630
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "6627": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18296,
          18630
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1A08"
      },
      "6630": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18296,
          18630
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "6631": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18445,
          18450
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 61,
        "value": "0x2710"
      },
      "6634": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18397,
          18434
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x19FC"
      },
      "6637": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18419,
          18434
        ],
        "op": "DUP10",
        "path": "1"
      },
      "6638": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6640": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6642": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "6644": {
        "op": "SHL"
      },
      "6645": {
        "op": "SUB"
      },
      "6646": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18397,
          18434
        ],
        "op": "DUP10",
        "path": "1"
      },
      "6647": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18397,
          18434
        ],
        "op": "AND",
        "path": "1"
      },
      "6648": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18397,
          18434
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D83"
      },
      "6651": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          18397,
          18434
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6652": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18397,
          18434
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6653": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18397,
          18441
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x19B4"
      },
      "6656": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18397,
          18441
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6657": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18437,
          18441
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3E8"
      },
      "6660": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18397,
          18441
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D83"
      },
      "6663": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          18397,
          18441
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6664": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18296,
          18630
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6665": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18495,
          18500
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x30D4"
      },
      "6668": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18487,
          18492
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6669": {
        "branch": 121,
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18487,
          18500
        ],
        "op": "GT",
        "path": "1"
      },
      "6670": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18483,
          18630
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "6671": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18483,
          18630
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1A4A"
      },
      "6674": {
        "branch": 121,
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18483,
          18630
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "6675": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18610,
          18615
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 62,
        "value": "0x2710"
      },
      "6678": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18562,
          18599
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1A28"
      },
      "6681": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18584,
          18599
        ],
        "op": "DUP10",
        "path": "1"
      },
      "6682": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6684": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6686": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "6688": {
        "op": "SHL"
      },
      "6689": {
        "op": "SUB"
      },
      "6690": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18562,
          18599
        ],
        "op": "DUP10",
        "path": "1"
      },
      "6691": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18562,
          18599
        ],
        "op": "AND",
        "path": "1"
      },
      "6692": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18562,
          18599
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D83"
      },
      "6695": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          18562,
          18599
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6696": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18562,
          18599
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6697": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18562,
          18606
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1A34"
      },
      "6700": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18562,
          18606
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6701": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18602,
          18606
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x7D0"
      },
      "6704": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18562,
          18606
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2D83"
      },
      "6707": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          18562,
          18606
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6708": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18562,
          18606
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6709": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18561,
          18615
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1A3E"
      },
      "6712": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18561,
          18615
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "6713": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18561,
          18615
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6714": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18561,
          18615
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2DB2"
      },
      "6717": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "i",
        "offset": [
          18561,
          18615
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6718": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18561,
          18615
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6719": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6721": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6723": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "6725": {
        "op": "SHL"
      },
      "6726": {
        "op": "SUB"
      },
      "6727": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18543,
          18615
        ],
        "op": "AND",
        "path": "1"
      },
      "6728": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18543,
          18615
        ],
        "op": "SWAP4",
        "path": "1"
      },
      "6729": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18543,
          18615
        ],
        "op": "POP",
        "path": "1"
      },
      "6730": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18483,
          18630
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6731": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17107,
          18640
        ],
        "op": "POP",
        "path": "1"
      },
      "6732": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17107,
          18640
        ],
        "op": "POP",
        "path": "1"
      },
      "6733": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          17107,
          18640
        ],
        "op": "POP",
        "path": "1"
      },
      "6734": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16931,
          18640
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6735": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          18656,
          18671
        ],
        "op": "SWAP8",
        "path": "1",
        "statement": 63
      },
      "6736": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "offset": [
          16685,
          18678
        ],
        "op": "SWAP7",
        "path": "1"
      },
      "6737": {
        "op": "POP"
      },
      "6738": {
        "op": "POP"
      },
      "6739": {
        "op": "POP"
      },
      "6740": {
        "op": "POP"
      },
      "6741": {
        "op": "POP"
      },
      "6742": {
        "op": "POP"
      },
      "6743": {
        "op": "POP"
      },
      "6744": {
        "fn": "MainnetEscrow.fairRaffleFeeERC20",
        "jump": "o",
        "offset": [
          16685,
          18678
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6745": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2321,
          2519
        ],
        "op": "JUMPDEST",
        "path": "26"
      },
      "6746": {
        "offset": [
          1334,
          1347
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x1A61"
      },
      "6749": {
        "offset": [
          1334,
          1345
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x1F6E"
      },
      "6752": {
        "jump": "i",
        "offset": [
          1334,
          1347
        ],
        "op": "JUMP",
        "path": "26"
      },
      "6753": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          1334,
          1347
        ],
        "op": "JUMPDEST",
        "path": "26"
      },
      "6754": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6756": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6758": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "6760": {
        "op": "SHL"
      },
      "6761": {
        "op": "SUB"
      },
      "6762": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2409,
          2431
        ],
        "op": "DUP2",
        "path": "26",
        "statement": 64
      },
      "6763": {
        "branch": 133,
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2409,
          2431
        ],
        "op": "AND",
        "path": "26"
      },
      "6764": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2401,
          2474
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x1AC6"
      },
      "6767": {
        "branch": 133,
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2401,
          2474
        ],
        "op": "JUMPI",
        "path": "26"
      },
      "6768": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2401,
          2474
        ],
        "op": "PUSH1",
        "path": "26",
        "value": "0x40"
      },
      "6770": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2401,
          2474
        ],
        "op": "MLOAD",
        "path": "26"
      },
      "6771": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "6775": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "6777": {
        "op": "SHL"
      },
      "6778": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2401,
          2474
        ],
        "op": "DUP2",
        "path": "26"
      },
      "6779": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2401,
          2474
        ],
        "op": "MSTORE",
        "path": "26"
      },
      "6780": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "6782": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2401,
          2474
        ],
        "op": "PUSH1",
        "path": "26",
        "value": "0x4"
      },
      "6784": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2401,
          2474
        ],
        "op": "DUP3",
        "path": "26"
      },
      "6785": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2401,
          2474
        ],
        "op": "ADD",
        "path": "26"
      },
      "6786": {
        "op": "MSTORE"
      },
      "6787": {
        "op": "PUSH1",
        "value": "0x26"
      },
      "6789": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "6791": {
        "op": "DUP3"
      },
      "6792": {
        "op": "ADD"
      },
      "6793": {
        "op": "MSTORE"
      },
      "6794": {
        "op": "PUSH32",
        "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
      },
      "6827": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "6829": {
        "op": "DUP3"
      },
      "6830": {
        "op": "ADD"
      },
      "6831": {
        "op": "MSTORE"
      },
      "6832": {
        "op": "PUSH6",
        "value": "0x646472657373"
      },
      "6839": {
        "op": "PUSH1",
        "value": "0xD0"
      },
      "6841": {
        "op": "SHL"
      },
      "6842": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "6844": {
        "op": "DUP3"
      },
      "6845": {
        "op": "ADD"
      },
      "6846": {
        "op": "MSTORE"
      },
      "6847": {
        "op": "PUSH1",
        "value": "0x84"
      },
      "6849": {
        "op": "ADD"
      },
      "6850": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2401,
          2474
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x631"
      },
      "6853": {
        "op": "JUMP"
      },
      "6854": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2401,
          2474
        ],
        "op": "JUMPDEST",
        "path": "26"
      },
      "6855": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2484,
          2512
        ],
        "op": "PUSH2",
        "path": "26",
        "statement": 65,
        "value": "0x1ACF"
      },
      "6858": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2503,
          2511
        ],
        "op": "DUP2",
        "path": "26"
      },
      "6859": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2484,
          2502
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x21CD"
      },
      "6862": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "jump": "i",
        "offset": [
          2484,
          2512
        ],
        "op": "JUMP",
        "path": "26"
      },
      "6863": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2484,
          2512
        ],
        "op": "JUMPDEST",
        "path": "26"
      },
      "6864": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "offset": [
          2321,
          2519
        ],
        "op": "POP",
        "path": "26"
      },
      "6865": {
        "fn": "OwnableUpgradeable.transferOwnership",
        "jump": "o",
        "offset": [
          2321,
          2519
        ],
        "op": "JUMP",
        "path": "26"
      },
      "6866": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10525,
          11975
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6867": {
        "offset": [
          4747,
          4754
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x9A"
      },
      "6869": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          4747,
          4754
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "6870": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6872": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6874": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "6876": {
        "op": "SHL"
      },
      "6877": {
        "op": "SUB"
      },
      "6878": {
        "offset": [
          4747,
          4754
        ],
        "op": "AND",
        "path": "1"
      },
      "6879": {
        "offset": [
          4733,
          4743
        ],
        "op": "CALLER",
        "path": "1"
      },
      "6880": {
        "offset": [
          4733,
          4754
        ],
        "op": "EQ",
        "path": "1"
      },
      "6881": {
        "offset": [
          4725,
          4770
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1B1A"
      },
      "6884": {
        "offset": [
          4725,
          4770
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "6885": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          4725,
          4770
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "6887": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          4725,
          4770
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "6888": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "6892": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "6894": {
        "op": "SHL"
      },
      "6895": {
        "offset": [
          4725,
          4770
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6896": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          4725,
          4770
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "6897": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "6899": {
        "offset": [
          4725,
          4770
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "6901": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          4725,
          4770
        ],
        "op": "DUP3",
        "path": "1"
      },
      "6902": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          4725,
          4770
        ],
        "op": "ADD",
        "path": "1"
      },
      "6903": {
        "op": "MSTORE"
      },
      "6904": {
        "op": "PUSH1",
        "value": "0xB"
      },
      "6906": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "6908": {
        "op": "DUP3"
      },
      "6909": {
        "op": "ADD"
      },
      "6910": {
        "op": "MSTORE"
      },
      "6911": {
        "op": "PUSH11",
        "value": "0x27B7363CA932B630BCB2B9"
      },
      "6923": {
        "op": "PUSH1",
        "value": "0xA9"
      },
      "6925": {
        "op": "SHL"
      },
      "6926": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "6928": {
        "op": "DUP3"
      },
      "6929": {
        "op": "ADD"
      },
      "6930": {
        "op": "MSTORE"
      },
      "6931": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "6933": {
        "op": "ADD"
      },
      "6934": {
        "offset": [
          4725,
          4770
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x631"
      },
      "6937": {
        "op": "JUMP"
      },
      "6938": {
        "offset": [
          4725,
          4770
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6939": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10630,
          10648
        ],
        "op": "DUP1",
        "path": "1"
      },
      "6940": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10630,
          10648
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "6941": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10616,
          10627
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "6943": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10658,
          11969
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6944": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10678,
          10681
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6945": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10674,
          10675
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6946": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10674,
          10681
        ],
        "op": "LT",
        "path": "1"
      },
      "6947": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10658,
          11969
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "6948": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10658,
          11969
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xDE6"
      },
      "6951": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10658,
          11969
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "6952": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10704,
          10715
        ],
        "op": "DUP3",
        "path": "1"
      },
      "6953": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10716,
          10717
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6954": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10704,
          10718
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6955": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10704,
          10718
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "6956": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10704,
          10718
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6957": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10704,
          10718
        ],
        "op": "LT",
        "path": "1"
      },
      "6958": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10704,
          10718
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1B39"
      },
      "6961": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10704,
          10718
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "6962": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10704,
          10718
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1B39"
      },
      "6965": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10704,
          10718
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BC3"
      },
      "6968": {
        "fn": "MainnetEscrow.polygonCallback",
        "jump": "i",
        "offset": [
          10704,
          10718
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6969": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10704,
          10718
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6970": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10704,
          10718
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "6972": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10704,
          10718
        ],
        "op": "MUL",
        "path": "1"
      },
      "6973": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10704,
          10718
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "6975": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10704,
          10718
        ],
        "op": "ADD",
        "path": "1"
      },
      "6976": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10704,
          10718
        ],
        "op": "ADD",
        "path": "1"
      },
      "6977": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10704,
          10718
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "6978": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10704,
          10727
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "6980": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10704,
          10727
        ],
        "op": "ADD",
        "path": "1"
      },
      "6981": {
        "branch": 122,
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10704,
          10727
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "6982": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10701,
          11471
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "6983": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10701,
          11471
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1C5A"
      },
      "6986": {
        "branch": 122,
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10701,
          11471
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "6987": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10784,
          10785
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "6989": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6991": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6993": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "6995": {
        "op": "SHL"
      },
      "6996": {
        "op": "SUB"
      },
      "6997": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10749,
          10786
        ],
        "op": "AND",
        "path": "1"
      },
      "6998": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10749,
          10760
        ],
        "op": "DUP4",
        "path": "1"
      },
      "6999": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10761,
          10762
        ],
        "op": "DUP3",
        "path": "1"
      },
      "7000": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10749,
          10763
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7001": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10749,
          10763
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7002": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10749,
          10763
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7003": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10749,
          10763
        ],
        "op": "LT",
        "path": "1"
      },
      "7004": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10749,
          10763
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1B67"
      },
      "7007": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10749,
          10763
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "7008": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10749,
          10763
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1B67"
      },
      "7011": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10749,
          10763
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BC3"
      },
      "7014": {
        "fn": "MainnetEscrow.polygonCallback",
        "jump": "i",
        "offset": [
          10749,
          10763
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7015": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10749,
          10763
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7016": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10749,
          10763
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7018": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10749,
          10763
        ],
        "op": "MUL",
        "path": "1"
      },
      "7019": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10749,
          10763
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7021": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10749,
          10763
        ],
        "op": "ADD",
        "path": "1"
      },
      "7022": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10749,
          10763
        ],
        "op": "ADD",
        "path": "1"
      },
      "7023": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10749,
          10763
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7024": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10749,
          10772
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "7026": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10749,
          10772
        ],
        "op": "ADD",
        "path": "1"
      },
      "7027": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10749,
          10772
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7028": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7030": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7032": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "7034": {
        "op": "SHL"
      },
      "7035": {
        "op": "SUB"
      },
      "7036": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10749,
          10786
        ],
        "op": "AND",
        "path": "1"
      },
      "7037": {
        "branch": 123,
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10749,
          10786
        ],
        "op": "EQ",
        "path": "1"
      },
      "7038": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10746,
          10958
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1C55"
      },
      "7041": {
        "branch": 123,
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10746,
          10958
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "7042": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10817,
          10828
        ],
        "op": "DUP3",
        "path": "1",
        "statement": 66
      },
      "7043": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10829,
          10830
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7044": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10817,
          10831
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7045": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10817,
          10831
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7046": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10817,
          10831
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7047": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10817,
          10831
        ],
        "op": "LT",
        "path": "1"
      },
      "7048": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10817,
          10831
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1B93"
      },
      "7051": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10817,
          10831
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "7052": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10817,
          10831
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1B93"
      },
      "7055": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10817,
          10831
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BC3"
      },
      "7058": {
        "fn": "MainnetEscrow.polygonCallback",
        "jump": "i",
        "offset": [
          10817,
          10831
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7059": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10817,
          10831
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7060": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10817,
          10831
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7062": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10817,
          10831
        ],
        "op": "MUL",
        "path": "1"
      },
      "7063": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10817,
          10831
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7065": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10817,
          10831
        ],
        "op": "ADD",
        "path": "1"
      },
      "7066": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10817,
          10831
        ],
        "op": "ADD",
        "path": "1"
      },
      "7067": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10817,
          10831
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7068": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10817,
          10845
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7070": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10817,
          10845
        ],
        "op": "ADD",
        "path": "1"
      },
      "7071": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10817,
          10845
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7072": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7074": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7076": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "7078": {
        "op": "SHL"
      },
      "7079": {
        "op": "SUB"
      },
      "7080": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10859
        ],
        "op": "AND",
        "path": "1"
      },
      "7081": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10859
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0x23B872DD"
      },
      "7086": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10868,
          10872
        ],
        "op": "ADDRESS",
        "path": "1"
      },
      "7087": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10875,
          10886
        ],
        "op": "DUP6",
        "path": "1"
      },
      "7088": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10887,
          10888
        ],
        "op": "DUP5",
        "path": "1"
      },
      "7089": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10875,
          10889
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7090": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10875,
          10889
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7091": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10875,
          10889
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7092": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10875,
          10889
        ],
        "op": "LT",
        "path": "1"
      },
      "7093": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10875,
          10889
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1BC0"
      },
      "7096": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10875,
          10889
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "7097": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10875,
          10889
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1BC0"
      },
      "7100": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10875,
          10889
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BC3"
      },
      "7103": {
        "fn": "MainnetEscrow.polygonCallback",
        "jump": "i",
        "offset": [
          10875,
          10889
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7104": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10875,
          10889
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7105": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10875,
          10889
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7107": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10875,
          10889
        ],
        "op": "MUL",
        "path": "1"
      },
      "7108": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10875,
          10889
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7110": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10875,
          10889
        ],
        "op": "ADD",
        "path": "1"
      },
      "7111": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10875,
          10889
        ],
        "op": "ADD",
        "path": "1"
      },
      "7112": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10875,
          10889
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7113": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10875,
          10898
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "7115": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10875,
          10898
        ],
        "op": "ADD",
        "path": "1"
      },
      "7116": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10875,
          10898
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7117": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10900,
          10911
        ],
        "op": "DUP7",
        "path": "1"
      },
      "7118": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10912,
          10913
        ],
        "op": "DUP6",
        "path": "1"
      },
      "7119": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10900,
          10914
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7120": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10900,
          10914
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7121": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10900,
          10914
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7122": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10900,
          10914
        ],
        "op": "LT",
        "path": "1"
      },
      "7123": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10900,
          10914
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1BDE"
      },
      "7126": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10900,
          10914
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "7127": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10900,
          10914
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1BDE"
      },
      "7130": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10900,
          10914
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BC3"
      },
      "7133": {
        "fn": "MainnetEscrow.polygonCallback",
        "jump": "i",
        "offset": [
          10900,
          10914
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7134": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10900,
          10914
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7135": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10900,
          10914
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7137": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10900,
          10914
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7138": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10900,
          10914
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7139": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10900,
          10914
        ],
        "op": "MUL",
        "path": "1"
      },
      "7140": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10900,
          10914
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "7141": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10900,
          10914
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7142": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10900,
          10914
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "7143": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10900,
          10914
        ],
        "op": "ADD",
        "path": "1"
      },
      "7144": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10900,
          10914
        ],
        "op": "ADD",
        "path": "1"
      },
      "7145": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10900,
          10914
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7146": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10900,
          10938
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x60"
      },
      "7148": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10900,
          10938
        ],
        "op": "ADD",
        "path": "1"
      },
      "7149": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10900,
          10938
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7150": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "7152": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7153": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7155": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7157": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "7159": {
        "op": "SHL"
      },
      "7160": {
        "op": "SUB"
      },
      "7161": {
        "op": "NOT"
      },
      "7162": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0xE0"
      },
      "7164": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "DUP7",
        "path": "1"
      },
      "7165": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7166": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "SHL",
        "path": "1"
      },
      "7167": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "AND",
        "path": "1"
      },
      "7168": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7169": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "7170": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7172": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7174": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "7176": {
        "op": "SHL"
      },
      "7177": {
        "op": "SUB"
      },
      "7178": {
        "op": "SWAP4"
      },
      "7179": {
        "op": "DUP5"
      },
      "7180": {
        "op": "AND"
      },
      "7181": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "7183": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "DUP3",
        "path": "1"
      },
      "7184": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "ADD",
        "path": "1"
      },
      "7185": {
        "op": "MSTORE"
      },
      "7186": {
        "op": "SWAP3"
      },
      "7187": {
        "op": "SWAP1"
      },
      "7188": {
        "op": "SWAP2"
      },
      "7189": {
        "op": "AND"
      },
      "7190": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "7192": {
        "op": "DUP4"
      },
      "7193": {
        "op": "ADD"
      },
      "7194": {
        "op": "MSTORE"
      },
      "7195": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "7197": {
        "op": "DUP3"
      },
      "7198": {
        "op": "ADD"
      },
      "7199": {
        "op": "MSTORE"
      },
      "7200": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "7202": {
        "op": "ADD"
      },
      "7203": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "7205": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "7207": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7208": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "DUP1",
        "path": "1"
      },
      "7209": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "DUP4",
        "path": "1"
      },
      "7210": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "SUB",
        "path": "1"
      },
      "7211": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7212": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "7214": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "DUP8",
        "path": "1"
      },
      "7215": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "DUP1",
        "path": "1"
      },
      "7216": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "EXTCODESIZE",
        "path": "1"
      },
      "7217": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "7218": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "DUP1",
        "path": "1"
      },
      "7219": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "7220": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1C3C"
      },
      "7223": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "7224": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "7226": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "DUP1",
        "path": "1"
      },
      "7227": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "REVERT",
        "path": "1"
      },
      "7228": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7229": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "POP",
        "path": "1"
      },
      "7230": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "GAS",
        "path": "1"
      },
      "7231": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "CALL",
        "path": "1"
      },
      "7232": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "7233": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "DUP1",
        "path": "1"
      },
      "7234": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "7235": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1C50"
      },
      "7238": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "7239": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "7240": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "7242": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "DUP1",
        "path": "1"
      },
      "7243": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "RETURNDATACOPY",
        "path": "1"
      },
      "7244": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "7245": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "7247": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "REVERT",
        "path": "1"
      },
      "7248": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7249": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "POP",
        "path": "1"
      },
      "7250": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "POP",
        "path": "1"
      },
      "7251": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "POP",
        "path": "1"
      },
      "7252": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10809,
          10939
        ],
        "op": "POP",
        "path": "1"
      },
      "7253": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10746,
          10958
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7254": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10701,
          11471
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1D81"
      },
      "7257": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10701,
          11471
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7258": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10701,
          11471
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7259": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11045,
          11046
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "7261": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7263": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7265": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "7267": {
        "op": "SHL"
      },
      "7268": {
        "op": "SUB"
      },
      "7269": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11010,
          11047
        ],
        "op": "AND",
        "path": "1"
      },
      "7270": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11010,
          11021
        ],
        "op": "DUP4",
        "path": "1"
      },
      "7271": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11022,
          11023
        ],
        "op": "DUP3",
        "path": "1"
      },
      "7272": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11010,
          11024
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7273": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11010,
          11024
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7274": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11010,
          11024
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7275": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11010,
          11024
        ],
        "op": "LT",
        "path": "1"
      },
      "7276": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11010,
          11024
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1C77"
      },
      "7279": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11010,
          11024
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "7280": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11010,
          11024
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1C77"
      },
      "7283": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11010,
          11024
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BC3"
      },
      "7286": {
        "fn": "MainnetEscrow.polygonCallback",
        "jump": "i",
        "offset": [
          11010,
          11024
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7287": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11010,
          11024
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7288": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11010,
          11024
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7290": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11010,
          11024
        ],
        "op": "MUL",
        "path": "1"
      },
      "7291": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11010,
          11024
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7293": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11010,
          11024
        ],
        "op": "ADD",
        "path": "1"
      },
      "7294": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11010,
          11024
        ],
        "op": "ADD",
        "path": "1"
      },
      "7295": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11010,
          11024
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7296": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11010,
          11033
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "7298": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11010,
          11033
        ],
        "op": "ADD",
        "path": "1"
      },
      "7299": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11010,
          11033
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7300": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7302": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7304": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "7306": {
        "op": "SHL"
      },
      "7307": {
        "op": "SUB"
      },
      "7308": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11010,
          11047
        ],
        "op": "AND",
        "path": "1"
      },
      "7309": {
        "branch": 124,
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11010,
          11047
        ],
        "op": "EQ",
        "path": "1"
      },
      "7310": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11007,
          11457
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1D81"
      },
      "7313": {
        "branch": 124,
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11007,
          11457
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "7314": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11113,
          11114
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "7316": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7318": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7320": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "7322": {
        "op": "SHL"
      },
      "7323": {
        "op": "SUB"
      },
      "7324": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11073,
          11115
        ],
        "op": "AND",
        "path": "1"
      },
      "7325": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11073,
          11084
        ],
        "op": "DUP4",
        "path": "1"
      },
      "7326": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11085,
          11086
        ],
        "op": "DUP3",
        "path": "1"
      },
      "7327": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11073,
          11087
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7328": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11073,
          11087
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7329": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11073,
          11087
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7330": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11073,
          11087
        ],
        "op": "LT",
        "path": "1"
      },
      "7331": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11073,
          11087
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1CAE"
      },
      "7334": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11073,
          11087
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "7335": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11073,
          11087
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1CAE"
      },
      "7338": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11073,
          11087
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BC3"
      },
      "7341": {
        "fn": "MainnetEscrow.polygonCallback",
        "jump": "i",
        "offset": [
          11073,
          11087
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7342": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11073,
          11087
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7343": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11073,
          11087
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7345": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11073,
          11087
        ],
        "op": "MUL",
        "path": "1"
      },
      "7346": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11073,
          11087
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7348": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11073,
          11087
        ],
        "op": "ADD",
        "path": "1"
      },
      "7349": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11073,
          11087
        ],
        "op": "ADD",
        "path": "1"
      },
      "7350": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11073,
          11087
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7351": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11073,
          11101
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7353": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11073,
          11101
        ],
        "op": "ADD",
        "path": "1"
      },
      "7354": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11073,
          11101
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7355": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7357": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7359": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "7361": {
        "op": "SHL"
      },
      "7362": {
        "op": "SUB"
      },
      "7363": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11073,
          11115
        ],
        "op": "AND",
        "path": "1"
      },
      "7364": {
        "branch": 125,
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11073,
          11115
        ],
        "op": "SUB",
        "path": "1"
      },
      "7365": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11070,
          11439
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1D0C"
      },
      "7368": {
        "branch": 125,
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11070,
          11439
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "7369": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11142,
          11227
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 67,
        "value": "0x1C55"
      },
      "7372": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11163,
          11174
        ],
        "op": "DUP4",
        "path": "1"
      },
      "7373": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11175,
          11176
        ],
        "op": "DUP3",
        "path": "1"
      },
      "7374": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11163,
          11177
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7375": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11163,
          11177
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7376": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11163,
          11177
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7377": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11163,
          11177
        ],
        "op": "LT",
        "path": "1"
      },
      "7378": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11163,
          11177
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1CDD"
      },
      "7381": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11163,
          11177
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "7382": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11163,
          11177
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1CDD"
      },
      "7385": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11163,
          11177
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BC3"
      },
      "7388": {
        "fn": "MainnetEscrow.polygonCallback",
        "jump": "i",
        "offset": [
          11163,
          11177
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7389": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11163,
          11177
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7390": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11163,
          11177
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7392": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11163,
          11177
        ],
        "op": "MUL",
        "path": "1"
      },
      "7393": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11163,
          11177
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7395": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11163,
          11177
        ],
        "op": "ADD",
        "path": "1"
      },
      "7396": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11163,
          11177
        ],
        "op": "ADD",
        "path": "1"
      },
      "7397": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11163,
          11177
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7398": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11163,
          11186
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "7400": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11163,
          11186
        ],
        "op": "ADD",
        "path": "1"
      },
      "7401": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11163,
          11186
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7402": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11188,
          11199
        ],
        "op": "DUP5",
        "path": "1"
      },
      "7403": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11200,
          11201
        ],
        "op": "DUP4",
        "path": "1"
      },
      "7404": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11188,
          11202
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7405": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11188,
          11202
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7406": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11188,
          11202
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7407": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11188,
          11202
        ],
        "op": "LT",
        "path": "1"
      },
      "7408": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11188,
          11202
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1CFB"
      },
      "7411": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11188,
          11202
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "7412": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11188,
          11202
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1CFB"
      },
      "7415": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11188,
          11202
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BC3"
      },
      "7418": {
        "fn": "MainnetEscrow.polygonCallback",
        "jump": "i",
        "offset": [
          11188,
          11202
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7419": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11188,
          11202
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7420": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11188,
          11202
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7422": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11188,
          11202
        ],
        "op": "MUL",
        "path": "1"
      },
      "7423": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11188,
          11202
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7425": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11188,
          11202
        ],
        "op": "ADD",
        "path": "1"
      },
      "7426": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11188,
          11202
        ],
        "op": "ADD",
        "path": "1"
      },
      "7427": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11188,
          11202
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7428": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11188,
          11226
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x60"
      },
      "7430": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11188,
          11226
        ],
        "op": "ADD",
        "path": "1"
      },
      "7431": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11188,
          11226
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7432": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11142,
          11162
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1FC8"
      },
      "7435": {
        "fn": "MainnetEscrow.polygonCallback",
        "jump": "i",
        "offset": [
          11142,
          11227
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7436": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11070,
          11439
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7437": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11302,
          11416
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 68,
        "value": "0x1D81"
      },
      "7440": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11352,
          11363
        ],
        "op": "DUP4",
        "path": "1"
      },
      "7441": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11364,
          11365
        ],
        "op": "DUP3",
        "path": "1"
      },
      "7442": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11352,
          11366
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7443": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11352,
          11366
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7444": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11352,
          11366
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7445": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11352,
          11366
        ],
        "op": "LT",
        "path": "1"
      },
      "7446": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11352,
          11366
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1D21"
      },
      "7449": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11352,
          11366
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "7450": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11352,
          11366
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1D21"
      },
      "7453": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11352,
          11366
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BC3"
      },
      "7456": {
        "fn": "MainnetEscrow.polygonCallback",
        "jump": "i",
        "offset": [
          11352,
          11366
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7457": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11352,
          11366
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7458": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11352,
          11366
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7460": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11352,
          11366
        ],
        "op": "MUL",
        "path": "1"
      },
      "7461": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11352,
          11366
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7463": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11352,
          11366
        ],
        "op": "ADD",
        "path": "1"
      },
      "7464": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11352,
          11366
        ],
        "op": "ADD",
        "path": "1"
      },
      "7465": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11352,
          11366
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7466": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11352,
          11375
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "7468": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11352,
          11375
        ],
        "op": "ADD",
        "path": "1"
      },
      "7469": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11352,
          11375
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7470": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11377,
          11388
        ],
        "op": "DUP5",
        "path": "1"
      },
      "7471": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11389,
          11390
        ],
        "op": "DUP4",
        "path": "1"
      },
      "7472": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11377,
          11391
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7473": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11377,
          11391
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7474": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11377,
          11391
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7475": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11377,
          11391
        ],
        "op": "LT",
        "path": "1"
      },
      "7476": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11377,
          11391
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1D3F"
      },
      "7479": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11377,
          11391
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "7480": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11377,
          11391
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1D3F"
      },
      "7483": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11377,
          11391
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BC3"
      },
      "7486": {
        "fn": "MainnetEscrow.polygonCallback",
        "jump": "i",
        "offset": [
          11377,
          11391
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7487": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11377,
          11391
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7488": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11377,
          11391
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7490": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11377,
          11391
        ],
        "op": "MUL",
        "path": "1"
      },
      "7491": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11377,
          11391
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7493": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11377,
          11391
        ],
        "op": "ADD",
        "path": "1"
      },
      "7494": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11377,
          11391
        ],
        "op": "ADD",
        "path": "1"
      },
      "7495": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11377,
          11391
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7496": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11377,
          11415
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x60"
      },
      "7498": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11377,
          11415
        ],
        "op": "ADD",
        "path": "1"
      },
      "7499": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11377,
          11415
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7500": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11309,
          11320
        ],
        "op": "DUP6",
        "path": "1"
      },
      "7501": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11321,
          11322
        ],
        "op": "DUP5",
        "path": "1"
      },
      "7502": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11309,
          11323
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7503": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11309,
          11323
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7504": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11309,
          11323
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7505": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11309,
          11323
        ],
        "op": "LT",
        "path": "1"
      },
      "7506": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11309,
          11323
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1D5D"
      },
      "7509": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11309,
          11323
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "7510": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11309,
          11323
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1D5D"
      },
      "7513": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11309,
          11323
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BC3"
      },
      "7516": {
        "fn": "MainnetEscrow.polygonCallback",
        "jump": "i",
        "offset": [
          11309,
          11323
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7517": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11309,
          11323
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7518": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11309,
          11323
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7520": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11309,
          11323
        ],
        "op": "MUL",
        "path": "1"
      },
      "7521": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11309,
          11323
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7523": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11309,
          11323
        ],
        "op": "ADD",
        "path": "1"
      },
      "7524": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11309,
          11323
        ],
        "op": "ADD",
        "path": "1"
      },
      "7525": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11309,
          11323
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7526": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11309,
          11337
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7528": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11309,
          11337
        ],
        "op": "ADD",
        "path": "1"
      },
      "7529": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11309,
          11337
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7530": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7532": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7534": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "7536": {
        "op": "SHL"
      },
      "7537": {
        "op": "SUB"
      },
      "7538": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11302,
          11351
        ],
        "op": "AND",
        "path": "1"
      },
      "7539": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11302,
          11351
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x210C"
      },
      "7542": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11302,
          11351
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7543": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11302,
          11416
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "7544": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11302,
          11416
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "7545": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11302,
          11416
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7546": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11302,
          11416
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0xFFFFFFFF"
      },
      "7551": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11302,
          11416
        ],
        "op": "AND",
        "path": "1"
      },
      "7552": {
        "fn": "MainnetEscrow.polygonCallback",
        "jump": "i",
        "offset": [
          11302,
          11416
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7553": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11302,
          11416
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7554": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11533,
          11534
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "7556": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11487,
          11498
        ],
        "op": "DUP4",
        "path": "1"
      },
      "7557": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11499,
          11500
        ],
        "op": "DUP3",
        "path": "1"
      },
      "7558": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11487,
          11501
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7559": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11487,
          11501
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7560": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11487,
          11501
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7561": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11487,
          11501
        ],
        "op": "LT",
        "path": "1"
      },
      "7562": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11487,
          11501
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1D95"
      },
      "7565": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11487,
          11501
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "7566": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11487,
          11501
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1D95"
      },
      "7569": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11487,
          11501
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BC3"
      },
      "7572": {
        "fn": "MainnetEscrow.polygonCallback",
        "jump": "i",
        "offset": [
          11487,
          11501
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7573": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11487,
          11501
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7574": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11487,
          11501
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7576": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11487,
          11501
        ],
        "op": "MUL",
        "path": "1"
      },
      "7577": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11487,
          11501
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7579": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11487,
          11501
        ],
        "op": "ADD",
        "path": "1"
      },
      "7580": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11487,
          11501
        ],
        "op": "ADD",
        "path": "1"
      },
      "7581": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11487,
          11501
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7582": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11487,
          11530
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x80"
      },
      "7584": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11487,
          11530
        ],
        "op": "ADD",
        "path": "1"
      },
      "7585": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11487,
          11530
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7586": {
        "branch": 126,
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11487,
          11534
        ],
        "op": "GT",
        "path": "1"
      },
      "7587": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11484,
          11665
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "7588": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11484,
          11665
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1E1C"
      },
      "7591": {
        "branch": 126,
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11484,
          11665
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "7592": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11607,
          11618
        ],
        "op": "DUP3",
        "path": "1",
        "statement": 69
      },
      "7593": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11619,
          11620
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7594": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11607,
          11621
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7595": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11607,
          11621
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7596": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11607,
          11621
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7597": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11607,
          11621
        ],
        "op": "LT",
        "path": "1"
      },
      "7598": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11607,
          11621
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1DB9"
      },
      "7601": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11607,
          11621
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "7602": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11607,
          11621
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1DB9"
      },
      "7605": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11607,
          11621
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BC3"
      },
      "7608": {
        "fn": "MainnetEscrow.polygonCallback",
        "jump": "i",
        "offset": [
          11607,
          11621
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7609": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11607,
          11621
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7610": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11607,
          11621
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7612": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11607,
          11621
        ],
        "op": "MUL",
        "path": "1"
      },
      "7613": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11607,
          11621
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7615": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11607,
          11621
        ],
        "op": "ADD",
        "path": "1"
      },
      "7616": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11607,
          11621
        ],
        "op": "ADD",
        "path": "1"
      },
      "7617": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11607,
          11621
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7618": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11607,
          11650
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x80"
      },
      "7620": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11607,
          11650
        ],
        "op": "ADD",
        "path": "1"
      },
      "7621": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11607,
          11650
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7622": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11573
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x99"
      },
      "7624": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11603
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "7626": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11574,
          11585
        ],
        "op": "DUP6",
        "path": "1"
      },
      "7627": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11586,
          11587
        ],
        "op": "DUP5",
        "path": "1"
      },
      "7628": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11574,
          11588
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7629": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11574,
          11588
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7630": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11574,
          11588
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7631": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11574,
          11588
        ],
        "op": "LT",
        "path": "1"
      },
      "7632": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11574,
          11588
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1DDB"
      },
      "7635": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11574,
          11588
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "7636": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11574,
          11588
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1DDB"
      },
      "7639": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11574,
          11588
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BC3"
      },
      "7642": {
        "fn": "MainnetEscrow.polygonCallback",
        "jump": "i",
        "offset": [
          11574,
          11588
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7643": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11574,
          11588
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7644": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11574,
          11588
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7646": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11574,
          11588
        ],
        "op": "MUL",
        "path": "1"
      },
      "7647": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11574,
          11588
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7649": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11574,
          11588
        ],
        "op": "ADD",
        "path": "1"
      },
      "7650": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11574,
          11588
        ],
        "op": "ADD",
        "path": "1"
      },
      "7651": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11574,
          11588
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7652": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11574,
          11602
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7654": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11574,
          11602
        ],
        "op": "ADD",
        "path": "1"
      },
      "7655": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11574,
          11602
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7656": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7658": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7660": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "7662": {
        "op": "SHL"
      },
      "7663": {
        "op": "SUB"
      },
      "7664": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11603
        ],
        "op": "AND",
        "path": "1"
      },
      "7665": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7667": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7669": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "7671": {
        "op": "SHL"
      },
      "7672": {
        "op": "SUB"
      },
      "7673": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11603
        ],
        "op": "AND",
        "path": "1"
      },
      "7674": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11603
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7675": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11603
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "7676": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11603
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7678": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11603
        ],
        "op": "ADD",
        "path": "1"
      },
      "7679": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11603
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7680": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11603
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7681": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11603
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "7682": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11603
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7684": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11603
        ],
        "op": "ADD",
        "path": "1"
      },
      "7685": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11603
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "7687": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11603
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "7688": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11603
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "7690": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11650
        ],
        "op": "DUP3",
        "path": "1"
      },
      "7691": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11650
        ],
        "op": "DUP3",
        "path": "1"
      },
      "7692": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11650
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "7693": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11650
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1E16"
      },
      "7696": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11650
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "7697": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11650
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7698": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11650
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2AF2"
      },
      "7701": {
        "fn": "MainnetEscrow.polygonCallback",
        "jump": "i",
        "offset": [
          11553,
          11650
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7702": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11650
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7703": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11650
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7704": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11650
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "7705": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11553,
          11650
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "7706": {
        "op": "POP"
      },
      "7707": {
        "op": "POP"
      },
      "7708": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11484,
          11665
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7709": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11683,
          11958
        ],
        "op": "PUSH32",
        "path": "1",
        "statement": 70,
        "value": "0xFDF87137985FCE097C2059F7E3BD28B9104995CAD66709FDECBAA5E8E48DA9AF"
      },
      "7742": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11717,
          11728
        ],
        "op": "DUP4",
        "path": "1"
      },
      "7743": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11729,
          11730
        ],
        "op": "DUP3",
        "path": "1"
      },
      "7744": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11717,
          11731
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7745": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11717,
          11731
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7746": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11717,
          11731
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7747": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11717,
          11731
        ],
        "op": "LT",
        "path": "1"
      },
      "7748": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11717,
          11731
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1E4F"
      },
      "7751": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11717,
          11731
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "7752": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11717,
          11731
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1E4F"
      },
      "7755": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11717,
          11731
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BC3"
      },
      "7758": {
        "fn": "MainnetEscrow.polygonCallback",
        "jump": "i",
        "offset": [
          11717,
          11731
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7759": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11717,
          11731
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7760": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11717,
          11731
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7762": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11717,
          11731
        ],
        "op": "MUL",
        "path": "1"
      },
      "7763": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11717,
          11731
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7765": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11717,
          11731
        ],
        "op": "ADD",
        "path": "1"
      },
      "7766": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11717,
          11731
        ],
        "op": "ADD",
        "path": "1"
      },
      "7767": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11717,
          11731
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7768": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11717,
          11740
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "7770": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11717,
          11740
        ],
        "op": "ADD",
        "path": "1"
      },
      "7771": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11717,
          11740
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7772": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11758,
          11769
        ],
        "op": "DUP5",
        "path": "1"
      },
      "7773": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11770,
          11771
        ],
        "op": "DUP4",
        "path": "1"
      },
      "7774": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11758,
          11772
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7775": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11758,
          11772
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7776": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11758,
          11772
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7777": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11758,
          11772
        ],
        "op": "LT",
        "path": "1"
      },
      "7778": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11758,
          11772
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1E6D"
      },
      "7781": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11758,
          11772
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "7782": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11758,
          11772
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1E6D"
      },
      "7785": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11758,
          11772
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BC3"
      },
      "7788": {
        "fn": "MainnetEscrow.polygonCallback",
        "jump": "i",
        "offset": [
          11758,
          11772
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7789": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11758,
          11772
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7790": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11758,
          11772
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7792": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11758,
          11772
        ],
        "op": "MUL",
        "path": "1"
      },
      "7793": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11758,
          11772
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7795": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11758,
          11772
        ],
        "op": "ADD",
        "path": "1"
      },
      "7796": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11758,
          11772
        ],
        "op": "ADD",
        "path": "1"
      },
      "7797": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11758,
          11772
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7798": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11758,
          11786
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7800": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11758,
          11786
        ],
        "op": "ADD",
        "path": "1"
      },
      "7801": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11758,
          11786
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7802": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11804,
          11815
        ],
        "op": "DUP6",
        "path": "1"
      },
      "7803": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11816,
          11817
        ],
        "op": "DUP5",
        "path": "1"
      },
      "7804": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11804,
          11818
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7805": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11804,
          11818
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7806": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11804,
          11818
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7807": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11804,
          11818
        ],
        "op": "LT",
        "path": "1"
      },
      "7808": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11804,
          11818
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1E8B"
      },
      "7811": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11804,
          11818
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "7812": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11804,
          11818
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1E8B"
      },
      "7815": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11804,
          11818
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BC3"
      },
      "7818": {
        "fn": "MainnetEscrow.polygonCallback",
        "jump": "i",
        "offset": [
          11804,
          11818
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7819": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11804,
          11818
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7820": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11804,
          11818
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7822": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11804,
          11818
        ],
        "op": "MUL",
        "path": "1"
      },
      "7823": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11804,
          11818
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7825": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11804,
          11818
        ],
        "op": "ADD",
        "path": "1"
      },
      "7826": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11804,
          11818
        ],
        "op": "ADD",
        "path": "1"
      },
      "7827": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11804,
          11818
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7828": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11804,
          11827
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "7830": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11804,
          11827
        ],
        "op": "ADD",
        "path": "1"
      },
      "7831": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11804,
          11827
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7832": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11845,
          11856
        ],
        "op": "DUP7",
        "path": "1"
      },
      "7833": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11857,
          11858
        ],
        "op": "DUP6",
        "path": "1"
      },
      "7834": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11845,
          11859
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7835": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11845,
          11859
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7836": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11845,
          11859
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7837": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11845,
          11859
        ],
        "op": "LT",
        "path": "1"
      },
      "7838": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11845,
          11859
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1EA9"
      },
      "7841": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11845,
          11859
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "7842": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11845,
          11859
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1EA9"
      },
      "7845": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11845,
          11859
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BC3"
      },
      "7848": {
        "fn": "MainnetEscrow.polygonCallback",
        "jump": "i",
        "offset": [
          11845,
          11859
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7849": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11845,
          11859
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7850": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11845,
          11859
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7852": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11845,
          11859
        ],
        "op": "MUL",
        "path": "1"
      },
      "7853": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11845,
          11859
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7855": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11845,
          11859
        ],
        "op": "ADD",
        "path": "1"
      },
      "7856": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11845,
          11859
        ],
        "op": "ADD",
        "path": "1"
      },
      "7857": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11845,
          11859
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7858": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11845,
          11883
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x60"
      },
      "7860": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11845,
          11883
        ],
        "op": "ADD",
        "path": "1"
      },
      "7861": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11845,
          11883
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7862": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11901,
          11912
        ],
        "op": "DUP8",
        "path": "1"
      },
      "7863": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11913,
          11914
        ],
        "op": "DUP7",
        "path": "1"
      },
      "7864": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11901,
          11915
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7865": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11901,
          11915
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7866": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11901,
          11915
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7867": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11901,
          11915
        ],
        "op": "LT",
        "path": "1"
      },
      "7868": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11901,
          11915
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1EC7"
      },
      "7871": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11901,
          11915
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "7872": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11901,
          11915
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1EC7"
      },
      "7875": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11901,
          11915
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BC3"
      },
      "7878": {
        "fn": "MainnetEscrow.polygonCallback",
        "jump": "i",
        "offset": [
          11901,
          11915
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7879": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11901,
          11915
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7880": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11901,
          11915
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7882": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11901,
          11915
        ],
        "op": "MUL",
        "path": "1"
      },
      "7883": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11901,
          11915
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7885": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11901,
          11915
        ],
        "op": "ADD",
        "path": "1"
      },
      "7886": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11901,
          11915
        ],
        "op": "ADD",
        "path": "1"
      },
      "7887": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11901,
          11915
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7888": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11901,
          11944
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x80"
      },
      "7890": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11901,
          11944
        ],
        "op": "ADD",
        "path": "1"
      },
      "7891": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11901,
          11944
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7892": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11683,
          11958
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "7894": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11683,
          11958
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7895": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11683,
          11958
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1F10"
      },
      "7898": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11683,
          11958
        ],
        "op": "SWAP6",
        "path": "1"
      },
      "7899": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11683,
          11958
        ],
        "op": "SWAP5",
        "path": "1"
      },
      "7900": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11683,
          11958
        ],
        "op": "SWAP4",
        "path": "1"
      },
      "7901": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11683,
          11958
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "7902": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11683,
          11958
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "7903": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11683,
          11958
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7904": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7906": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7908": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "7910": {
        "op": "SHL"
      },
      "7911": {
        "op": "SUB"
      },
      "7912": {
        "op": "SWAP6"
      },
      "7913": {
        "op": "DUP7"
      },
      "7914": {
        "op": "AND"
      },
      "7915": {
        "op": "DUP2"
      },
      "7916": {
        "op": "MSTORE"
      },
      "7917": {
        "op": "SWAP4"
      },
      "7918": {
        "op": "SWAP1"
      },
      "7919": {
        "op": "SWAP5"
      },
      "7920": {
        "op": "AND"
      },
      "7921": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "7923": {
        "op": "DUP5"
      },
      "7924": {
        "op": "ADD"
      },
      "7925": {
        "op": "MSTORE"
      },
      "7926": {
        "op": "SWAP1"
      },
      "7927": {
        "op": "ISZERO"
      },
      "7928": {
        "op": "ISZERO"
      },
      "7929": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "7931": {
        "op": "DUP4"
      },
      "7932": {
        "op": "ADD"
      },
      "7933": {
        "op": "MSTORE"
      },
      "7934": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "7936": {
        "op": "DUP3"
      },
      "7937": {
        "op": "ADD"
      },
      "7938": {
        "op": "MSTORE"
      },
      "7939": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "7941": {
        "op": "DUP2"
      },
      "7942": {
        "op": "ADD"
      },
      "7943": {
        "op": "SWAP2"
      },
      "7944": {
        "op": "SWAP1"
      },
      "7945": {
        "op": "SWAP2"
      },
      "7946": {
        "op": "MSTORE"
      },
      "7947": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "7949": {
        "op": "ADD"
      },
      "7950": {
        "op": "SWAP1"
      },
      "7951": {
        "op": "JUMP"
      },
      "7952": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11683,
          11958
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7953": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11683,
          11958
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "7955": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11683,
          11958
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7956": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11683,
          11958
        ],
        "op": "DUP1",
        "path": "1"
      },
      "7957": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11683,
          11958
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "7958": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11683,
          11958
        ],
        "op": "SUB",
        "path": "1"
      },
      "7959": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11683,
          11958
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7960": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          11683,
          11958
        ],
        "op": "LOG1",
        "path": "1"
      },
      "7961": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10683,
          10686
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 71,
        "value": "0x1F21"
      },
      "7964": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10683,
          10686
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7965": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10683,
          10686
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2BD9"
      },
      "7968": {
        "fn": "MainnetEscrow.polygonCallback",
        "jump": "i",
        "offset": [
          10683,
          10686
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7969": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10683,
          10686
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7970": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10683,
          10686
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7971": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10683,
          10686
        ],
        "op": "POP",
        "path": "1"
      },
      "7972": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10658,
          11969
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1B1F"
      },
      "7975": {
        "fn": "MainnetEscrow.polygonCallback",
        "offset": [
          10658,
          11969
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7976": {
        "fn": "PausableUpgradeable._requireNotPaused",
        "offset": [
          2010,
          2116
        ],
        "op": "JUMPDEST",
        "path": "28"
      },
      "7977": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1928,
          1935
        ],
        "op": "PUSH1",
        "path": "28",
        "value": "0x65"
      },
      "7979": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1928,
          1935
        ],
        "op": "SLOAD",
        "path": "28"
      },
      "7980": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1928,
          1935
        ],
        "op": "PUSH1",
        "path": "28",
        "value": "0xFF"
      },
      "7982": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1928,
          1935
        ],
        "op": "AND",
        "path": "28"
      },
      "7983": {
        "branch": 135,
        "fn": "PausableUpgradeable._requireNotPaused",
        "offset": [
          2079,
          2088
        ],
        "op": "ISZERO",
        "path": "28",
        "statement": 72
      },
      "7984": {
        "fn": "PausableUpgradeable._requireNotPaused",
        "offset": [
          2071,
          2109
        ],
        "op": "PUSH2",
        "path": "28",
        "value": "0xF35"
      },
      "7987": {
        "branch": 135,
        "fn": "PausableUpgradeable._requireNotPaused",
        "offset": [
          2071,
          2109
        ],
        "op": "JUMPI",
        "path": "28"
      },
      "7988": {
        "fn": "PausableUpgradeable._requireNotPaused",
        "offset": [
          2071,
          2109
        ],
        "op": "PUSH1",
        "path": "28",
        "value": "0x40"
      },
      "7990": {
        "fn": "PausableUpgradeable._requireNotPaused",
        "offset": [
          2071,
          2109
        ],
        "op": "MLOAD",
        "path": "28"
      },
      "7991": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "7995": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "7997": {
        "op": "SHL"
      },
      "7998": {
        "fn": "PausableUpgradeable._requireNotPaused",
        "offset": [
          2071,
          2109
        ],
        "op": "DUP2",
        "path": "28"
      },
      "7999": {
        "fn": "PausableUpgradeable._requireNotPaused",
        "offset": [
          2071,
          2109
        ],
        "op": "MSTORE",
        "path": "28"
      },
      "8000": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "8002": {
        "fn": "PausableUpgradeable._requireNotPaused",
        "offset": [
          2071,
          2109
        ],
        "op": "PUSH1",
        "path": "28",
        "value": "0x4"
      },
      "8004": {
        "fn": "PausableUpgradeable._requireNotPaused",
        "offset": [
          2071,
          2109
        ],
        "op": "DUP3",
        "path": "28"
      },
      "8005": {
        "fn": "PausableUpgradeable._requireNotPaused",
        "offset": [
          2071,
          2109
        ],
        "op": "ADD",
        "path": "28"
      },
      "8006": {
        "op": "MSTORE"
      },
      "8007": {
        "op": "PUSH1",
        "value": "0x10"
      },
      "8009": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "8011": {
        "op": "DUP3"
      },
      "8012": {
        "op": "ADD"
      },
      "8013": {
        "op": "MSTORE"
      },
      "8014": {
        "op": "PUSH16",
        "value": "0x14185D5CD8589B194E881C185D5CD959"
      },
      "8031": {
        "op": "PUSH1",
        "value": "0x82"
      },
      "8033": {
        "op": "SHL"
      },
      "8034": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "8036": {
        "op": "DUP3"
      },
      "8037": {
        "op": "ADD"
      },
      "8038": {
        "op": "MSTORE"
      },
      "8039": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "8041": {
        "op": "ADD"
      },
      "8042": {
        "fn": "PausableUpgradeable._requireNotPaused",
        "offset": [
          2071,
          2109
        ],
        "op": "PUSH2",
        "path": "28",
        "value": "0x631"
      },
      "8045": {
        "op": "JUMP"
      },
      "8046": {
        "fn": "OwnableUpgradeable._checkOwner",
        "offset": [
          1599,
          1729
        ],
        "op": "JUMPDEST",
        "path": "26"
      },
      "8047": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          1513,
          1519
        ],
        "op": "PUSH1",
        "path": "26",
        "value": "0x33"
      },
      "8049": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          1513,
          1519
        ],
        "op": "SLOAD",
        "path": "26"
      },
      "8050": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8052": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8054": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "8056": {
        "op": "SHL"
      },
      "8057": {
        "op": "SUB"
      },
      "8058": {
        "fn": "OwnableUpgradeable.owner",
        "offset": [
          1513,
          1519
        ],
        "op": "AND",
        "path": "26"
      },
      "8059": {
        "fn": "ContextUpgradeable._msgSender",
        "offset": [
          929,
          939
        ],
        "op": "CALLER",
        "path": "31",
        "statement": 73
      },
      "8060": {
        "branch": 134,
        "fn": "OwnableUpgradeable._checkOwner",
        "offset": [
          1662,
          1685
        ],
        "op": "EQ",
        "path": "26",
        "statement": 74
      },
      "8061": {
        "fn": "OwnableUpgradeable._checkOwner",
        "offset": [
          1654,
          1722
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0xF35"
      },
      "8064": {
        "branch": 134,
        "fn": "OwnableUpgradeable._checkOwner",
        "offset": [
          1654,
          1722
        ],
        "op": "JUMPI",
        "path": "26"
      },
      "8065": {
        "fn": "OwnableUpgradeable._checkOwner",
        "offset": [
          1654,
          1722
        ],
        "op": "PUSH1",
        "path": "26",
        "value": "0x40"
      },
      "8067": {
        "fn": "OwnableUpgradeable._checkOwner",
        "offset": [
          1654,
          1722
        ],
        "op": "MLOAD",
        "path": "26"
      },
      "8068": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "8072": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "8074": {
        "op": "SHL"
      },
      "8075": {
        "fn": "OwnableUpgradeable._checkOwner",
        "offset": [
          1654,
          1722
        ],
        "op": "DUP2",
        "path": "26"
      },
      "8076": {
        "fn": "OwnableUpgradeable._checkOwner",
        "offset": [
          1654,
          1722
        ],
        "op": "MSTORE",
        "path": "26"
      },
      "8077": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "8079": {
        "fn": "OwnableUpgradeable._checkOwner",
        "offset": [
          1654,
          1722
        ],
        "op": "PUSH1",
        "path": "26",
        "value": "0x4"
      },
      "8081": {
        "fn": "OwnableUpgradeable._checkOwner",
        "offset": [
          1654,
          1722
        ],
        "op": "DUP3",
        "path": "26"
      },
      "8082": {
        "fn": "OwnableUpgradeable._checkOwner",
        "offset": [
          1654,
          1722
        ],
        "op": "ADD",
        "path": "26"
      },
      "8083": {
        "op": "DUP2"
      },
      "8084": {
        "op": "SWAP1"
      },
      "8085": {
        "op": "MSTORE"
      },
      "8086": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "8088": {
        "op": "DUP3"
      },
      "8089": {
        "op": "ADD"
      },
      "8090": {
        "op": "MSTORE"
      },
      "8091": {
        "op": "PUSH32",
        "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
      },
      "8124": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "8126": {
        "op": "DUP3"
      },
      "8127": {
        "op": "ADD"
      },
      "8128": {
        "op": "MSTORE"
      },
      "8129": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "8131": {
        "op": "ADD"
      },
      "8132": {
        "fn": "OwnableUpgradeable._checkOwner",
        "offset": [
          1654,
          1722
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x631"
      },
      "8135": {
        "op": "JUMP"
      },
      "8136": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12040,
          12561
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "8137": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12184,
          12191
        ],
        "op": "DUP1",
        "path": "1",
        "statement": 75
      },
      "8138": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12159,
          12180
        ],
        "op": "SELFBALANCE",
        "path": "1"
      },
      "8139": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12159,
          12191
        ],
        "op": "LT",
        "path": "1"
      },
      "8140": {
        "branch": 127,
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12159,
          12191
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "8141": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12151,
          12226
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2018"
      },
      "8144": {
        "branch": 127,
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12151,
          12226
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "8145": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12151,
          12226
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "8147": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12151,
          12226
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "8148": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "8152": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "8154": {
        "op": "SHL"
      },
      "8155": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12151,
          12226
        ],
        "op": "DUP2",
        "path": "1"
      },
      "8156": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12151,
          12226
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "8157": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "8159": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12151,
          12226
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "8161": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12151,
          12226
        ],
        "op": "DUP3",
        "path": "1"
      },
      "8162": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12151,
          12226
        ],
        "op": "ADD",
        "path": "1"
      },
      "8163": {
        "op": "MSTORE"
      },
      "8164": {
        "op": "PUSH1",
        "value": "0x1E"
      },
      "8166": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "8168": {
        "op": "DUP3"
      },
      "8169": {
        "op": "ADD"
      },
      "8170": {
        "op": "MSTORE"
      },
      "8171": {
        "op": "PUSH32",
        "value": "0x5F68616E646C6545746865725472616E7366657220696E736F6C76656E740000"
      },
      "8204": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "8206": {
        "op": "DUP3"
      },
      "8207": {
        "op": "ADD"
      },
      "8208": {
        "op": "MSTORE"
      },
      "8209": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "8211": {
        "op": "ADD"
      },
      "8212": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12151,
          12226
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x631"
      },
      "8215": {
        "op": "JUMP"
      },
      "8216": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12151,
          12226
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "8217": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12236,
          12247
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "8219": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12251,
          12260
        ],
        "op": "GAS",
        "path": "1"
      },
      "8220": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12236,
          12260
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "8221": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12236,
          12260
        ],
        "op": "POP",
        "path": "1"
      },
      "8222": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12271,
          12283
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "8224": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12294
        ],
        "op": "DUP4",
        "path": "1"
      },
      "8225": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8227": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8229": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "8231": {
        "op": "SHL"
      },
      "8232": {
        "op": "SUB"
      },
      "8233": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12299
        ],
        "op": "AND",
        "path": "1"
      },
      "8234": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12307,
          12314
        ],
        "op": "DUP4",
        "path": "1"
      },
      "8235": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12321,
          12324
        ],
        "op": "DUP4",
        "path": "1"
      },
      "8236": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "8237": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "8239": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "8240": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "8242": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "8244": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "8245": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "DUP1",
        "path": "1"
      },
      "8246": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "DUP4",
        "path": "1"
      },
      "8247": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "SUB",
        "path": "1"
      },
      "8248": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "DUP2",
        "path": "1"
      },
      "8249": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "DUP6",
        "path": "1"
      },
      "8250": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "DUP9",
        "path": "1"
      },
      "8251": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "DUP9",
        "path": "1"
      },
      "8252": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "CALL",
        "path": "1"
      },
      "8253": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "SWAP4",
        "path": "1"
      },
      "8254": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "POP",
        "path": "1"
      },
      "8255": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "POP",
        "path": "1"
      },
      "8256": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "POP",
        "path": "1"
      },
      "8257": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "POP",
        "path": "1"
      },
      "8258": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "8259": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "DUP1",
        "path": "1"
      },
      "8260": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "8262": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "DUP2",
        "path": "1"
      },
      "8263": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "EQ",
        "path": "1"
      },
      "8264": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x206D"
      },
      "8267": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "8268": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "8270": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "8271": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "8272": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "POP",
        "path": "1"
      },
      "8273": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "8275": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "NOT",
        "path": "1"
      },
      "8276": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x3F"
      },
      "8278": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "8279": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "ADD",
        "path": "1"
      },
      "8280": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "AND",
        "path": "1"
      },
      "8281": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "DUP3",
        "path": "1"
      },
      "8282": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "ADD",
        "path": "1"
      },
      "8283": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "8285": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "8286": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "8287": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "DUP3",
        "path": "1"
      },
      "8288": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "8289": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "8290": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "8292": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "8294": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "DUP5",
        "path": "1"
      },
      "8295": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "ADD",
        "path": "1"
      },
      "8296": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "RETURNDATACOPY",
        "path": "1"
      },
      "8297": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2072"
      },
      "8300": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "JUMP",
        "path": "1"
      },
      "8301": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "8302": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x60"
      },
      "8304": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "8305": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "POP",
        "path": "1"
      },
      "8306": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "8307": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12289,
          12329
        ],
        "op": "POP",
        "path": "1"
      },
      "8308": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12270,
          12329
        ],
        "op": "POP",
        "path": "1"
      },
      "8309": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12270,
          12329
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "8310": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12270,
          12329
        ],
        "op": "POP",
        "path": "1"
      },
      "8311": {
        "branch": 128,
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12427,
          12434
        ],
        "op": "DUP1",
        "path": "1"
      },
      "8312": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12422,
          12555
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2106"
      },
      "8315": {
        "branch": 128,
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12422,
          12555
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "8316": {
        "offset": [
          2160,
          2202
        ],
        "op": "PUSH20",
        "path": "1",
        "value": "0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
      },
      "8337": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8339": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8341": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "8343": {
        "op": "SHL"
      },
      "8344": {
        "op": "SUB"
      },
      "8345": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12462
        ],
        "op": "AND",
        "path": "1",
        "statement": 76
      },
      "8346": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12462
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0xD0E30DB0"
      },
      "8351": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12470,
          12477
        ],
        "op": "DUP5",
        "path": "1"
      },
      "8352": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "8354": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "8355": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "DUP3",
        "path": "1"
      },
      "8356": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "PUSH4",
        "path": "1",
        "value": "0xFFFFFFFF"
      },
      "8361": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "AND",
        "path": "1"
      },
      "8362": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0xE0"
      },
      "8364": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "SHL",
        "path": "1"
      },
      "8365": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "DUP2",
        "path": "1"
      },
      "8366": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "8367": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "8369": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "ADD",
        "path": "1"
      },
      "8370": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "8372": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "8374": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "8375": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "DUP1",
        "path": "1"
      },
      "8376": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "DUP4",
        "path": "1"
      },
      "8377": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "SUB",
        "path": "1"
      },
      "8378": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "DUP2",
        "path": "1"
      },
      "8379": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "DUP6",
        "path": "1"
      },
      "8380": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "DUP9",
        "path": "1"
      },
      "8381": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "DUP1",
        "path": "1"
      },
      "8382": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "EXTCODESIZE",
        "path": "1"
      },
      "8383": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "8384": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "DUP1",
        "path": "1"
      },
      "8385": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "8386": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x20CA"
      },
      "8389": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "8390": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "8392": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "DUP1",
        "path": "1"
      },
      "8393": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "REVERT",
        "path": "1"
      },
      "8394": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "8395": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "POP",
        "path": "1"
      },
      "8396": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "GAS",
        "path": "1"
      },
      "8397": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "CALL",
        "path": "1"
      },
      "8398": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "8399": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "DUP1",
        "path": "1"
      },
      "8400": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "8401": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x20DE"
      },
      "8404": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "8405": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "8406": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "8408": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "DUP1",
        "path": "1"
      },
      "8409": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "RETURNDATACOPY",
        "path": "1"
      },
      "8410": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "RETURNDATASIZE",
        "path": "1"
      },
      "8411": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "8413": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "REVERT",
        "path": "1"
      },
      "8414": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12450,
          12480
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "8415": {
        "op": "POP"
      },
      "8416": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12494,
          12544
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 77,
        "value": "0x2106"
      },
      "8419": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12494,
          12544
        ],
        "op": "SWAP4",
        "path": "1"
      },
      "8420": {
        "op": "POP"
      },
      "8421": {
        "offset": [
          2160,
          2202
        ],
        "op": "PUSH20",
        "path": "1",
        "value": "0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
      },
      "8442": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          2160,
          2202
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "8443": {
        "op": "POP"
      },
      "8444": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12529,
          12534
        ],
        "op": "DUP8",
        "path": "1"
      },
      "8445": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12529,
          12534
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "8446": {
        "op": "POP"
      },
      "8447": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12536,
          12543
        ],
        "op": "DUP7",
        "path": "1"
      },
      "8448": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12536,
          12543
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "8449": {
        "op": "POP"
      },
      "8450": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12494,
          12528
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x210C"
      },
      "8453": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "jump": "i",
        "offset": [
          12494,
          12544
        ],
        "op": "JUMP",
        "path": "1"
      },
      "8454": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12494,
          12544
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "8455": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12111,
          12561
        ],
        "op": "POP",
        "path": "1"
      },
      "8456": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12111,
          12561
        ],
        "op": "POP",
        "path": "1"
      },
      "8457": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12040,
          12561
        ],
        "op": "POP",
        "path": "1"
      },
      "8458": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "offset": [
          12040,
          12561
        ],
        "op": "POP",
        "path": "1"
      },
      "8459": {
        "fn": "MainnetEscrow._handleEtherTransfer",
        "jump": "o",
        "offset": [
          12040,
          12561
        ],
        "op": "JUMP",
        "path": "1"
      },
      "8460": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          763,
          968
        ],
        "op": "JUMPDEST",
        "path": "37"
      },
      "8461": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "PUSH1",
        "path": "37",
        "statement": 78,
        "value": "0x40"
      },
      "8463": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "MLOAD",
        "path": "37"
      },
      "8464": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8466": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8468": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "8470": {
        "op": "SHL"
      },
      "8471": {
        "op": "SUB"
      },
      "8472": {
        "op": "DUP4"
      },
      "8473": {
        "op": "AND"
      },
      "8474": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "PUSH1",
        "path": "37",
        "value": "0x24"
      },
      "8476": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "DUP3",
        "path": "37"
      },
      "8477": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "ADD",
        "path": "37"
      },
      "8478": {
        "op": "MSTORE"
      },
      "8479": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "8481": {
        "op": "DUP2"
      },
      "8482": {
        "op": "ADD"
      },
      "8483": {
        "op": "DUP3"
      },
      "8484": {
        "op": "SWAP1"
      },
      "8485": {
        "op": "MSTORE"
      },
      "8486": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          875,
          961
        ],
        "op": "PUSH2",
        "path": "37",
        "value": "0xDE6"
      },
      "8489": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          875,
          961
        ],
        "op": "SWAP1",
        "path": "37"
      },
      "8490": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          895,
          900
        ],
        "op": "DUP5",
        "path": "37"
      },
      "8491": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          895,
          900
        ],
        "op": "SWAP1",
        "path": "37"
      },
      "8492": {
        "op": "PUSH4",
        "value": "0xA9059CBB"
      },
      "8497": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "8499": {
        "op": "SHL"
      },
      "8500": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          925,
          948
        ],
        "op": "SWAP1",
        "path": "37"
      },
      "8501": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "8503": {
        "op": "ADD"
      },
      "8504": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "JUMPDEST",
        "path": "37"
      },
      "8505": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "PUSH1",
        "path": "37",
        "value": "0x40"
      },
      "8507": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "DUP1",
        "path": "37"
      },
      "8508": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "MLOAD",
        "path": "37"
      },
      "8509": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "8511": {
        "op": "NOT"
      },
      "8512": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "DUP2",
        "path": "37"
      },
      "8513": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "DUP5",
        "path": "37"
      },
      "8514": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "SUB",
        "path": "37"
      },
      "8515": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "ADD",
        "path": "37"
      },
      "8516": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "DUP2",
        "path": "37"
      },
      "8517": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "MSTORE",
        "path": "37"
      },
      "8518": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "SWAP2",
        "path": "37"
      },
      "8519": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "SWAP1",
        "path": "37"
      },
      "8520": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "MSTORE",
        "path": "37"
      },
      "8521": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "PUSH1",
        "path": "37",
        "value": "0x20"
      },
      "8523": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "DUP2",
        "path": "37"
      },
      "8524": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "ADD",
        "path": "37"
      },
      "8525": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "DUP1",
        "path": "37"
      },
      "8526": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "MLOAD",
        "path": "37"
      },
      "8527": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8529": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8531": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "8533": {
        "op": "SHL"
      },
      "8534": {
        "op": "SUB"
      },
      "8535": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "AND",
        "path": "37"
      },
      "8536": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8538": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8540": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "8542": {
        "op": "SHL"
      },
      "8543": {
        "op": "SUB"
      },
      "8544": {
        "op": "NOT"
      },
      "8545": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "SWAP1",
        "path": "37"
      },
      "8546": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "SWAP4",
        "path": "37"
      },
      "8547": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "AND",
        "path": "37"
      },
      "8548": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "SWAP3",
        "path": "37"
      },
      "8549": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "SWAP1",
        "path": "37"
      },
      "8550": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "SWAP3",
        "path": "37"
      },
      "8551": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "OR",
        "path": "37"
      },
      "8552": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "SWAP1",
        "path": "37"
      },
      "8553": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "SWAP2",
        "path": "37"
      },
      "8554": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          902,
          960
        ],
        "op": "MSTORE",
        "path": "37"
      },
      "8555": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          875,
          894
        ],
        "op": "PUSH2",
        "path": "37",
        "value": "0x22EA"
      },
      "8558": {
        "fn": "SafeERC20.safeTransfer",
        "jump": "i",
        "offset": [
          875,
          961
        ],
        "op": "JUMP",
        "path": "37"
      },
      "8559": {
        "fn": "OwnableUpgradeable.__Ownable_init",
        "offset": [
          1003,
          1098
        ],
        "op": "JUMPDEST",
        "path": "26"
      },
      "8560": {
        "offset": [
          4910,
          4923
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0x0"
      },
      "8562": {
        "fn": "OwnableUpgradeable.__Ownable_init",
        "offset": [
          4910,
          4923
        ],
        "op": "SLOAD",
        "path": "27"
      },
      "8563": {
        "fn": "OwnableUpgradeable.__Ownable_init",
        "offset": [
          4910,
          4923
        ],
        "op": "PUSH2",
        "path": "27",
        "value": "0x100"
      },
      "8566": {
        "fn": "OwnableUpgradeable.__Ownable_init",
        "offset": [
          4910,
          4923
        ],
        "op": "SWAP1",
        "path": "27"
      },
      "8567": {
        "fn": "OwnableUpgradeable.__Ownable_init",
        "offset": [
          4910,
          4923
        ],
        "op": "DIV",
        "path": "27"
      },
      "8568": {
        "fn": "OwnableUpgradeable.__Ownable_init",
        "offset": [
          4910,
          4923
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0xFF"
      },
      "8570": {
        "fn": "OwnableUpgradeable.__Ownable_init",
        "offset": [
          4910,
          4923
        ],
        "op": "AND",
        "path": "27"
      },
      "8571": {
        "offset": [
          4902,
          4971
        ],
        "op": "PUSH2",
        "path": "27",
        "value": "0x2196"
      },
      "8574": {
        "offset": [
          4902,
          4971
        ],
        "op": "JUMPI",
        "path": "27"
      },
      "8575": {
        "fn": "OwnableUpgradeable.__Ownable_init",
        "offset": [
          4902,
          4971
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0x40"
      },
      "8577": {
        "fn": "OwnableUpgradeable.__Ownable_init",
        "offset": [
          4902,
          4971
        ],
        "op": "MLOAD",
        "path": "27"
      },
      "8578": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "8582": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "8584": {
        "op": "SHL"
      },
      "8585": {
        "offset": [
          4902,
          4971
        ],
        "op": "DUP2",
        "path": "27"
      },
      "8586": {
        "fn": "OwnableUpgradeable.__Ownable_init",
        "offset": [
          4902,
          4971
        ],
        "op": "MSTORE",
        "path": "27"
      },
      "8587": {
        "fn": "OwnableUpgradeable.__Ownable_init",
        "offset": [
          4902,
          4971
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0x4"
      },
      "8589": {
        "fn": "OwnableUpgradeable.__Ownable_init",
        "offset": [
          4902,
          4971
        ],
        "op": "ADD",
        "path": "27"
      },
      "8590": {
        "fn": "OwnableUpgradeable.__Ownable_init",
        "offset": [
          4902,
          4971
        ],
        "op": "PUSH2",
        "path": "27",
        "value": "0x631"
      },
      "8593": {
        "fn": "OwnableUpgradeable.__Ownable_init",
        "offset": [
          4902,
          4971
        ],
        "op": "SWAP1",
        "path": "27"
      },
      "8594": {
        "fn": "OwnableUpgradeable.__Ownable_init",
        "offset": [
          4902,
          4971
        ],
        "op": "PUSH2",
        "path": "27",
        "value": "0x2DD8"
      },
      "8597": {
        "fn": "OwnableUpgradeable.__Ownable_init",
        "jump": "i",
        "offset": [
          4902,
          4971
        ],
        "op": "JUMP",
        "path": "27"
      },
      "8598": {
        "fn": "OwnableUpgradeable.__Ownable_init",
        "offset": [
          4902,
          4971
        ],
        "op": "JUMPDEST",
        "path": "27"
      },
      "8599": {
        "fn": "OwnableUpgradeable.__Ownable_init",
        "offset": [
          1065,
          1091
        ],
        "op": "PUSH2",
        "path": "26",
        "statement": 79,
        "value": "0xF35"
      },
      "8602": {
        "fn": "OwnableUpgradeable.__Ownable_init",
        "offset": [
          1065,
          1089
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x23BC"
      },
      "8605": {
        "fn": "OwnableUpgradeable.__Ownable_init",
        "jump": "i",
        "offset": [
          1065,
          1091
        ],
        "op": "JUMP",
        "path": "26"
      },
      "8606": {
        "fn": "PausableUpgradeable.__Pausable_init",
        "offset": [
          1063,
          1160
        ],
        "op": "JUMPDEST",
        "path": "28"
      },
      "8607": {
        "offset": [
          4910,
          4923
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0x0"
      },
      "8609": {
        "fn": "PausableUpgradeable.__Pausable_init",
        "offset": [
          4910,
          4923
        ],
        "op": "SLOAD",
        "path": "27"
      },
      "8610": {
        "fn": "PausableUpgradeable.__Pausable_init",
        "offset": [
          4910,
          4923
        ],
        "op": "PUSH2",
        "path": "27",
        "value": "0x100"
      },
      "8613": {
        "fn": "PausableUpgradeable.__Pausable_init",
        "offset": [
          4910,
          4923
        ],
        "op": "SWAP1",
        "path": "27"
      },
      "8614": {
        "fn": "PausableUpgradeable.__Pausable_init",
        "offset": [
          4910,
          4923
        ],
        "op": "DIV",
        "path": "27"
      },
      "8615": {
        "fn": "PausableUpgradeable.__Pausable_init",
        "offset": [
          4910,
          4923
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0xFF"
      },
      "8617": {
        "fn": "PausableUpgradeable.__Pausable_init",
        "offset": [
          4910,
          4923
        ],
        "op": "AND",
        "path": "27"
      },
      "8618": {
        "offset": [
          4902,
          4971
        ],
        "op": "PUSH2",
        "path": "27",
        "value": "0x21C5"
      },
      "8621": {
        "offset": [
          4902,
          4971
        ],
        "op": "JUMPI",
        "path": "27"
      },
      "8622": {
        "fn": "PausableUpgradeable.__Pausable_init",
        "offset": [
          4902,
          4971
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0x40"
      },
      "8624": {
        "fn": "PausableUpgradeable.__Pausable_init",
        "offset": [
          4902,
          4971
        ],
        "op": "MLOAD",
        "path": "27"
      },
      "8625": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "8629": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "8631": {
        "op": "SHL"
      },
      "8632": {
        "offset": [
          4902,
          4971
        ],
        "op": "DUP2",
        "path": "27"
      },
      "8633": {
        "fn": "PausableUpgradeable.__Pausable_init",
        "offset": [
          4902,
          4971
        ],
        "op": "MSTORE",
        "path": "27"
      },
      "8634": {
        "fn": "PausableUpgradeable.__Pausable_init",
        "offset": [
          4902,
          4971
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0x4"
      },
      "8636": {
        "fn": "PausableUpgradeable.__Pausable_init",
        "offset": [
          4902,
          4971
        ],
        "op": "ADD",
        "path": "27"
      },
      "8637": {
        "fn": "PausableUpgradeable.__Pausable_init",
        "offset": [
          4902,
          4971
        ],
        "op": "PUSH2",
        "path": "27",
        "value": "0x631"
      },
      "8640": {
        "fn": "PausableUpgradeable.__Pausable_init",
        "offset": [
          4902,
          4971
        ],
        "op": "SWAP1",
        "path": "27"
      },
      "8641": {
        "fn": "PausableUpgradeable.__Pausable_init",
        "offset": [
          4902,
          4971
        ],
        "op": "PUSH2",
        "path": "27",
        "value": "0x2DD8"
      },
      "8644": {
        "fn": "PausableUpgradeable.__Pausable_init",
        "jump": "i",
        "offset": [
          4902,
          4971
        ],
        "op": "JUMP",
        "path": "27"
      },
      "8645": {
        "fn": "PausableUpgradeable.__Pausable_init",
        "offset": [
          4902,
          4971
        ],
        "op": "JUMPDEST",
        "path": "27"
      },
      "8646": {
        "fn": "PausableUpgradeable.__Pausable_init",
        "offset": [
          1126,
          1153
        ],
        "op": "PUSH2",
        "path": "28",
        "statement": 80,
        "value": "0xF35"
      },
      "8649": {
        "fn": "PausableUpgradeable.__Pausable_init",
        "offset": [
          1126,
          1151
        ],
        "op": "PUSH2",
        "path": "28",
        "value": "0x23EC"
      },
      "8652": {
        "fn": "PausableUpgradeable.__Pausable_init",
        "jump": "i",
        "offset": [
          1126,
          1153
        ],
        "op": "JUMP",
        "path": "28"
      },
      "8653": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2673,
          2860
        ],
        "op": "JUMPDEST",
        "path": "26"
      },
      "8654": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2765,
          2771
        ],
        "op": "PUSH1",
        "path": "26",
        "value": "0x33"
      },
      "8656": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2765,
          2771
        ],
        "op": "DUP1",
        "path": "26"
      },
      "8657": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2765,
          2771
        ],
        "op": "SLOAD",
        "path": "26"
      },
      "8658": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8660": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8662": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "8664": {
        "op": "SHL"
      },
      "8665": {
        "op": "SUB"
      },
      "8666": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2781,
          2798
        ],
        "op": "DUP4",
        "path": "26",
        "statement": 81
      },
      "8667": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2781,
          2798
        ],
        "op": "DUP2",
        "path": "26"
      },
      "8668": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2781,
          2798
        ],
        "op": "AND",
        "path": "26"
      },
      "8669": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8671": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8673": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "8675": {
        "op": "SHL"
      },
      "8676": {
        "op": "SUB"
      },
      "8677": {
        "op": "NOT"
      },
      "8678": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2781,
          2798
        ],
        "op": "DUP4",
        "path": "26"
      },
      "8679": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2781,
          2798
        ],
        "op": "AND",
        "path": "26"
      },
      "8680": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2781,
          2798
        ],
        "op": "DUP2",
        "path": "26"
      },
      "8681": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2781,
          2798
        ],
        "op": "OR",
        "path": "26"
      },
      "8682": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2781,
          2798
        ],
        "op": "SWAP1",
        "path": "26"
      },
      "8683": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2781,
          2798
        ],
        "op": "SWAP4",
        "path": "26"
      },
      "8684": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2781,
          2798
        ],
        "op": "SSTORE",
        "path": "26"
      },
      "8685": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2813,
          2853
        ],
        "op": "PUSH1",
        "path": "26",
        "statement": 82,
        "value": "0x40"
      },
      "8687": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2813,
          2853
        ],
        "op": "MLOAD",
        "path": "26"
      },
      "8688": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2765,
          2771
        ],
        "op": "SWAP2",
        "path": "26"
      },
      "8689": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2765,
          2771
        ],
        "op": "AND",
        "path": "26"
      },
      "8690": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2765,
          2771
        ],
        "op": "SWAP2",
        "path": "26"
      },
      "8691": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2781,
          2798
        ],
        "op": "SWAP1",
        "path": "26"
      },
      "8692": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2765,
          2771
        ],
        "op": "DUP3",
        "path": "26"
      },
      "8693": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2765,
          2771
        ],
        "op": "SWAP1",
        "path": "26"
      },
      "8694": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2813,
          2853
        ],
        "op": "PUSH32",
        "path": "26",
        "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
      },
      "8727": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2813,
          2853
        ],
        "op": "SWAP1",
        "path": "26"
      },
      "8728": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2746,
          2762
        ],
        "op": "PUSH1",
        "path": "26",
        "value": "0x0"
      },
      "8730": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2746,
          2762
        ],
        "op": "SWAP1",
        "path": "26"
      },
      "8731": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2813,
          2853
        ],
        "op": "LOG3",
        "path": "26"
      },
      "8732": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2736,
          2860
        ],
        "op": "POP",
        "path": "26"
      },
      "8733": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "offset": [
          2673,
          2860
        ],
        "op": "POP",
        "path": "26"
      },
      "8734": {
        "fn": "OwnableUpgradeable._transferOwnership",
        "jump": "o",
        "offset": [
          2673,
          2860
        ],
        "op": "JUMP",
        "path": "26"
      },
      "8735": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          974,
          1215
        ],
        "op": "JUMPDEST",
        "path": "37"
      },
      "8736": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1139,
          1207
        ],
        "op": "PUSH1",
        "path": "37",
        "statement": 83,
        "value": "0x40"
      },
      "8738": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1139,
          1207
        ],
        "op": "MLOAD",
        "path": "37"
      },
      "8739": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8741": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8743": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "8745": {
        "op": "SHL"
      },
      "8746": {
        "op": "SUB"
      },
      "8747": {
        "op": "DUP1"
      },
      "8748": {
        "op": "DUP6"
      },
      "8749": {
        "op": "AND"
      },
      "8750": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1139,
          1207
        ],
        "op": "PUSH1",
        "path": "37",
        "value": "0x24"
      },
      "8752": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1139,
          1207
        ],
        "op": "DUP4",
        "path": "37"
      },
      "8753": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1139,
          1207
        ],
        "op": "ADD",
        "path": "37"
      },
      "8754": {
        "op": "MSTORE"
      },
      "8755": {
        "op": "DUP4"
      },
      "8756": {
        "op": "AND"
      },
      "8757": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "8759": {
        "op": "DUP3"
      },
      "8760": {
        "op": "ADD"
      },
      "8761": {
        "op": "MSTORE"
      },
      "8762": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "8764": {
        "op": "DUP2"
      },
      "8765": {
        "op": "ADD"
      },
      "8766": {
        "op": "DUP3"
      },
      "8767": {
        "op": "SWAP1"
      },
      "8768": {
        "op": "MSTORE"
      },
      "8769": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1112,
          1208
        ],
        "op": "PUSH2",
        "path": "37",
        "value": "0x2106"
      },
      "8772": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1112,
          1208
        ],
        "op": "SWAP1",
        "path": "37"
      },
      "8773": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1132,
          1137
        ],
        "op": "DUP6",
        "path": "37"
      },
      "8774": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1132,
          1137
        ],
        "op": "SWAP1",
        "path": "37"
      },
      "8775": {
        "op": "PUSH4",
        "value": "0x23B872DD"
      },
      "8780": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "8782": {
        "op": "SHL"
      },
      "8783": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1162,
          1189
        ],
        "op": "SWAP1",
        "path": "37"
      },
      "8784": {
        "op": "PUSH1",
        "value": "0x84"
      },
      "8786": {
        "op": "ADD"
      },
      "8787": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1139,
          1207
        ],
        "op": "PUSH2",
        "path": "37",
        "value": "0x2138"
      },
      "8790": {
        "op": "JUMP"
      },
      "8791": {
        "fn": "PausableUpgradeable._pause",
        "offset": [
          2429,
          2544
        ],
        "op": "JUMPDEST",
        "path": "28"
      },
      "8792": {
        "offset": [
          1482,
          1501
        ],
        "op": "PUSH2",
        "path": "28",
        "value": "0x225F"
      },
      "8795": {
        "offset": [
          1482,
          1499
        ],
        "op": "PUSH2",
        "path": "28",
        "value": "0x1F28"
      },
      "8798": {
        "jump": "i",
        "offset": [
          1482,
          1501
        ],
        "op": "JUMP",
        "path": "28"
      },
      "8799": {
        "fn": "PausableUpgradeable._pause",
        "offset": [
          1482,
          1501
        ],
        "op": "JUMPDEST",
        "path": "28"
      },
      "8800": {
        "fn": "PausableUpgradeable._pause",
        "offset": [
          2488,
          2495
        ],
        "op": "PUSH1",
        "path": "28",
        "statement": 84,
        "value": "0x65"
      },
      "8802": {
        "fn": "PausableUpgradeable._pause",
        "offset": [
          2488,
          2502
        ],
        "op": "DUP1",
        "path": "28"
      },
      "8803": {
        "fn": "PausableUpgradeable._pause",
        "offset": [
          2488,
          2502
        ],
        "op": "SLOAD",
        "path": "28"
      },
      "8804": {
        "op": "PUSH1",
        "value": "0xFF"
      },
      "8806": {
        "op": "NOT"
      },
      "8807": {
        "fn": "PausableUpgradeable._pause",
        "offset": [
          2488,
          2502
        ],
        "op": "AND",
        "path": "28"
      },
      "8808": {
        "fn": "PausableUpgradeable._pause",
        "offset": [
          2498,
          2502
        ],
        "op": "PUSH1",
        "path": "28",
        "value": "0x1"
      },
      "8810": {
        "fn": "PausableUpgradeable._pause",
        "offset": [
          2488,
          2502
        ],
        "op": "OR",
        "path": "28"
      },
      "8811": {
        "fn": "PausableUpgradeable._pause",
        "offset": [
          2488,
          2502
        ],
        "op": "SWAP1",
        "path": "28"
      },
      "8812": {
        "fn": "PausableUpgradeable._pause",
        "offset": [
          2488,
          2502
        ],
        "op": "SSTORE",
        "path": "28"
      },
      "8813": {
        "fn": "PausableUpgradeable._pause",
        "offset": [
          2517,
          2537
        ],
        "op": "PUSH32",
        "path": "28",
        "statement": 85,
        "value": "0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
      },
      "8846": {
        "fn": "PausableUpgradeable._pause",
        "offset": [
          2524,
          2536
        ],
        "op": "PUSH2",
        "path": "28",
        "value": "0x2294"
      },
      "8849": {
        "fn": "ContextUpgradeable._msgSender",
        "offset": [
          929,
          939
        ],
        "op": "CALLER",
        "path": "31"
      },
      "8850": {
        "fn": "ContextUpgradeable._msgSender",
        "offset": [
          929,
          939
        ],
        "op": "SWAP1",
        "path": "31"
      },
      "8851": {
        "fn": "ContextUpgradeable._msgSender",
        "offset": [
          850,
          946
        ],
        "op": "JUMP",
        "path": "31"
      },
      "8852": {
        "fn": "PausableUpgradeable._pause",
        "offset": [
          2524,
          2536
        ],
        "op": "JUMPDEST",
        "path": "28"
      },
      "8853": {
        "fn": "PausableUpgradeable._pause",
        "offset": [
          2517,
          2537
        ],
        "op": "PUSH1",
        "path": "28",
        "value": "0x40"
      },
      "8855": {
        "fn": "PausableUpgradeable._pause",
        "offset": [
          2517,
          2537
        ],
        "op": "MLOAD",
        "path": "28"
      },
      "8856": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8858": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8860": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "8862": {
        "op": "SHL"
      },
      "8863": {
        "op": "SUB"
      },
      "8864": {
        "op": "SWAP1"
      },
      "8865": {
        "op": "SWAP2"
      },
      "8866": {
        "op": "AND"
      },
      "8867": {
        "op": "DUP2"
      },
      "8868": {
        "op": "MSTORE"
      },
      "8869": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "8871": {
        "op": "ADD"
      },
      "8872": {
        "fn": "PausableUpgradeable._pause",
        "offset": [
          2517,
          2537
        ],
        "op": "PUSH1",
        "path": "28",
        "value": "0x40"
      },
      "8874": {
        "fn": "PausableUpgradeable._pause",
        "offset": [
          2517,
          2537
        ],
        "op": "MLOAD",
        "path": "28"
      },
      "8875": {
        "fn": "PausableUpgradeable._pause",
        "offset": [
          2517,
          2537
        ],
        "op": "DUP1",
        "path": "28"
      },
      "8876": {
        "fn": "PausableUpgradeable._pause",
        "offset": [
          2517,
          2537
        ],
        "op": "SWAP2",
        "path": "28"
      },
      "8877": {
        "fn": "PausableUpgradeable._pause",
        "offset": [
          2517,
          2537
        ],
        "op": "SUB",
        "path": "28"
      },
      "8878": {
        "fn": "PausableUpgradeable._pause",
        "offset": [
          2517,
          2537
        ],
        "op": "SWAP1",
        "path": "28"
      },
      "8879": {
        "fn": "PausableUpgradeable._pause",
        "offset": [
          2517,
          2537
        ],
        "op": "LOG1",
        "path": "28"
      },
      "8880": {
        "fn": "PausableUpgradeable._pause",
        "jump": "o",
        "offset": [
          2429,
          2544
        ],
        "op": "JUMP",
        "path": "28"
      },
      "8881": {
        "fn": "PausableUpgradeable._unpause",
        "offset": [
          2676,
          2793
        ],
        "op": "JUMPDEST",
        "path": "28"
      },
      "8882": {
        "offset": [
          1729,
          1745
        ],
        "op": "PUSH2",
        "path": "28",
        "value": "0x22B9"
      },
      "8885": {
        "offset": [
          1729,
          1743
        ],
        "op": "PUSH2",
        "path": "28",
        "value": "0x241F"
      },
      "8888": {
        "jump": "i",
        "offset": [
          1729,
          1745
        ],
        "op": "JUMP",
        "path": "28"
      },
      "8889": {
        "fn": "PausableUpgradeable._unpause",
        "offset": [
          1729,
          1745
        ],
        "op": "JUMPDEST",
        "path": "28"
      },
      "8890": {
        "fn": "PausableUpgradeable._unpause",
        "offset": [
          2734,
          2741
        ],
        "op": "PUSH1",
        "path": "28",
        "statement": 86,
        "value": "0x65"
      },
      "8892": {
        "fn": "PausableUpgradeable._unpause",
        "offset": [
          2734,
          2749
        ],
        "op": "DUP1",
        "path": "28"
      },
      "8893": {
        "fn": "PausableUpgradeable._unpause",
        "offset": [
          2734,
          2749
        ],
        "op": "SLOAD",
        "path": "28"
      },
      "8894": {
        "op": "PUSH1",
        "value": "0xFF"
      },
      "8896": {
        "op": "NOT"
      },
      "8897": {
        "fn": "PausableUpgradeable._unpause",
        "offset": [
          2734,
          2749
        ],
        "op": "AND",
        "path": "28"
      },
      "8898": {
        "fn": "PausableUpgradeable._unpause",
        "offset": [
          2734,
          2749
        ],
        "op": "SWAP1",
        "path": "28"
      },
      "8899": {
        "fn": "PausableUpgradeable._unpause",
        "offset": [
          2734,
          2749
        ],
        "op": "SSTORE",
        "path": "28"
      },
      "8900": {
        "fn": "PausableUpgradeable._unpause",
        "offset": [
          2764,
          2786
        ],
        "op": "PUSH32",
        "path": "28",
        "statement": 87,
        "value": "0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
      },
      "8933": {
        "fn": "ContextUpgradeable._msgSender",
        "offset": [
          929,
          939
        ],
        "op": "CALLER",
        "path": "31"
      },
      "8934": {
        "fn": "PausableUpgradeable._unpause",
        "offset": [
          2773,
          2785
        ],
        "op": "PUSH2",
        "path": "28",
        "value": "0x2294"
      },
      "8937": {
        "fn": "ContextUpgradeable._msgSender",
        "offset": [
          850,
          946
        ],
        "op": "JUMP",
        "path": "31"
      },
      "8938": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3747,
          4453
        ],
        "op": "JUMPDEST",
        "path": "37"
      },
      "8939": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4166,
          4189
        ],
        "op": "PUSH1",
        "path": "37",
        "value": "0x0"
      },
      "8941": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4261
        ],
        "op": "PUSH2",
        "path": "37",
        "value": "0x233F"
      },
      "8944": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4220,
          4224
        ],
        "op": "DUP3",
        "path": "37"
      },
      "8945": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4261
        ],
        "op": "PUSH1",
        "path": "37",
        "value": "0x40"
      },
      "8947": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4261
        ],
        "op": "MLOAD",
        "path": "37"
      },
      "8948": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4261
        ],
        "op": "DUP1",
        "path": "37"
      },
      "8949": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4261
        ],
        "op": "PUSH1",
        "path": "37",
        "value": "0x40"
      },
      "8951": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4261
        ],
        "op": "ADD",
        "path": "37"
      },
      "8952": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4261
        ],
        "op": "PUSH1",
        "path": "37",
        "value": "0x40"
      },
      "8954": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4261
        ],
        "op": "MSTORE",
        "path": "37"
      },
      "8955": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4261
        ],
        "op": "DUP1",
        "path": "37"
      },
      "8956": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4261
        ],
        "op": "PUSH1",
        "path": "37",
        "value": "0x20"
      },
      "8958": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4261
        ],
        "op": "DUP2",
        "path": "37"
      },
      "8959": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4261
        ],
        "op": "MSTORE",
        "path": "37"
      },
      "8960": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4261
        ],
        "op": "PUSH1",
        "path": "37",
        "value": "0x20"
      },
      "8962": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4261
        ],
        "op": "ADD",
        "path": "37"
      },
      "8963": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4261
        ],
        "op": "PUSH32",
        "path": "37",
        "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
      },
      "8996": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4261
        ],
        "op": "DUP2",
        "path": "37"
      },
      "8997": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4261
        ],
        "op": "MSTORE",
        "path": "37"
      },
      "8998": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4261
        ],
        "op": "POP",
        "path": "37"
      },
      "8999": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4200,
          4205
        ],
        "op": "DUP6",
        "path": "37"
      },
      "9000": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9002": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9004": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "9006": {
        "op": "SHL"
      },
      "9007": {
        "op": "SUB"
      },
      "9008": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4219
        ],
        "op": "AND",
        "path": "37"
      },
      "9009": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4219
        ],
        "op": "PUSH2",
        "path": "37",
        "value": "0x2468"
      },
      "9012": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4219
        ],
        "op": "SWAP1",
        "path": "37"
      },
      "9013": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4261
        ],
        "op": "SWAP3",
        "path": "37"
      },
      "9014": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4261
        ],
        "op": "SWAP2",
        "path": "37"
      },
      "9015": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4261
        ],
        "op": "SWAP1",
        "path": "37"
      },
      "9016": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4261
        ],
        "op": "PUSH4",
        "path": "37",
        "value": "0xFFFFFFFF"
      },
      "9021": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4261
        ],
        "op": "AND",
        "path": "37"
      },
      "9022": {
        "fn": "SafeERC20._callOptionalReturn",
        "jump": "i",
        "offset": [
          4192,
          4261
        ],
        "op": "JUMP",
        "path": "37"
      },
      "9023": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4192,
          4261
        ],
        "op": "JUMPDEST",
        "path": "37"
      },
      "9024": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4275,
          4292
        ],
        "op": "DUP1",
        "path": "37"
      },
      "9025": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4275,
          4292
        ],
        "op": "MLOAD",
        "path": "37"
      },
      "9026": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4166,
          4261
        ],
        "op": "SWAP1",
        "path": "37"
      },
      "9027": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4166,
          4261
        ],
        "op": "SWAP2",
        "path": "37"
      },
      "9028": {
        "op": "POP"
      },
      "9029": {
        "branch": 136,
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4275,
          4296
        ],
        "op": "ISZERO",
        "path": "37"
      },
      "9030": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4271,
          4447
        ],
        "op": "PUSH2",
        "path": "37",
        "value": "0xDE6"
      },
      "9033": {
        "branch": 136,
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4271,
          4447
        ],
        "op": "JUMPI",
        "path": "37"
      },
      "9034": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4370,
          4380
        ],
        "op": "DUP1",
        "path": "37",
        "statement": 88
      },
      "9035": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4359,
          4389
        ],
        "op": "DUP1",
        "path": "37"
      },
      "9036": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4359,
          4389
        ],
        "op": "PUSH1",
        "path": "37",
        "value": "0x20"
      },
      "9038": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4359,
          4389
        ],
        "op": "ADD",
        "path": "37"
      },
      "9039": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4359,
          4389
        ],
        "op": "SWAP1",
        "path": "37"
      },
      "9040": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4359,
          4389
        ],
        "op": "MLOAD",
        "path": "37"
      },
      "9041": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4359,
          4389
        ],
        "op": "DUP2",
        "path": "37"
      },
      "9042": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4359,
          4389
        ],
        "op": "ADD",
        "path": "37"
      },
      "9043": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4359,
          4389
        ],
        "op": "SWAP1",
        "path": "37"
      },
      "9044": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4359,
          4389
        ],
        "op": "PUSH2",
        "path": "37",
        "value": "0x235D"
      },
      "9047": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4359,
          4389
        ],
        "op": "SWAP2",
        "path": "37"
      },
      "9048": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4359,
          4389
        ],
        "op": "SWAP1",
        "path": "37"
      },
      "9049": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4359,
          4389
        ],
        "op": "PUSH2",
        "path": "37",
        "value": "0x2E23"
      },
      "9052": {
        "fn": "SafeERC20._callOptionalReturn",
        "jump": "i",
        "offset": [
          4359,
          4389
        ],
        "op": "JUMP",
        "path": "37"
      },
      "9053": {
        "branch": 137,
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4359,
          4389
        ],
        "op": "JUMPDEST",
        "path": "37"
      },
      "9054": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4351,
          4436
        ],
        "op": "PUSH2",
        "path": "37",
        "value": "0xDE6"
      },
      "9057": {
        "branch": 137,
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4351,
          4436
        ],
        "op": "JUMPI",
        "path": "37"
      },
      "9058": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4351,
          4436
        ],
        "op": "PUSH1",
        "path": "37",
        "value": "0x40"
      },
      "9060": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4351,
          4436
        ],
        "op": "MLOAD",
        "path": "37"
      },
      "9061": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "9065": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "9067": {
        "op": "SHL"
      },
      "9068": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4351,
          4436
        ],
        "op": "DUP2",
        "path": "37"
      },
      "9069": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4351,
          4436
        ],
        "op": "MSTORE",
        "path": "37"
      },
      "9070": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "9072": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4351,
          4436
        ],
        "op": "PUSH1",
        "path": "37",
        "value": "0x4"
      },
      "9074": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4351,
          4436
        ],
        "op": "DUP3",
        "path": "37"
      },
      "9075": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4351,
          4436
        ],
        "op": "ADD",
        "path": "37"
      },
      "9076": {
        "op": "MSTORE"
      },
      "9077": {
        "op": "PUSH1",
        "value": "0x2A"
      },
      "9079": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "9081": {
        "op": "DUP3"
      },
      "9082": {
        "op": "ADD"
      },
      "9083": {
        "op": "MSTORE"
      },
      "9084": {
        "op": "PUSH32",
        "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
      },
      "9117": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "9119": {
        "op": "DUP3"
      },
      "9120": {
        "op": "ADD"
      },
      "9121": {
        "op": "MSTORE"
      },
      "9122": {
        "op": "PUSH10",
        "value": "0x1BDD081CDD58D8D95959"
      },
      "9133": {
        "op": "PUSH1",
        "value": "0xB2"
      },
      "9135": {
        "op": "SHL"
      },
      "9136": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "9138": {
        "op": "DUP3"
      },
      "9139": {
        "op": "ADD"
      },
      "9140": {
        "op": "MSTORE"
      },
      "9141": {
        "op": "PUSH1",
        "value": "0x84"
      },
      "9143": {
        "op": "ADD"
      },
      "9144": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          4351,
          4436
        ],
        "op": "PUSH2",
        "path": "37",
        "value": "0x631"
      },
      "9147": {
        "op": "JUMP"
      },
      "9148": {
        "fn": "OwnableUpgradeable.__Ownable_init_unchained",
        "offset": [
          1104,
          1215
        ],
        "op": "JUMPDEST",
        "path": "26"
      },
      "9149": {
        "offset": [
          4910,
          4923
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0x0"
      },
      "9151": {
        "fn": "OwnableUpgradeable.__Ownable_init_unchained",
        "offset": [
          4910,
          4923
        ],
        "op": "SLOAD",
        "path": "27"
      },
      "9152": {
        "fn": "OwnableUpgradeable.__Ownable_init_unchained",
        "offset": [
          4910,
          4923
        ],
        "op": "PUSH2",
        "path": "27",
        "value": "0x100"
      },
      "9155": {
        "fn": "OwnableUpgradeable.__Ownable_init_unchained",
        "offset": [
          4910,
          4923
        ],
        "op": "SWAP1",
        "path": "27"
      },
      "9156": {
        "fn": "OwnableUpgradeable.__Ownable_init_unchained",
        "offset": [
          4910,
          4923
        ],
        "op": "DIV",
        "path": "27"
      },
      "9157": {
        "fn": "OwnableUpgradeable.__Ownable_init_unchained",
        "offset": [
          4910,
          4923
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0xFF"
      },
      "9159": {
        "fn": "OwnableUpgradeable.__Ownable_init_unchained",
        "offset": [
          4910,
          4923
        ],
        "op": "AND",
        "path": "27"
      },
      "9160": {
        "offset": [
          4902,
          4971
        ],
        "op": "PUSH2",
        "path": "27",
        "value": "0x23E3"
      },
      "9163": {
        "offset": [
          4902,
          4971
        ],
        "op": "JUMPI",
        "path": "27"
      },
      "9164": {
        "fn": "OwnableUpgradeable.__Ownable_init_unchained",
        "offset": [
          4902,
          4971
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0x40"
      },
      "9166": {
        "fn": "OwnableUpgradeable.__Ownable_init_unchained",
        "offset": [
          4902,
          4971
        ],
        "op": "MLOAD",
        "path": "27"
      },
      "9167": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "9171": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "9173": {
        "op": "SHL"
      },
      "9174": {
        "offset": [
          4902,
          4971
        ],
        "op": "DUP2",
        "path": "27"
      },
      "9175": {
        "fn": "OwnableUpgradeable.__Ownable_init_unchained",
        "offset": [
          4902,
          4971
        ],
        "op": "MSTORE",
        "path": "27"
      },
      "9176": {
        "fn": "OwnableUpgradeable.__Ownable_init_unchained",
        "offset": [
          4902,
          4971
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0x4"
      },
      "9178": {
        "fn": "OwnableUpgradeable.__Ownable_init_unchained",
        "offset": [
          4902,
          4971
        ],
        "op": "ADD",
        "path": "27"
      },
      "9179": {
        "fn": "OwnableUpgradeable.__Ownable_init_unchained",
        "offset": [
          4902,
          4971
        ],
        "op": "PUSH2",
        "path": "27",
        "value": "0x631"
      },
      "9182": {
        "fn": "OwnableUpgradeable.__Ownable_init_unchained",
        "offset": [
          4902,
          4971
        ],
        "op": "SWAP1",
        "path": "27"
      },
      "9183": {
        "fn": "OwnableUpgradeable.__Ownable_init_unchained",
        "offset": [
          4902,
          4971
        ],
        "op": "PUSH2",
        "path": "27",
        "value": "0x2DD8"
      },
      "9186": {
        "fn": "OwnableUpgradeable.__Ownable_init_unchained",
        "jump": "i",
        "offset": [
          4902,
          4971
        ],
        "op": "JUMP",
        "path": "27"
      },
      "9187": {
        "fn": "OwnableUpgradeable.__Ownable_init_unchained",
        "offset": [
          4902,
          4971
        ],
        "op": "JUMPDEST",
        "path": "27"
      },
      "9188": {
        "fn": "OwnableUpgradeable.__Ownable_init_unchained",
        "offset": [
          1176,
          1208
        ],
        "op": "PUSH2",
        "path": "26",
        "statement": 89,
        "value": "0xF35"
      },
      "9191": {
        "fn": "ContextUpgradeable._msgSender",
        "offset": [
          929,
          939
        ],
        "op": "CALLER",
        "path": "31"
      },
      "9192": {
        "fn": "OwnableUpgradeable.__Ownable_init_unchained",
        "offset": [
          1176,
          1194
        ],
        "op": "PUSH2",
        "path": "26",
        "value": "0x21CD"
      },
      "9195": {
        "fn": "OwnableUpgradeable.__Ownable_init_unchained",
        "jump": "i",
        "offset": [
          1176,
          1208
        ],
        "op": "JUMP",
        "path": "26"
      },
      "9196": {
        "fn": "PausableUpgradeable.__Pausable_init_unchained",
        "offset": [
          1166,
          1261
        ],
        "op": "JUMPDEST",
        "path": "28"
      },
      "9197": {
        "offset": [
          4910,
          4923
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0x0"
      },
      "9199": {
        "fn": "PausableUpgradeable.__Pausable_init_unchained",
        "offset": [
          4910,
          4923
        ],
        "op": "SLOAD",
        "path": "27"
      },
      "9200": {
        "fn": "PausableUpgradeable.__Pausable_init_unchained",
        "offset": [
          4910,
          4923
        ],
        "op": "PUSH2",
        "path": "27",
        "value": "0x100"
      },
      "9203": {
        "fn": "PausableUpgradeable.__Pausable_init_unchained",
        "offset": [
          4910,
          4923
        ],
        "op": "SWAP1",
        "path": "27"
      },
      "9204": {
        "fn": "PausableUpgradeable.__Pausable_init_unchained",
        "offset": [
          4910,
          4923
        ],
        "op": "DIV",
        "path": "27"
      },
      "9205": {
        "fn": "PausableUpgradeable.__Pausable_init_unchained",
        "offset": [
          4910,
          4923
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0xFF"
      },
      "9207": {
        "branch": 132,
        "fn": "PausableUpgradeable.__Pausable_init_unchained",
        "offset": [
          4910,
          4923
        ],
        "op": "AND",
        "path": "27"
      },
      "9208": {
        "offset": [
          4902,
          4971
        ],
        "op": "PUSH2",
        "path": "27",
        "value": "0x2413"
      },
      "9211": {
        "branch": 132,
        "offset": [
          4902,
          4971
        ],
        "op": "JUMPI",
        "path": "27"
      },
      "9212": {
        "fn": "PausableUpgradeable.__Pausable_init_unchained",
        "offset": [
          4902,
          4971
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0x40"
      },
      "9214": {
        "fn": "PausableUpgradeable.__Pausable_init_unchained",
        "offset": [
          4902,
          4971
        ],
        "op": "MLOAD",
        "path": "27"
      },
      "9215": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "9219": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "9221": {
        "op": "SHL"
      },
      "9222": {
        "offset": [
          4902,
          4971
        ],
        "op": "DUP2",
        "path": "27"
      },
      "9223": {
        "fn": "PausableUpgradeable.__Pausable_init_unchained",
        "offset": [
          4902,
          4971
        ],
        "op": "MSTORE",
        "path": "27"
      },
      "9224": {
        "fn": "PausableUpgradeable.__Pausable_init_unchained",
        "offset": [
          4902,
          4971
        ],
        "op": "PUSH1",
        "path": "27",
        "value": "0x4"
      },
      "9226": {
        "fn": "PausableUpgradeable.__Pausable_init_unchained",
        "offset": [
          4902,
          4971
        ],
        "op": "ADD",
        "path": "27"
      },
      "9227": {
        "fn": "PausableUpgradeable.__Pausable_init_unchained",
        "offset": [
          4902,
          4971
        ],
        "op": "PUSH2",
        "path": "27",
        "value": "0x631"
      },
      "9230": {
        "fn": "PausableUpgradeable.__Pausable_init_unchained",
        "offset": [
          4902,
          4971
        ],
        "op": "SWAP1",
        "path": "27"
      },
      "9231": {
        "fn": "PausableUpgradeable.__Pausable_init_unchained",
        "offset": [
          4902,
          4971
        ],
        "op": "PUSH2",
        "path": "27",
        "value": "0x2DD8"
      },
      "9234": {
        "fn": "PausableUpgradeable.__Pausable_init_unchained",
        "jump": "i",
        "offset": [
          4902,
          4971
        ],
        "op": "JUMP",
        "path": "27"
      },
      "9235": {
        "fn": "PausableUpgradeable.__Pausable_init_unchained",
        "offset": [
          4902,
          4971
        ],
        "op": "JUMPDEST",
        "path": "27"
      },
      "9236": {
        "fn": "PausableUpgradeable.__Pausable_init_unchained",
        "offset": [
          1239,
          1246
        ],
        "op": "PUSH1",
        "path": "28",
        "statement": 90,
        "value": "0x65"
      },
      "9238": {
        "fn": "PausableUpgradeable.__Pausable_init_unchained",
        "offset": [
          1239,
          1254
        ],
        "op": "DUP1",
        "path": "28"
      },
      "9239": {
        "fn": "PausableUpgradeable.__Pausable_init_unchained",
        "offset": [
          1239,
          1254
        ],
        "op": "SLOAD",
        "path": "28"
      },
      "9240": {
        "op": "PUSH1",
        "value": "0xFF"
      },
      "9242": {
        "op": "NOT"
      },
      "9243": {
        "fn": "PausableUpgradeable.__Pausable_init_unchained",
        "offset": [
          1239,
          1254
        ],
        "op": "AND",
        "path": "28"
      },
      "9244": {
        "fn": "PausableUpgradeable.__Pausable_init_unchained",
        "offset": [
          1239,
          1254
        ],
        "op": "SWAP1",
        "path": "28"
      },
      "9245": {
        "fn": "PausableUpgradeable.__Pausable_init_unchained",
        "offset": [
          1239,
          1254
        ],
        "op": "SSTORE",
        "path": "28"
      },
      "9246": {
        "fn": "PausableUpgradeable.__Pausable_init_unchained",
        "jump": "o",
        "offset": [
          1166,
          1261
        ],
        "op": "JUMP",
        "path": "28"
      },
      "9247": {
        "fn": "PausableUpgradeable._requirePaused",
        "offset": [
          2188,
          2294
        ],
        "op": "JUMPDEST",
        "path": "28"
      },
      "9248": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1928,
          1935
        ],
        "op": "PUSH1",
        "path": "28",
        "value": "0x65"
      },
      "9250": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1928,
          1935
        ],
        "op": "SLOAD",
        "path": "28"
      },
      "9251": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1928,
          1935
        ],
        "op": "PUSH1",
        "path": "28",
        "value": "0xFF"
      },
      "9253": {
        "fn": "PausableUpgradeable.paused",
        "offset": [
          1928,
          1935
        ],
        "op": "AND",
        "path": "28"
      },
      "9254": {
        "fn": "PausableUpgradeable._requirePaused",
        "offset": [
          2246,
          2287
        ],
        "op": "PUSH2",
        "path": "28",
        "statement": 91,
        "value": "0xF35"
      },
      "9257": {
        "fn": "PausableUpgradeable._requirePaused",
        "offset": [
          2246,
          2287
        ],
        "op": "JUMPI",
        "path": "28"
      },
      "9258": {
        "fn": "PausableUpgradeable._requirePaused",
        "offset": [
          2246,
          2287
        ],
        "op": "PUSH1",
        "path": "28",
        "value": "0x40"
      },
      "9260": {
        "fn": "PausableUpgradeable._requirePaused",
        "offset": [
          2246,
          2287
        ],
        "op": "MLOAD",
        "path": "28"
      },
      "9261": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "9265": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "9267": {
        "op": "SHL"
      },
      "9268": {
        "fn": "PausableUpgradeable._requirePaused",
        "offset": [
          2246,
          2287
        ],
        "op": "DUP2",
        "path": "28"
      },
      "9269": {
        "fn": "PausableUpgradeable._requirePaused",
        "offset": [
          2246,
          2287
        ],
        "op": "MSTORE",
        "path": "28"
      },
      "9270": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "9272": {
        "fn": "PausableUpgradeable._requirePaused",
        "offset": [
          2246,
          2287
        ],
        "op": "PUSH1",
        "path": "28",
        "value": "0x4"
      },
      "9274": {
        "fn": "PausableUpgradeable._requirePaused",
        "offset": [
          2246,
          2287
        ],
        "op": "DUP3",
        "path": "28"
      },
      "9275": {
        "fn": "PausableUpgradeable._requirePaused",
        "offset": [
          2246,
          2287
        ],
        "op": "ADD",
        "path": "28"
      },
      "9276": {
        "op": "MSTORE"
      },
      "9277": {
        "op": "PUSH1",
        "value": "0x14"
      },
      "9279": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "9281": {
        "op": "DUP3"
      },
      "9282": {
        "op": "ADD"
      },
      "9283": {
        "op": "MSTORE"
      },
      "9284": {
        "op": "PUSH20",
        "value": "0x14185D5CD8589B194E881B9BDD081C185D5CD959"
      },
      "9305": {
        "op": "PUSH1",
        "value": "0x62"
      },
      "9307": {
        "op": "SHL"
      },
      "9308": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "9310": {
        "op": "DUP3"
      },
      "9311": {
        "op": "ADD"
      },
      "9312": {
        "op": "MSTORE"
      },
      "9313": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "9315": {
        "op": "ADD"
      },
      "9316": {
        "fn": "PausableUpgradeable._requirePaused",
        "offset": [
          2246,
          2287
        ],
        "op": "PUSH2",
        "path": "28",
        "value": "0x631"
      },
      "9319": {
        "op": "JUMP"
      },
      "9320": {
        "fn": "Address.functionCall",
        "offset": [
          3861,
          4084
        ],
        "op": "JUMPDEST",
        "path": "42"
      },
      "9321": {
        "fn": "Address.functionCall",
        "offset": [
          3994,
          4006
        ],
        "op": "PUSH1",
        "path": "42",
        "value": "0x60"
      },
      "9323": {
        "fn": "Address.functionCall",
        "offset": [
          4025,
          4077
        ],
        "op": "PUSH2",
        "path": "42",
        "statement": 92,
        "value": "0x2477"
      },
      "9326": {
        "fn": "Address.functionCall",
        "offset": [
          4047,
          4053
        ],
        "op": "DUP5",
        "path": "42"
      },
      "9327": {
        "fn": "Address.functionCall",
        "offset": [
          4055,
          4059
        ],
        "op": "DUP5",
        "path": "42"
      },
      "9328": {
        "fn": "Address.functionCall",
        "offset": [
          4061,
          4062
        ],
        "op": "PUSH1",
        "path": "42",
        "value": "0x0"
      },
      "9330": {
        "fn": "Address.functionCall",
        "offset": [
          4064,
          4076
        ],
        "op": "DUP6",
        "path": "42"
      },
      "9331": {
        "fn": "Address.functionCall",
        "offset": [
          4025,
          4046
        ],
        "op": "PUSH2",
        "path": "42",
        "value": "0x247F"
      },
      "9334": {
        "fn": "Address.functionCall",
        "jump": "i",
        "offset": [
          4025,
          4077
        ],
        "op": "JUMP",
        "path": "42"
      },
      "9335": {
        "fn": "Address.functionCall",
        "offset": [
          4025,
          4077
        ],
        "op": "JUMPDEST",
        "path": "42"
      },
      "9336": {
        "fn": "Address.functionCall",
        "offset": [
          4018,
          4077
        ],
        "op": "SWAP5",
        "path": "42"
      },
      "9337": {
        "fn": "Address.functionCall",
        "offset": [
          3861,
          4084
        ],
        "op": "SWAP4",
        "path": "42"
      },
      "9338": {
        "op": "POP"
      },
      "9339": {
        "op": "POP"
      },
      "9340": {
        "op": "POP"
      },
      "9341": {
        "op": "POP"
      },
      "9342": {
        "fn": "Address.functionCall",
        "jump": "o",
        "offset": [
          3861,
          4084
        ],
        "op": "JUMP",
        "path": "42"
      },
      "9343": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          4948,
          5447
        ],
        "op": "JUMPDEST",
        "path": "42"
      },
      "9344": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5113,
          5125
        ],
        "op": "PUSH1",
        "path": "42",
        "value": "0x60"
      },
      "9346": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5170,
          5175
        ],
        "op": "DUP3",
        "path": "42",
        "statement": 93
      },
      "9347": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5145,
          5166
        ],
        "op": "SELFBALANCE",
        "path": "42"
      },
      "9348": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5145,
          5175
        ],
        "op": "LT",
        "path": "42"
      },
      "9349": {
        "branch": 129,
        "fn": "Address.functionCallWithValue",
        "offset": [
          5145,
          5175
        ],
        "op": "ISZERO",
        "path": "42"
      },
      "9350": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5137,
          5218
        ],
        "op": "PUSH2",
        "path": "42",
        "value": "0x24E0"
      },
      "9353": {
        "branch": 129,
        "fn": "Address.functionCallWithValue",
        "offset": [
          5137,
          5218
        ],
        "op": "JUMPI",
        "path": "42"
      },
      "9354": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5137,
          5218
        ],
        "op": "PUSH1",
        "path": "42",
        "value": "0x40"
      },
      "9356": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5137,
          5218
        ],
        "op": "MLOAD",
        "path": "42"
      },
      "9357": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "9361": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "9363": {
        "op": "SHL"
      },
      "9364": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5137,
          5218
        ],
        "op": "DUP2",
        "path": "42"
      },
      "9365": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5137,
          5218
        ],
        "op": "MSTORE",
        "path": "42"
      },
      "9366": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "9368": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5137,
          5218
        ],
        "op": "PUSH1",
        "path": "42",
        "value": "0x4"
      },
      "9370": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5137,
          5218
        ],
        "op": "DUP3",
        "path": "42"
      },
      "9371": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5137,
          5218
        ],
        "op": "ADD",
        "path": "42"
      },
      "9372": {
        "op": "MSTORE"
      },
      "9373": {
        "op": "PUSH1",
        "value": "0x26"
      },
      "9375": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "9377": {
        "op": "DUP3"
      },
      "9378": {
        "op": "ADD"
      },
      "9379": {
        "op": "MSTORE"
      },
      "9380": {
        "op": "PUSH32",
        "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
      },
      "9413": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "9415": {
        "op": "DUP3"
      },
      "9416": {
        "op": "ADD"
      },
      "9417": {
        "op": "MSTORE"
      },
      "9418": {
        "op": "PUSH6",
        "value": "0x1C8818D85B1B"
      },
      "9425": {
        "op": "PUSH1",
        "value": "0xD2"
      },
      "9427": {
        "op": "SHL"
      },
      "9428": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "9430": {
        "op": "DUP3"
      },
      "9431": {
        "op": "ADD"
      },
      "9432": {
        "op": "MSTORE"
      },
      "9433": {
        "op": "PUSH1",
        "value": "0x84"
      },
      "9435": {
        "op": "ADD"
      },
      "9436": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5137,
          5218
        ],
        "op": "PUSH2",
        "path": "42",
        "value": "0x631"
      },
      "9439": {
        "op": "JUMP"
      },
      "9440": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5137,
          5218
        ],
        "op": "JUMPDEST",
        "path": "42"
      },
      "9441": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9443": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9445": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "9447": {
        "op": "SHL"
      },
      "9448": {
        "op": "SUB"
      },
      "9449": {
        "op": "DUP6"
      },
      "9450": {
        "op": "AND"
      },
      "9451": {
        "op": "EXTCODESIZE"
      },
      "9452": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5228,
          5288
        ],
        "op": "PUSH2",
        "path": "42",
        "statement": 94,
        "value": "0x2537"
      },
      "9455": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5228,
          5288
        ],
        "op": "JUMPI",
        "path": "42"
      },
      "9456": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5228,
          5288
        ],
        "op": "PUSH1",
        "path": "42",
        "value": "0x40"
      },
      "9458": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5228,
          5288
        ],
        "op": "MLOAD",
        "path": "42"
      },
      "9459": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "9463": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "9465": {
        "op": "SHL"
      },
      "9466": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5228,
          5288
        ],
        "op": "DUP2",
        "path": "42"
      },
      "9467": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5228,
          5288
        ],
        "op": "MSTORE",
        "path": "42"
      },
      "9468": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "9470": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5228,
          5288
        ],
        "op": "PUSH1",
        "path": "42",
        "value": "0x4"
      },
      "9472": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5228,
          5288
        ],
        "op": "DUP3",
        "path": "42"
      },
      "9473": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5228,
          5288
        ],
        "op": "ADD",
        "path": "42"
      },
      "9474": {
        "op": "MSTORE"
      },
      "9475": {
        "op": "PUSH1",
        "value": "0x1D"
      },
      "9477": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "9479": {
        "op": "DUP3"
      },
      "9480": {
        "op": "ADD"
      },
      "9481": {
        "op": "MSTORE"
      },
      "9482": {
        "op": "PUSH32",
        "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
      },
      "9515": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "9517": {
        "op": "DUP3"
      },
      "9518": {
        "op": "ADD"
      },
      "9519": {
        "op": "MSTORE"
      },
      "9520": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "9522": {
        "op": "ADD"
      },
      "9523": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5228,
          5288
        ],
        "op": "PUSH2",
        "path": "42",
        "value": "0x631"
      },
      "9526": {
        "op": "JUMP"
      },
      "9527": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5228,
          5288
        ],
        "op": "JUMPDEST",
        "path": "42"
      },
      "9528": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5300,
          5312
        ],
        "op": "PUSH1",
        "path": "42",
        "value": "0x0"
      },
      "9530": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5314,
          5337
        ],
        "op": "DUP1",
        "path": "42"
      },
      "9531": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5347
        ],
        "op": "DUP7",
        "path": "42"
      },
      "9532": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9534": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9536": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "9538": {
        "op": "SHL"
      },
      "9539": {
        "op": "SUB"
      },
      "9540": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5352
        ],
        "op": "AND",
        "path": "42"
      },
      "9541": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5360,
          5365
        ],
        "op": "DUP6",
        "path": "42"
      },
      "9542": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5367,
          5371
        ],
        "op": "DUP8",
        "path": "42"
      },
      "9543": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH1",
        "path": "42",
        "value": "0x40"
      },
      "9545": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "MLOAD",
        "path": "42"
      },
      "9546": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH2",
        "path": "42",
        "value": "0x2553"
      },
      "9549": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "SWAP2",
        "path": "42"
      },
      "9550": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "SWAP1",
        "path": "42"
      },
      "9551": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH2",
        "path": "42",
        "value": "0x2E6C"
      },
      "9554": {
        "fn": "Address.functionCallWithValue",
        "jump": "i",
        "offset": [
          5341,
          5372
        ],
        "op": "JUMP",
        "path": "42"
      },
      "9555": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "JUMPDEST",
        "path": "42"
      },
      "9556": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH1",
        "path": "42",
        "value": "0x0"
      },
      "9558": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH1",
        "path": "42",
        "value": "0x40"
      },
      "9560": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "MLOAD",
        "path": "42"
      },
      "9561": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "DUP1",
        "path": "42"
      },
      "9562": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "DUP4",
        "path": "42"
      },
      "9563": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "SUB",
        "path": "42"
      },
      "9564": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "DUP2",
        "path": "42"
      },
      "9565": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "DUP6",
        "path": "42"
      },
      "9566": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "DUP8",
        "path": "42"
      },
      "9567": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "GAS",
        "path": "42"
      },
      "9568": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "CALL",
        "path": "42"
      },
      "9569": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "SWAP3",
        "path": "42"
      },
      "9570": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "POP",
        "path": "42"
      },
      "9571": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "POP",
        "path": "42"
      },
      "9572": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "POP",
        "path": "42"
      },
      "9573": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "RETURNDATASIZE",
        "path": "42"
      },
      "9574": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "DUP1",
        "path": "42"
      },
      "9575": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH1",
        "path": "42",
        "value": "0x0"
      },
      "9577": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "DUP2",
        "path": "42"
      },
      "9578": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "EQ",
        "path": "42"
      },
      "9579": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH2",
        "path": "42",
        "value": "0x2590"
      },
      "9582": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "JUMPI",
        "path": "42"
      },
      "9583": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH1",
        "path": "42",
        "value": "0x40"
      },
      "9585": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "MLOAD",
        "path": "42"
      },
      "9586": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "SWAP2",
        "path": "42"
      },
      "9587": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "POP",
        "path": "42"
      },
      "9588": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH1",
        "path": "42",
        "value": "0x1F"
      },
      "9590": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "NOT",
        "path": "42"
      },
      "9591": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH1",
        "path": "42",
        "value": "0x3F"
      },
      "9593": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "RETURNDATASIZE",
        "path": "42"
      },
      "9594": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "ADD",
        "path": "42"
      },
      "9595": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "AND",
        "path": "42"
      },
      "9596": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "DUP3",
        "path": "42"
      },
      "9597": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "ADD",
        "path": "42"
      },
      "9598": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH1",
        "path": "42",
        "value": "0x40"
      },
      "9600": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "MSTORE",
        "path": "42"
      },
      "9601": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "RETURNDATASIZE",
        "path": "42"
      },
      "9602": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "DUP3",
        "path": "42"
      },
      "9603": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "MSTORE",
        "path": "42"
      },
      "9604": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "RETURNDATASIZE",
        "path": "42"
      },
      "9605": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH1",
        "path": "42",
        "value": "0x0"
      },
      "9607": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH1",
        "path": "42",
        "value": "0x20"
      },
      "9609": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "DUP5",
        "path": "42"
      },
      "9610": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "ADD",
        "path": "42"
      },
      "9611": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "RETURNDATACOPY",
        "path": "42"
      },
      "9612": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH2",
        "path": "42",
        "value": "0x2595"
      },
      "9615": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "JUMP",
        "path": "42"
      },
      "9616": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "JUMPDEST",
        "path": "42"
      },
      "9617": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH1",
        "path": "42",
        "value": "0x60"
      },
      "9619": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "SWAP2",
        "path": "42"
      },
      "9620": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "POP",
        "path": "42"
      },
      "9621": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "JUMPDEST",
        "path": "42"
      },
      "9622": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "POP",
        "path": "42"
      },
      "9623": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5299,
          5372
        ],
        "op": "SWAP2",
        "path": "42"
      },
      "9624": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5299,
          5372
        ],
        "op": "POP",
        "path": "42"
      },
      "9625": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5299,
          5372
        ],
        "op": "SWAP2",
        "path": "42"
      },
      "9626": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5299,
          5372
        ],
        "op": "POP",
        "path": "42"
      },
      "9627": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5389,
          5440
        ],
        "op": "PUSH2",
        "path": "42",
        "statement": 95,
        "value": "0x1A4E"
      },
      "9630": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5406,
          5413
        ],
        "op": "DUP3",
        "path": "42"
      },
      "9631": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5415,
          5425
        ],
        "op": "DUP3",
        "path": "42"
      },
      "9632": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5427,
          5439
        ],
        "op": "DUP7",
        "path": "42"
      },
      "9633": {
        "fn": "Address.verifyCallResult",
        "offset": [
          7707,
          7719
        ],
        "op": "PUSH1",
        "path": "42",
        "value": "0x60"
      },
      "9635": {
        "branch": 130,
        "fn": "Address.verifyCallResult",
        "offset": [
          7735,
          7742
        ],
        "op": "DUP4",
        "path": "42"
      },
      "9636": {
        "fn": "Address.verifyCallResult",
        "offset": [
          7731,
          8297
        ],
        "op": "ISZERO",
        "path": "42"
      },
      "9637": {
        "fn": "Address.verifyCallResult",
        "offset": [
          7731,
          8297
        ],
        "op": "PUSH2",
        "path": "42",
        "value": "0x25AF"
      },
      "9640": {
        "branch": 130,
        "fn": "Address.verifyCallResult",
        "offset": [
          7731,
          8297
        ],
        "op": "JUMPI",
        "path": "42"
      },
      "9641": {
        "op": "POP"
      },
      "9642": {
        "fn": "Address.verifyCallResult",
        "offset": [
          7765,
          7775
        ],
        "op": "DUP2",
        "path": "42",
        "statement": 96
      },
      "9643": {
        "fn": "Address.verifyCallResult",
        "offset": [
          7758,
          7775
        ],
        "op": "PUSH2",
        "path": "42",
        "value": "0x11A7"
      },
      "9646": {
        "fn": "Address.verifyCallResult",
        "offset": [
          7758,
          7775
        ],
        "op": "JUMP",
        "path": "42"
      },
      "9647": {
        "fn": "Address.verifyCallResult",
        "offset": [
          7731,
          8297
        ],
        "op": "JUMPDEST",
        "path": "42"
      },
      "9648": {
        "fn": "Address.verifyCallResult",
        "offset": [
          7876,
          7893
        ],
        "op": "DUP3",
        "path": "42"
      },
      "9649": {
        "fn": "Address.verifyCallResult",
        "offset": [
          7876,
          7893
        ],
        "op": "MLOAD",
        "path": "42"
      },
      "9650": {
        "branch": 131,
        "fn": "Address.verifyCallResult",
        "offset": [
          7876,
          7897
        ],
        "op": "ISZERO",
        "path": "42"
      },
      "9651": {
        "fn": "Address.verifyCallResult",
        "offset": [
          7872,
          8287
        ],
        "op": "PUSH2",
        "path": "42",
        "value": "0x25BF"
      },
      "9654": {
        "branch": 131,
        "fn": "Address.verifyCallResult",
        "offset": [
          7872,
          8287
        ],
        "op": "JUMPI",
        "path": "42"
      },
      "9655": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8120,
          8130
        ],
        "op": "DUP3",
        "path": "42"
      },
      "9656": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8114,
          8131
        ],
        "op": "MLOAD",
        "path": "42"
      },
      "9657": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8180,
          8195
        ],
        "op": "DUP1",
        "path": "42"
      },
      "9658": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8167,
          8177
        ],
        "op": "DUP5",
        "path": "42"
      },
      "9659": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8163,
          8165
        ],
        "op": "PUSH1",
        "path": "42",
        "value": "0x20"
      },
      "9661": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8159,
          8178
        ],
        "op": "ADD",
        "path": "42"
      },
      "9662": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8152,
          8196
        ],
        "op": "REVERT",
        "path": "42"
      },
      "9663": {
        "fn": "Address.verifyCallResult",
        "offset": [
          7872,
          8287
        ],
        "op": "JUMPDEST",
        "path": "42"
      },
      "9664": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8259,
          8271
        ],
        "op": "DUP2",
        "path": "42",
        "statement": 97
      },
      "9665": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8252,
          8272
        ],
        "op": "PUSH1",
        "path": "42",
        "value": "0x40"
      },
      "9667": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8252,
          8272
        ],
        "op": "MLOAD",
        "path": "42"
      },
      "9668": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "9672": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "9674": {
        "op": "SHL"
      },
      "9675": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8252,
          8272
        ],
        "op": "DUP2",
        "path": "42"
      },
      "9676": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8252,
          8272
        ],
        "op": "MSTORE",
        "path": "42"
      },
      "9677": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8252,
          8272
        ],
        "op": "PUSH1",
        "path": "42",
        "value": "0x4"
      },
      "9679": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8252,
          8272
        ],
        "op": "ADD",
        "path": "42"
      },
      "9680": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8252,
          8272
        ],
        "op": "PUSH2",
        "path": "42",
        "value": "0x631"
      },
      "9683": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8252,
          8272
        ],
        "op": "SWAP2",
        "path": "42"
      },
      "9684": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8252,
          8272
        ],
        "op": "SWAP1",
        "path": "42"
      },
      "9685": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8252,
          8272
        ],
        "op": "PUSH2",
        "path": "42",
        "value": "0x2E88"
      },
      "9688": {
        "fn": "Address.verifyCallResult",
        "jump": "i",
        "offset": [
          8252,
          8272
        ],
        "op": "JUMP",
        "path": "42"
      },
      "9689": {
        "op": "JUMPDEST"
      },
      "9690": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9692": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9694": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "9696": {
        "op": "SHL"
      },
      "9697": {
        "op": "SUB"
      },
      "9698": {
        "op": "DUP2"
      },
      "9699": {
        "op": "AND"
      },
      "9700": {
        "op": "DUP2"
      },
      "9701": {
        "op": "EQ"
      },
      "9702": {
        "op": "PUSH2",
        "value": "0x1ACF"
      },
      "9705": {
        "op": "JUMPI"
      },
      "9706": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "9708": {
        "op": "DUP1"
      },
      "9709": {
        "op": "REVERT"
      },
      "9710": {
        "op": "JUMPDEST"
      },
      "9711": {
        "op": "DUP1"
      },
      "9712": {
        "op": "CALLDATALOAD"
      },
      "9713": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9715": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9717": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "9719": {
        "op": "SHL"
      },
      "9720": {
        "op": "SUB"
      },
      "9721": {
        "op": "DUP2"
      },
      "9722": {
        "op": "AND"
      },
      "9723": {
        "op": "DUP2"
      },
      "9724": {
        "op": "EQ"
      },
      "9725": {
        "op": "PUSH2",
        "value": "0x2605"
      },
      "9728": {
        "op": "JUMPI"
      },
      "9729": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "9731": {
        "op": "DUP1"
      },
      "9732": {
        "op": "REVERT"
      },
      "9733": {
        "op": "JUMPDEST"
      },
      "9734": {
        "op": "SWAP2"
      },
      "9735": {
        "op": "SWAP1"
      },
      "9736": {
        "op": "POP"
      },
      "9737": {
        "jump": "o",
        "op": "JUMP"
      },
      "9738": {
        "op": "JUMPDEST"
      },
      "9739": {
        "op": "DUP1"
      },
      "9740": {
        "op": "CALLDATALOAD"
      },
      "9741": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9743": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9745": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "9747": {
        "op": "SHL"
      },
      "9748": {
        "op": "SUB"
      },
      "9749": {
        "op": "DUP2"
      },
      "9750": {
        "op": "AND"
      },
      "9751": {
        "op": "DUP2"
      },
      "9752": {
        "op": "EQ"
      },
      "9753": {
        "op": "PUSH2",
        "value": "0x2605"
      },
      "9756": {
        "op": "JUMPI"
      },
      "9757": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "9759": {
        "op": "DUP1"
      },
      "9760": {
        "op": "REVERT"
      },
      "9761": {
        "op": "JUMPDEST"
      },
      "9762": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "9764": {
        "op": "DUP1"
      },
      "9765": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "9767": {
        "op": "DUP1"
      },
      "9768": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "9770": {
        "op": "DUP1"
      },
      "9771": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "9773": {
        "op": "DUP1"
      },
      "9774": {
        "op": "PUSH2",
        "value": "0x100"
      },
      "9777": {
        "op": "DUP10"
      },
      "9778": {
        "op": "DUP12"
      },
      "9779": {
        "op": "SUB"
      },
      "9780": {
        "op": "SLT"
      },
      "9781": {
        "op": "ISZERO"
      },
      "9782": {
        "op": "PUSH2",
        "value": "0x263E"
      },
      "9785": {
        "op": "JUMPI"
      },
      "9786": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "9788": {
        "op": "DUP1"
      },
      "9789": {
        "op": "REVERT"
      },
      "9790": {
        "op": "JUMPDEST"
      },
      "9791": {
        "op": "DUP9"
      },
      "9792": {
        "op": "CALLDATALOAD"
      },
      "9793": {
        "op": "PUSH2",
        "value": "0x2649"
      },
      "9796": {
        "op": "DUP2"
      },
      "9797": {
        "op": "PUSH2",
        "value": "0x25D9"
      },
      "9800": {
        "jump": "i",
        "op": "JUMP"
      },
      "9801": {
        "op": "JUMPDEST"
      },
      "9802": {
        "op": "SWAP8"
      },
      "9803": {
        "op": "POP"
      },
      "9804": {
        "op": "PUSH2",
        "value": "0x2657"
      },
      "9807": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "9809": {
        "op": "DUP11"
      },
      "9810": {
        "op": "ADD"
      },
      "9811": {
        "op": "PUSH2",
        "value": "0x25EE"
      },
      "9814": {
        "jump": "i",
        "op": "JUMP"
      },
      "9815": {
        "op": "JUMPDEST"
      },
      "9816": {
        "op": "SWAP7"
      },
      "9817": {
        "op": "POP"
      },
      "9818": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "9820": {
        "op": "DUP10"
      },
      "9821": {
        "op": "ADD"
      },
      "9822": {
        "op": "CALLDATALOAD"
      },
      "9823": {
        "op": "PUSH2",
        "value": "0x2667"
      },
      "9826": {
        "op": "DUP2"
      },
      "9827": {
        "op": "PUSH2",
        "value": "0x25D9"
      },
      "9830": {
        "jump": "i",
        "op": "JUMP"
      },
      "9831": {
        "op": "JUMPDEST"
      },
      "9832": {
        "op": "SWAP6"
      },
      "9833": {
        "op": "POP"
      },
      "9834": {
        "op": "PUSH2",
        "value": "0x2675"
      },
      "9837": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "9839": {
        "op": "DUP11"
      },
      "9840": {
        "op": "ADD"
      },
      "9841": {
        "op": "PUSH2",
        "value": "0x25EE"
      },
      "9844": {
        "jump": "i",
        "op": "JUMP"
      },
      "9845": {
        "op": "JUMPDEST"
      },
      "9846": {
        "op": "SWAP5"
      },
      "9847": {
        "op": "POP"
      },
      "9848": {
        "op": "PUSH2",
        "value": "0x2683"
      },
      "9851": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "9853": {
        "op": "DUP11"
      },
      "9854": {
        "op": "ADD"
      },
      "9855": {
        "op": "PUSH2",
        "value": "0x260A"
      },
      "9858": {
        "jump": "i",
        "op": "JUMP"
      },
      "9859": {
        "op": "JUMPDEST"
      },
      "9860": {
        "op": "SWAP4"
      },
      "9861": {
        "op": "POP"
      },
      "9862": {
        "op": "PUSH2",
        "value": "0x2691"
      },
      "9865": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "9867": {
        "op": "DUP11"
      },
      "9868": {
        "op": "ADD"
      },
      "9869": {
        "op": "PUSH2",
        "value": "0x260A"
      },
      "9872": {
        "jump": "i",
        "op": "JUMP"
      },
      "9873": {
        "op": "JUMPDEST"
      },
      "9874": {
        "op": "SWAP3"
      },
      "9875": {
        "op": "POP"
      },
      "9876": {
        "op": "PUSH2",
        "value": "0x269F"
      },
      "9879": {
        "op": "PUSH1",
        "value": "0xC0"
      },
      "9881": {
        "op": "DUP11"
      },
      "9882": {
        "op": "ADD"
      },
      "9883": {
        "op": "PUSH2",
        "value": "0x260A"
      },
      "9886": {
        "jump": "i",
        "op": "JUMP"
      },
      "9887": {
        "op": "JUMPDEST"
      },
      "9888": {
        "op": "SWAP2"
      },
      "9889": {
        "op": "POP"
      },
      "9890": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "9892": {
        "op": "DUP10"
      },
      "9893": {
        "op": "ADD"
      },
      "9894": {
        "op": "CALLDATALOAD"
      },
      "9895": {
        "op": "SWAP1"
      },
      "9896": {
        "op": "POP"
      },
      "9897": {
        "op": "SWAP3"
      },
      "9898": {
        "op": "SWAP6"
      },
      "9899": {
        "op": "SWAP9"
      },
      "9900": {
        "op": "POP"
      },
      "9901": {
        "op": "SWAP3"
      },
      "9902": {
        "op": "SWAP6"
      },
      "9903": {
        "op": "SWAP9"
      },
      "9904": {
        "op": "SWAP1"
      },
      "9905": {
        "op": "SWAP4"
      },
      "9906": {
        "op": "SWAP7"
      },
      "9907": {
        "op": "POP"
      },
      "9908": {
        "jump": "o",
        "op": "JUMP"
      },
      "9909": {
        "op": "JUMPDEST"
      },
      "9910": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "9912": {
        "op": "DUP1"
      },
      "9913": {
        "op": "DUP4"
      },
      "9914": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "9916": {
        "op": "DUP5"
      },
      "9917": {
        "op": "ADD"
      },
      "9918": {
        "op": "SLT"
      },
      "9919": {
        "op": "PUSH2",
        "value": "0x26C7"
      },
      "9922": {
        "op": "JUMPI"
      },
      "9923": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "9925": {
        "op": "DUP1"
      },
      "9926": {
        "op": "REVERT"
      },
      "9927": {
        "op": "JUMPDEST"
      },
      "9928": {
        "op": "POP"
      },
      "9929": {
        "op": "DUP2"
      },
      "9930": {
        "op": "CALLDATALOAD"
      },
      "9931": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9933": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9935": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "9937": {
        "op": "SHL"
      },
      "9938": {
        "op": "SUB"
      },
      "9939": {
        "op": "DUP2"
      },
      "9940": {
        "op": "GT"
      },
      "9941": {
        "op": "ISZERO"
      },
      "9942": {
        "op": "PUSH2",
        "value": "0x26DE"
      },
      "9945": {
        "op": "JUMPI"
      },
      "9946": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "9948": {
        "op": "DUP1"
      },
      "9949": {
        "op": "REVERT"
      },
      "9950": {
        "op": "JUMPDEST"
      },
      "9951": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "9953": {
        "op": "DUP4"
      },
      "9954": {
        "op": "ADD"
      },
      "9955": {
        "op": "SWAP2"
      },
      "9956": {
        "op": "POP"
      },
      "9957": {
        "op": "DUP4"
      },
      "9958": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "9960": {
        "op": "DUP3"
      },
      "9961": {
        "op": "PUSH1",
        "value": "0x5"
      },
      "9963": {
        "op": "SHL"
      },
      "9964": {
        "op": "DUP6"
      },
      "9965": {
        "op": "ADD"
      },
      "9966": {
        "op": "ADD"
      },
      "9967": {
        "op": "GT"
      },
      "9968": {
        "op": "ISZERO"
      },
      "9969": {
        "op": "PUSH2",
        "value": "0x26F9"
      },
      "9972": {
        "op": "JUMPI"
      },
      "9973": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "9975": {
        "op": "DUP1"
      },
      "9976": {
        "op": "REVERT"
      },
      "9977": {
        "op": "JUMPDEST"
      },
      "9978": {
        "op": "SWAP3"
      },
      "9979": {
        "op": "POP"
      },
      "9980": {
        "op": "SWAP3"
      },
      "9981": {
        "op": "SWAP1"
      },
      "9982": {
        "op": "POP"
      },
      "9983": {
        "jump": "o",
        "op": "JUMP"
      },
      "9984": {
        "op": "JUMPDEST"
      },
      "9985": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "9987": {
        "op": "DUP1"
      },
      "9988": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "9990": {
        "op": "DUP1"
      },
      "9991": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "9993": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "9995": {
        "op": "DUP7"
      },
      "9996": {
        "op": "DUP9"
      },
      "9997": {
        "op": "SUB"
      },
      "9998": {
        "op": "SLT"
      },
      "9999": {
        "op": "ISZERO"
      },
      "10000": {
        "op": "PUSH2",
        "value": "0x2718"
      },
      "10003": {
        "op": "JUMPI"
      },
      "10004": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10006": {
        "op": "DUP1"
      },
      "10007": {
        "op": "REVERT"
      },
      "10008": {
        "op": "JUMPDEST"
      },
      "10009": {
        "op": "DUP6"
      },
      "10010": {
        "op": "CALLDATALOAD"
      },
      "10011": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "10013": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "10015": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "10017": {
        "op": "SHL"
      },
      "10018": {
        "op": "SUB"
      },
      "10019": {
        "op": "DUP1"
      },
      "10020": {
        "op": "DUP3"
      },
      "10021": {
        "op": "GT"
      },
      "10022": {
        "op": "ISZERO"
      },
      "10023": {
        "op": "PUSH2",
        "value": "0x272F"
      },
      "10026": {
        "op": "JUMPI"
      },
      "10027": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10029": {
        "op": "DUP1"
      },
      "10030": {
        "op": "REVERT"
      },
      "10031": {
        "op": "JUMPDEST"
      },
      "10032": {
        "op": "PUSH2",
        "value": "0x273B"
      },
      "10035": {
        "op": "DUP10"
      },
      "10036": {
        "op": "DUP4"
      },
      "10037": {
        "op": "DUP11"
      },
      "10038": {
        "op": "ADD"
      },
      "10039": {
        "op": "PUSH2",
        "value": "0x26B5"
      },
      "10042": {
        "jump": "i",
        "op": "JUMP"
      },
      "10043": {
        "op": "JUMPDEST"
      },
      "10044": {
        "op": "SWAP1"
      },
      "10045": {
        "op": "SWAP8"
      },
      "10046": {
        "op": "POP"
      },
      "10047": {
        "op": "SWAP6"
      },
      "10048": {
        "op": "POP"
      },
      "10049": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "10051": {
        "op": "DUP9"
      },
      "10052": {
        "op": "ADD"
      },
      "10053": {
        "op": "CALLDATALOAD"
      },
      "10054": {
        "op": "SWAP2"
      },
      "10055": {
        "op": "POP"
      },
      "10056": {
        "op": "DUP1"
      },
      "10057": {
        "op": "DUP3"
      },
      "10058": {
        "op": "GT"
      },
      "10059": {
        "op": "ISZERO"
      },
      "10060": {
        "op": "PUSH2",
        "value": "0x2754"
      },
      "10063": {
        "op": "JUMPI"
      },
      "10064": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10066": {
        "op": "DUP1"
      },
      "10067": {
        "op": "REVERT"
      },
      "10068": {
        "op": "JUMPDEST"
      },
      "10069": {
        "op": "POP"
      },
      "10070": {
        "op": "PUSH2",
        "value": "0x2761"
      },
      "10073": {
        "op": "DUP9"
      },
      "10074": {
        "op": "DUP3"
      },
      "10075": {
        "op": "DUP10"
      },
      "10076": {
        "op": "ADD"
      },
      "10077": {
        "op": "PUSH2",
        "value": "0x26B5"
      },
      "10080": {
        "jump": "i",
        "op": "JUMP"
      },
      "10081": {
        "op": "JUMPDEST"
      },
      "10082": {
        "op": "SWAP1"
      },
      "10083": {
        "op": "SWAP5"
      },
      "10084": {
        "op": "POP"
      },
      "10085": {
        "op": "SWAP3"
      },
      "10086": {
        "op": "POP"
      },
      "10087": {
        "op": "POP"
      },
      "10088": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "10090": {
        "op": "DUP7"
      },
      "10091": {
        "op": "ADD"
      },
      "10092": {
        "op": "CALLDATALOAD"
      },
      "10093": {
        "op": "PUSH2",
        "value": "0x2775"
      },
      "10096": {
        "op": "DUP2"
      },
      "10097": {
        "op": "PUSH2",
        "value": "0x25D9"
      },
      "10100": {
        "jump": "i",
        "op": "JUMP"
      },
      "10101": {
        "op": "JUMPDEST"
      },
      "10102": {
        "op": "DUP1"
      },
      "10103": {
        "op": "SWAP2"
      },
      "10104": {
        "op": "POP"
      },
      "10105": {
        "op": "POP"
      },
      "10106": {
        "op": "SWAP3"
      },
      "10107": {
        "op": "SWAP6"
      },
      "10108": {
        "op": "POP"
      },
      "10109": {
        "op": "SWAP3"
      },
      "10110": {
        "op": "SWAP6"
      },
      "10111": {
        "op": "SWAP1"
      },
      "10112": {
        "op": "SWAP4"
      },
      "10113": {
        "op": "POP"
      },
      "10114": {
        "jump": "o",
        "op": "JUMP"
      },
      "10115": {
        "op": "JUMPDEST"
      },
      "10116": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10118": {
        "op": "DUP1"
      },
      "10119": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "10121": {
        "op": "DUP4"
      },
      "10122": {
        "op": "DUP6"
      },
      "10123": {
        "op": "SUB"
      },
      "10124": {
        "op": "SLT"
      },
      "10125": {
        "op": "ISZERO"
      },
      "10126": {
        "op": "PUSH2",
        "value": "0x2796"
      },
      "10129": {
        "op": "JUMPI"
      },
      "10130": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10132": {
        "op": "DUP1"
      },
      "10133": {
        "op": "REVERT"
      },
      "10134": {
        "op": "JUMPDEST"
      },
      "10135": {
        "op": "DUP3"
      },
      "10136": {
        "op": "CALLDATALOAD"
      },
      "10137": {
        "op": "PUSH2",
        "value": "0x27A1"
      },
      "10140": {
        "op": "DUP2"
      },
      "10141": {
        "op": "PUSH2",
        "value": "0x25D9"
      },
      "10144": {
        "jump": "i",
        "op": "JUMP"
      },
      "10145": {
        "op": "JUMPDEST"
      },
      "10146": {
        "op": "SWAP2"
      },
      "10147": {
        "op": "POP"
      },
      "10148": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "10150": {
        "op": "DUP4"
      },
      "10151": {
        "op": "ADD"
      },
      "10152": {
        "op": "CALLDATALOAD"
      },
      "10153": {
        "op": "PUSH2",
        "value": "0x27B1"
      },
      "10156": {
        "op": "DUP2"
      },
      "10157": {
        "op": "PUSH2",
        "value": "0x25D9"
      },
      "10160": {
        "jump": "i",
        "op": "JUMP"
      },
      "10161": {
        "op": "JUMPDEST"
      },
      "10162": {
        "op": "DUP1"
      },
      "10163": {
        "op": "SWAP2"
      },
      "10164": {
        "op": "POP"
      },
      "10165": {
        "op": "POP"
      },
      "10166": {
        "op": "SWAP3"
      },
      "10167": {
        "op": "POP"
      },
      "10168": {
        "op": "SWAP3"
      },
      "10169": {
        "op": "SWAP1"
      },
      "10170": {
        "op": "POP"
      },
      "10171": {
        "jump": "o",
        "op": "JUMP"
      },
      "10172": {
        "op": "JUMPDEST"
      },
      "10173": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10175": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "10177": {
        "op": "DUP3"
      },
      "10178": {
        "op": "DUP5"
      },
      "10179": {
        "op": "SUB"
      },
      "10180": {
        "op": "SLT"
      },
      "10181": {
        "op": "ISZERO"
      },
      "10182": {
        "op": "PUSH2",
        "value": "0x27CE"
      },
      "10185": {
        "op": "JUMPI"
      },
      "10186": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10188": {
        "op": "DUP1"
      },
      "10189": {
        "op": "REVERT"
      },
      "10190": {
        "op": "JUMPDEST"
      },
      "10191": {
        "op": "DUP2"
      },
      "10192": {
        "op": "CALLDATALOAD"
      },
      "10193": {
        "op": "PUSH2",
        "value": "0x11A7"
      },
      "10196": {
        "op": "DUP2"
      },
      "10197": {
        "op": "PUSH2",
        "value": "0x25D9"
      },
      "10200": {
        "jump": "i",
        "op": "JUMP"
      },
      "10201": {
        "op": "JUMPDEST"
      },
      "10202": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10204": {
        "op": "DUP1"
      },
      "10205": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10207": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "10209": {
        "op": "DUP5"
      },
      "10210": {
        "op": "DUP7"
      },
      "10211": {
        "op": "SUB"
      },
      "10212": {
        "op": "SLT"
      },
      "10213": {
        "op": "ISZERO"
      },
      "10214": {
        "op": "PUSH2",
        "value": "0x27EE"
      },
      "10217": {
        "op": "JUMPI"
      },
      "10218": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10220": {
        "op": "DUP1"
      },
      "10221": {
        "op": "REVERT"
      },
      "10222": {
        "op": "JUMPDEST"
      },
      "10223": {
        "op": "DUP4"
      },
      "10224": {
        "op": "CALLDATALOAD"
      },
      "10225": {
        "op": "PUSH2",
        "value": "0x27F9"
      },
      "10228": {
        "op": "DUP2"
      },
      "10229": {
        "op": "PUSH2",
        "value": "0x25D9"
      },
      "10232": {
        "jump": "i",
        "op": "JUMP"
      },
      "10233": {
        "op": "JUMPDEST"
      },
      "10234": {
        "op": "SWAP3"
      },
      "10235": {
        "op": "POP"
      },
      "10236": {
        "op": "PUSH2",
        "value": "0x2807"
      },
      "10239": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "10241": {
        "op": "DUP6"
      },
      "10242": {
        "op": "ADD"
      },
      "10243": {
        "op": "PUSH2",
        "value": "0x25EE"
      },
      "10246": {
        "jump": "i",
        "op": "JUMP"
      },
      "10247": {
        "op": "JUMPDEST"
      },
      "10248": {
        "op": "SWAP2"
      },
      "10249": {
        "op": "POP"
      },
      "10250": {
        "op": "PUSH2",
        "value": "0x2815"
      },
      "10253": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "10255": {
        "op": "DUP6"
      },
      "10256": {
        "op": "ADD"
      },
      "10257": {
        "op": "PUSH2",
        "value": "0x260A"
      },
      "10260": {
        "jump": "i",
        "op": "JUMP"
      },
      "10261": {
        "op": "JUMPDEST"
      },
      "10262": {
        "op": "SWAP1"
      },
      "10263": {
        "op": "POP"
      },
      "10264": {
        "op": "SWAP3"
      },
      "10265": {
        "op": "POP"
      },
      "10266": {
        "op": "SWAP3"
      },
      "10267": {
        "op": "POP"
      },
      "10268": {
        "op": "SWAP3"
      },
      "10269": {
        "jump": "o",
        "op": "JUMP"
      },
      "10270": {
        "op": "JUMPDEST"
      },
      "10271": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10273": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "10275": {
        "op": "DUP3"
      },
      "10276": {
        "op": "DUP5"
      },
      "10277": {
        "op": "SUB"
      },
      "10278": {
        "op": "SLT"
      },
      "10279": {
        "op": "ISZERO"
      },
      "10280": {
        "op": "PUSH2",
        "value": "0x2830"
      },
      "10283": {
        "op": "JUMPI"
      },
      "10284": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10286": {
        "op": "DUP1"
      },
      "10287": {
        "op": "REVERT"
      },
      "10288": {
        "op": "JUMPDEST"
      },
      "10289": {
        "op": "POP"
      },
      "10290": {
        "op": "CALLDATALOAD"
      },
      "10291": {
        "op": "SWAP2"
      },
      "10292": {
        "op": "SWAP1"
      },
      "10293": {
        "op": "POP"
      },
      "10294": {
        "jump": "o",
        "op": "JUMP"
      },
      "10295": {
        "op": "JUMPDEST"
      },
      "10296": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10298": {
        "op": "DUP1"
      },
      "10299": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10301": {
        "op": "DUP1"
      },
      "10302": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10304": {
        "op": "DUP1"
      },
      "10305": {
        "op": "PUSH1",
        "value": "0xC0"
      },
      "10307": {
        "op": "DUP8"
      },
      "10308": {
        "op": "DUP10"
      },
      "10309": {
        "op": "SUB"
      },
      "10310": {
        "op": "SLT"
      },
      "10311": {
        "op": "ISZERO"
      },
      "10312": {
        "op": "PUSH2",
        "value": "0x2850"
      },
      "10315": {
        "op": "JUMPI"
      },
      "10316": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10318": {
        "op": "DUP1"
      },
      "10319": {
        "op": "REVERT"
      },
      "10320": {
        "op": "JUMPDEST"
      },
      "10321": {
        "op": "DUP7"
      },
      "10322": {
        "op": "CALLDATALOAD"
      },
      "10323": {
        "op": "PUSH2",
        "value": "0x285B"
      },
      "10326": {
        "op": "DUP2"
      },
      "10327": {
        "op": "PUSH2",
        "value": "0x25D9"
      },
      "10330": {
        "jump": "i",
        "op": "JUMP"
      },
      "10331": {
        "op": "JUMPDEST"
      },
      "10332": {
        "op": "SWAP6"
      },
      "10333": {
        "op": "POP"
      },
      "10334": {
        "op": "PUSH2",
        "value": "0x2869"
      },
      "10337": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "10339": {
        "op": "DUP9"
      },
      "10340": {
        "op": "ADD"
      },
      "10341": {
        "op": "PUSH2",
        "value": "0x25EE"
      },
      "10344": {
        "jump": "i",
        "op": "JUMP"
      },
      "10345": {
        "op": "JUMPDEST"
      },
      "10346": {
        "op": "SWAP5"
      },
      "10347": {
        "op": "POP"
      },
      "10348": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "10350": {
        "op": "DUP8"
      },
      "10351": {
        "op": "ADD"
      },
      "10352": {
        "op": "CALLDATALOAD"
      },
      "10353": {
        "op": "PUSH2",
        "value": "0x2879"
      },
      "10356": {
        "op": "DUP2"
      },
      "10357": {
        "op": "PUSH2",
        "value": "0x25D9"
      },
      "10360": {
        "jump": "i",
        "op": "JUMP"
      },
      "10361": {
        "op": "JUMPDEST"
      },
      "10362": {
        "op": "SWAP4"
      },
      "10363": {
        "op": "POP"
      },
      "10364": {
        "op": "PUSH2",
        "value": "0x2887"
      },
      "10367": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "10369": {
        "op": "DUP9"
      },
      "10370": {
        "op": "ADD"
      },
      "10371": {
        "op": "PUSH2",
        "value": "0x25EE"
      },
      "10374": {
        "jump": "i",
        "op": "JUMP"
      },
      "10375": {
        "op": "JUMPDEST"
      },
      "10376": {
        "op": "SWAP3"
      },
      "10377": {
        "op": "POP"
      },
      "10378": {
        "op": "PUSH2",
        "value": "0x2895"
      },
      "10381": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "10383": {
        "op": "DUP9"
      },
      "10384": {
        "op": "ADD"
      },
      "10385": {
        "op": "PUSH2",
        "value": "0x260A"
      },
      "10388": {
        "jump": "i",
        "op": "JUMP"
      },
      "10389": {
        "op": "JUMPDEST"
      },
      "10390": {
        "op": "SWAP2"
      },
      "10391": {
        "op": "POP"
      },
      "10392": {
        "op": "PUSH2",
        "value": "0x28A3"
      },
      "10395": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "10397": {
        "op": "DUP9"
      },
      "10398": {
        "op": "ADD"
      },
      "10399": {
        "op": "PUSH2",
        "value": "0x260A"
      },
      "10402": {
        "jump": "i",
        "op": "JUMP"
      },
      "10403": {
        "op": "JUMPDEST"
      },
      "10404": {
        "op": "SWAP1"
      },
      "10405": {
        "op": "POP"
      },
      "10406": {
        "op": "SWAP3"
      },
      "10407": {
        "op": "SWAP6"
      },
      "10408": {
        "op": "POP"
      },
      "10409": {
        "op": "SWAP3"
      },
      "10410": {
        "op": "SWAP6"
      },
      "10411": {
        "op": "POP"
      },
      "10412": {
        "op": "SWAP3"
      },
      "10413": {
        "op": "SWAP6"
      },
      "10414": {
        "jump": "o",
        "op": "JUMP"
      },
      "10415": {
        "op": "JUMPDEST"
      },
      "10416": {
        "op": "PUSH4",
        "value": "0x4E487B71"
      },
      "10421": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "10423": {
        "op": "SHL"
      },
      "10424": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10426": {
        "op": "MSTORE"
      },
      "10427": {
        "op": "PUSH1",
        "value": "0x41"
      },
      "10429": {
        "op": "PUSH1",
        "value": "0x4"
      },
      "10431": {
        "op": "MSTORE"
      },
      "10432": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "10434": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10436": {
        "op": "REVERT"
      },
      "10437": {
        "op": "JUMPDEST"
      },
      "10438": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "10440": {
        "op": "MLOAD"
      },
      "10441": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "10443": {
        "op": "DUP2"
      },
      "10444": {
        "op": "ADD"
      },
      "10445": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "10447": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "10449": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "10451": {
        "op": "SHL"
      },
      "10452": {
        "op": "SUB"
      },
      "10453": {
        "op": "DUP2"
      },
      "10454": {
        "op": "GT"
      },
      "10455": {
        "op": "DUP3"
      },
      "10456": {
        "op": "DUP3"
      },
      "10457": {
        "op": "LT"
      },
      "10458": {
        "op": "OR"
      },
      "10459": {
        "op": "ISZERO"
      },
      "10460": {
        "op": "PUSH2",
        "value": "0x28E7"
      },
      "10463": {
        "op": "JUMPI"
      },
      "10464": {
        "op": "PUSH2",
        "value": "0x28E7"
      },
      "10467": {
        "op": "PUSH2",
        "value": "0x28AF"
      },
      "10470": {
        "jump": "i",
        "op": "JUMP"
      },
      "10471": {
        "op": "JUMPDEST"
      },
      "10472": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "10474": {
        "op": "MSTORE"
      },
      "10475": {
        "op": "SWAP1"
      },
      "10476": {
        "jump": "o",
        "op": "JUMP"
      },
      "10477": {
        "op": "JUMPDEST"
      },
      "10478": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "10480": {
        "op": "MLOAD"
      },
      "10481": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "10483": {
        "op": "DUP3"
      },
      "10484": {
        "op": "ADD"
      },
      "10485": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "10487": {
        "op": "NOT"
      },
      "10488": {
        "op": "AND"
      },
      "10489": {
        "op": "DUP2"
      },
      "10490": {
        "op": "ADD"
      },
      "10491": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "10493": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "10495": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "10497": {
        "op": "SHL"
      },
      "10498": {
        "op": "SUB"
      },
      "10499": {
        "op": "DUP2"
      },
      "10500": {
        "op": "GT"
      },
      "10501": {
        "op": "DUP3"
      },
      "10502": {
        "op": "DUP3"
      },
      "10503": {
        "op": "LT"
      },
      "10504": {
        "op": "OR"
      },
      "10505": {
        "op": "ISZERO"
      },
      "10506": {
        "op": "PUSH2",
        "value": "0x2915"
      },
      "10509": {
        "op": "JUMPI"
      },
      "10510": {
        "op": "PUSH2",
        "value": "0x2915"
      },
      "10513": {
        "op": "PUSH2",
        "value": "0x28AF"
      },
      "10516": {
        "jump": "i",
        "op": "JUMP"
      },
      "10517": {
        "op": "JUMPDEST"
      },
      "10518": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "10520": {
        "op": "MSTORE"
      },
      "10521": {
        "op": "SWAP2"
      },
      "10522": {
        "op": "SWAP1"
      },
      "10523": {
        "op": "POP"
      },
      "10524": {
        "jump": "o",
        "op": "JUMP"
      },
      "10525": {
        "op": "JUMPDEST"
      },
      "10526": {
        "op": "DUP1"
      },
      "10527": {
        "op": "ISZERO"
      },
      "10528": {
        "op": "ISZERO"
      },
      "10529": {
        "op": "DUP2"
      },
      "10530": {
        "op": "EQ"
      },
      "10531": {
        "op": "PUSH2",
        "value": "0x1ACF"
      },
      "10534": {
        "op": "JUMPI"
      },
      "10535": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10537": {
        "op": "DUP1"
      },
      "10538": {
        "op": "REVERT"
      },
      "10539": {
        "op": "JUMPDEST"
      },
      "10540": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10542": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "10544": {
        "op": "DUP1"
      },
      "10545": {
        "op": "DUP4"
      },
      "10546": {
        "op": "DUP6"
      },
      "10547": {
        "op": "SUB"
      },
      "10548": {
        "op": "SLT"
      },
      "10549": {
        "op": "ISZERO"
      },
      "10550": {
        "op": "PUSH2",
        "value": "0x293E"
      },
      "10553": {
        "op": "JUMPI"
      },
      "10554": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10556": {
        "op": "DUP1"
      },
      "10557": {
        "op": "REVERT"
      },
      "10558": {
        "op": "JUMPDEST"
      },
      "10559": {
        "op": "DUP3"
      },
      "10560": {
        "op": "CALLDATALOAD"
      },
      "10561": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "10563": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "10565": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "10567": {
        "op": "SHL"
      },
      "10568": {
        "op": "SUB"
      },
      "10569": {
        "op": "DUP1"
      },
      "10570": {
        "op": "DUP3"
      },
      "10571": {
        "op": "GT"
      },
      "10572": {
        "op": "ISZERO"
      },
      "10573": {
        "op": "PUSH2",
        "value": "0x2955"
      },
      "10576": {
        "op": "JUMPI"
      },
      "10577": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10579": {
        "op": "DUP1"
      },
      "10580": {
        "op": "REVERT"
      },
      "10581": {
        "op": "JUMPDEST"
      },
      "10582": {
        "op": "DUP2"
      },
      "10583": {
        "op": "DUP6"
      },
      "10584": {
        "op": "ADD"
      },
      "10585": {
        "op": "SWAP2"
      },
      "10586": {
        "op": "POP"
      },
      "10587": {
        "op": "DUP6"
      },
      "10588": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "10590": {
        "op": "DUP4"
      },
      "10591": {
        "op": "ADD"
      },
      "10592": {
        "op": "SLT"
      },
      "10593": {
        "op": "PUSH2",
        "value": "0x2969"
      },
      "10596": {
        "op": "JUMPI"
      },
      "10597": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10599": {
        "op": "DUP1"
      },
      "10600": {
        "op": "REVERT"
      },
      "10601": {
        "op": "JUMPDEST"
      },
      "10602": {
        "op": "DUP2"
      },
      "10603": {
        "op": "CALLDATALOAD"
      },
      "10604": {
        "op": "DUP2"
      },
      "10605": {
        "op": "DUP2"
      },
      "10606": {
        "op": "GT"
      },
      "10607": {
        "op": "ISZERO"
      },
      "10608": {
        "op": "PUSH2",
        "value": "0x297B"
      },
      "10611": {
        "op": "JUMPI"
      },
      "10612": {
        "op": "PUSH2",
        "value": "0x297B"
      },
      "10615": {
        "op": "PUSH2",
        "value": "0x28AF"
      },
      "10618": {
        "jump": "i",
        "op": "JUMP"
      },
      "10619": {
        "op": "JUMPDEST"
      },
      "10620": {
        "op": "PUSH2",
        "value": "0x2989"
      },
      "10623": {
        "op": "DUP5"
      },
      "10624": {
        "op": "DUP3"
      },
      "10625": {
        "op": "PUSH1",
        "value": "0x5"
      },
      "10627": {
        "op": "SHL"
      },
      "10628": {
        "op": "ADD"
      },
      "10629": {
        "op": "PUSH2",
        "value": "0x28ED"
      },
      "10632": {
        "jump": "i",
        "op": "JUMP"
      },
      "10633": {
        "op": "JUMPDEST"
      },
      "10634": {
        "op": "DUP2"
      },
      "10635": {
        "op": "DUP2"
      },
      "10636": {
        "op": "MSTORE"
      },
      "10637": {
        "op": "DUP5"
      },
      "10638": {
        "op": "DUP2"
      },
      "10639": {
        "op": "ADD"
      },
      "10640": {
        "op": "SWAP3"
      },
      "10641": {
        "op": "POP"
      },
      "10642": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "10644": {
        "op": "SWAP2"
      },
      "10645": {
        "op": "DUP3"
      },
      "10646": {
        "op": "MUL"
      },
      "10647": {
        "op": "DUP5"
      },
      "10648": {
        "op": "ADD"
      },
      "10649": {
        "op": "DUP6"
      },
      "10650": {
        "op": "ADD"
      },
      "10651": {
        "op": "SWAP2"
      },
      "10652": {
        "op": "DUP9"
      },
      "10653": {
        "op": "DUP4"
      },
      "10654": {
        "op": "GT"
      },
      "10655": {
        "op": "ISZERO"
      },
      "10656": {
        "op": "PUSH2",
        "value": "0x29A8"
      },
      "10659": {
        "op": "JUMPI"
      },
      "10660": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10662": {
        "op": "DUP1"
      },
      "10663": {
        "op": "REVERT"
      },
      "10664": {
        "op": "JUMPDEST"
      },
      "10665": {
        "op": "SWAP4"
      },
      "10666": {
        "op": "DUP6"
      },
      "10667": {
        "op": "ADD"
      },
      "10668": {
        "op": "SWAP4"
      },
      "10669": {
        "op": "JUMPDEST"
      },
      "10670": {
        "op": "DUP3"
      },
      "10671": {
        "op": "DUP6"
      },
      "10672": {
        "op": "LT"
      },
      "10673": {
        "op": "ISZERO"
      },
      "10674": {
        "op": "PUSH2",
        "value": "0x2A21"
      },
      "10677": {
        "op": "JUMPI"
      },
      "10678": {
        "op": "DUP1"
      },
      "10679": {
        "op": "DUP6"
      },
      "10680": {
        "op": "DUP11"
      },
      "10681": {
        "op": "SUB"
      },
      "10682": {
        "op": "SLT"
      },
      "10683": {
        "op": "ISZERO"
      },
      "10684": {
        "op": "PUSH2",
        "value": "0x29C5"
      },
      "10687": {
        "op": "JUMPI"
      },
      "10688": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10690": {
        "op": "DUP1"
      },
      "10691": {
        "op": "DUP2"
      },
      "10692": {
        "op": "REVERT"
      },
      "10693": {
        "op": "JUMPDEST"
      },
      "10694": {
        "op": "PUSH2",
        "value": "0x29CD"
      },
      "10697": {
        "op": "PUSH2",
        "value": "0x28C5"
      },
      "10700": {
        "jump": "i",
        "op": "JUMP"
      },
      "10701": {
        "op": "JUMPDEST"
      },
      "10702": {
        "op": "DUP6"
      },
      "10703": {
        "op": "CALLDATALOAD"
      },
      "10704": {
        "op": "PUSH2",
        "value": "0x29D8"
      },
      "10707": {
        "op": "DUP2"
      },
      "10708": {
        "op": "PUSH2",
        "value": "0x25D9"
      },
      "10711": {
        "jump": "i",
        "op": "JUMP"
      },
      "10712": {
        "op": "JUMPDEST"
      },
      "10713": {
        "op": "DUP2"
      },
      "10714": {
        "op": "MSTORE"
      },
      "10715": {
        "op": "DUP6"
      },
      "10716": {
        "op": "DUP8"
      },
      "10717": {
        "op": "ADD"
      },
      "10718": {
        "op": "CALLDATALOAD"
      },
      "10719": {
        "op": "PUSH2",
        "value": "0x29E7"
      },
      "10722": {
        "op": "DUP2"
      },
      "10723": {
        "op": "PUSH2",
        "value": "0x25D9"
      },
      "10726": {
        "jump": "i",
        "op": "JUMP"
      },
      "10727": {
        "op": "JUMPDEST"
      },
      "10728": {
        "op": "DUP2"
      },
      "10729": {
        "op": "DUP9"
      },
      "10730": {
        "op": "ADD"
      },
      "10731": {
        "op": "MSTORE"
      },
      "10732": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "10734": {
        "op": "DUP7"
      },
      "10735": {
        "op": "DUP2"
      },
      "10736": {
        "op": "ADD"
      },
      "10737": {
        "op": "CALLDATALOAD"
      },
      "10738": {
        "op": "PUSH2",
        "value": "0x29FA"
      },
      "10741": {
        "op": "DUP2"
      },
      "10742": {
        "op": "PUSH2",
        "value": "0x291D"
      },
      "10745": {
        "jump": "i",
        "op": "JUMP"
      },
      "10746": {
        "op": "JUMPDEST"
      },
      "10747": {
        "op": "SWAP1"
      },
      "10748": {
        "op": "DUP3"
      },
      "10749": {
        "op": "ADD"
      },
      "10750": {
        "op": "MSTORE"
      },
      "10751": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "10753": {
        "op": "DUP7"
      },
      "10754": {
        "op": "DUP2"
      },
      "10755": {
        "op": "ADD"
      },
      "10756": {
        "op": "CALLDATALOAD"
      },
      "10757": {
        "op": "SWAP1"
      },
      "10758": {
        "op": "DUP3"
      },
      "10759": {
        "op": "ADD"
      },
      "10760": {
        "op": "MSTORE"
      },
      "10761": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "10763": {
        "op": "DUP1"
      },
      "10764": {
        "op": "DUP8"
      },
      "10765": {
        "op": "ADD"
      },
      "10766": {
        "op": "CALLDATALOAD"
      },
      "10767": {
        "op": "SWAP1"
      },
      "10768": {
        "op": "DUP3"
      },
      "10769": {
        "op": "ADD"
      },
      "10770": {
        "op": "MSTORE"
      },
      "10771": {
        "op": "DUP5"
      },
      "10772": {
        "op": "MSTORE"
      },
      "10773": {
        "op": "SWAP4"
      },
      "10774": {
        "op": "DUP5"
      },
      "10775": {
        "op": "ADD"
      },
      "10776": {
        "op": "SWAP4"
      },
      "10777": {
        "op": "SWAP3"
      },
      "10778": {
        "op": "DUP6"
      },
      "10779": {
        "op": "ADD"
      },
      "10780": {
        "op": "SWAP3"
      },
      "10781": {
        "op": "PUSH2",
        "value": "0x29AD"
      },
      "10784": {
        "op": "JUMP"
      },
      "10785": {
        "op": "JUMPDEST"
      },
      "10786": {
        "op": "POP"
      },
      "10787": {
        "op": "SWAP8"
      },
      "10788": {
        "op": "SWAP7"
      },
      "10789": {
        "op": "POP"
      },
      "10790": {
        "op": "POP"
      },
      "10791": {
        "op": "POP"
      },
      "10792": {
        "op": "POP"
      },
      "10793": {
        "op": "POP"
      },
      "10794": {
        "op": "POP"
      },
      "10795": {
        "op": "POP"
      },
      "10796": {
        "jump": "o",
        "op": "JUMP"
      },
      "10797": {
        "op": "JUMPDEST"
      },
      "10798": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10800": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "10802": {
        "op": "DUP3"
      },
      "10803": {
        "op": "DUP5"
      },
      "10804": {
        "op": "SUB"
      },
      "10805": {
        "op": "SLT"
      },
      "10806": {
        "op": "ISZERO"
      },
      "10807": {
        "op": "PUSH2",
        "value": "0x2A3F"
      },
      "10810": {
        "op": "JUMPI"
      },
      "10811": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10813": {
        "op": "DUP1"
      },
      "10814": {
        "op": "REVERT"
      },
      "10815": {
        "op": "JUMPDEST"
      },
      "10816": {
        "op": "DUP2"
      },
      "10817": {
        "op": "MLOAD"
      },
      "10818": {
        "op": "PUSH2",
        "value": "0x11A7"
      },
      "10821": {
        "op": "DUP2"
      },
      "10822": {
        "op": "PUSH2",
        "value": "0x25D9"
      },
      "10825": {
        "jump": "i",
        "op": "JUMP"
      },
      "10826": {
        "op": "JUMPDEST"
      },
      "10827": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "10829": {
        "op": "DUP1"
      },
      "10830": {
        "op": "DUP3"
      },
      "10831": {
        "op": "MSTORE"
      },
      "10832": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "10834": {
        "op": "SWAP1"
      },
      "10835": {
        "op": "DUP3"
      },
      "10836": {
        "op": "ADD"
      },
      "10837": {
        "op": "MSTORE"
      },
      "10838": {
        "op": "PUSH32",
        "value": "0x526166666C6573206D7573742068617665206174206C65617374203220746963"
      },
      "10871": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "10873": {
        "op": "DUP3"
      },
      "10874": {
        "op": "ADD"
      },
      "10875": {
        "op": "MSTORE"
      },
      "10876": {
        "op": "PUSH4",
        "value": "0x6B657473"
      },
      "10881": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "10883": {
        "op": "SHL"
      },
      "10884": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "10886": {
        "op": "DUP3"
      },
      "10887": {
        "op": "ADD"
      },
      "10888": {
        "op": "MSTORE"
      },
      "10889": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "10891": {
        "op": "ADD"
      },
      "10892": {
        "op": "SWAP1"
      },
      "10893": {
        "jump": "o",
        "op": "JUMP"
      },
      "10894": {
        "op": "JUMPDEST"
      },
      "10895": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "10897": {
        "op": "DUP1"
      },
      "10898": {
        "op": "DUP3"
      },
      "10899": {
        "op": "MSTORE"
      },
      "10900": {
        "op": "PUSH1",
        "value": "0x2E"
      },
      "10902": {
        "op": "SWAP1"
      },
      "10903": {
        "op": "DUP3"
      },
      "10904": {
        "op": "ADD"
      },
      "10905": {
        "op": "MSTORE"
      },
      "10906": {
        "op": "PUSH32",
        "value": "0x5F6D696E696D756D5469636B657473536F6C642073686F756C64203C3D205F6E"
      },
      "10939": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "10941": {
        "op": "DUP3"
      },
      "10942": {
        "op": "ADD"
      },
      "10943": {
        "op": "MSTORE"
      },
      "10944": {
        "op": "PUSH14",
        "value": "0x756D6265724F665469636B657473"
      },
      "10959": {
        "op": "PUSH1",
        "value": "0x90"
      },
      "10961": {
        "op": "SHL"
      },
      "10962": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "10964": {
        "op": "DUP3"
      },
      "10965": {
        "op": "ADD"
      },
      "10966": {
        "op": "MSTORE"
      },
      "10967": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "10969": {
        "op": "ADD"
      },
      "10970": {
        "op": "SWAP1"
      },
      "10971": {
        "jump": "o",
        "op": "JUMP"
      },
      "10972": {
        "op": "JUMPDEST"
      },
      "10973": {
        "op": "PUSH4",
        "value": "0x4E487B71"
      },
      "10978": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "10980": {
        "op": "SHL"
      },
      "10981": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10983": {
        "op": "MSTORE"
      },
      "10984": {
        "op": "PUSH1",
        "value": "0x11"
      },
      "10986": {
        "op": "PUSH1",
        "value": "0x4"
      },
      "10988": {
        "op": "MSTORE"
      },
      "10989": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "10991": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10993": {
        "op": "REVERT"
      },
      "10994": {
        "op": "JUMPDEST"
      },
      "10995": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "10997": {
        "op": "DUP3"
      },
      "10998": {
        "op": "NOT"
      },
      "10999": {
        "op": "DUP3"
      },
      "11000": {
        "op": "GT"
      },
      "11001": {
        "op": "ISZERO"
      },
      "11002": {
        "op": "PUSH2",
        "value": "0x2B05"
      },
      "11005": {
        "op": "JUMPI"
      },
      "11006": {
        "op": "PUSH2",
        "value": "0x2B05"
      },
      "11009": {
        "op": "PUSH2",
        "value": "0x2ADC"
      },
      "11012": {
        "jump": "i",
        "op": "JUMP"
      },
      "11013": {
        "op": "JUMPDEST"
      },
      "11014": {
        "op": "POP"
      },
      "11015": {
        "op": "ADD"
      },
      "11016": {
        "op": "SWAP1"
      },
      "11017": {
        "jump": "o",
        "op": "JUMP"
      },
      "11018": {
        "op": "JUMPDEST"
      },
      "11019": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11021": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11023": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11025": {
        "op": "SHL"
      },
      "11026": {
        "op": "SUB"
      },
      "11027": {
        "op": "DUP13"
      },
      "11028": {
        "op": "DUP2"
      },
      "11029": {
        "op": "AND"
      },
      "11030": {
        "op": "DUP3"
      },
      "11031": {
        "op": "MSTORE"
      },
      "11032": {
        "op": "DUP12"
      },
      "11033": {
        "op": "AND"
      },
      "11034": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "11036": {
        "op": "DUP3"
      },
      "11037": {
        "op": "ADD"
      },
      "11038": {
        "op": "MSTORE"
      },
      "11039": {
        "op": "PUSH2",
        "value": "0x160"
      },
      "11042": {
        "op": "DUP2"
      },
      "11043": {
        "op": "ADD"
      },
      "11044": {
        "op": "PUSH1",
        "value": "0x2"
      },
      "11046": {
        "op": "DUP12"
      },
      "11047": {
        "op": "LT"
      },
      "11048": {
        "op": "PUSH2",
        "value": "0x2B41"
      },
      "11051": {
        "op": "JUMPI"
      },
      "11052": {
        "op": "PUSH4",
        "value": "0x4E487B71"
      },
      "11057": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "11059": {
        "op": "SHL"
      },
      "11060": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11062": {
        "op": "MSTORE"
      },
      "11063": {
        "op": "PUSH1",
        "value": "0x21"
      },
      "11065": {
        "op": "PUSH1",
        "value": "0x4"
      },
      "11067": {
        "op": "MSTORE"
      },
      "11068": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "11070": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11072": {
        "op": "REVERT"
      },
      "11073": {
        "op": "JUMPDEST"
      },
      "11074": {
        "op": "DUP11"
      },
      "11075": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "11077": {
        "op": "DUP4"
      },
      "11078": {
        "op": "ADD"
      },
      "11079": {
        "op": "MSTORE"
      },
      "11080": {
        "op": "PUSH2",
        "value": "0x2B5C"
      },
      "11083": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "11085": {
        "op": "DUP4"
      },
      "11086": {
        "op": "ADD"
      },
      "11087": {
        "op": "DUP12"
      },
      "11088": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11090": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11092": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "11094": {
        "op": "SHL"
      },
      "11095": {
        "op": "SUB"
      },
      "11096": {
        "op": "AND"
      },
      "11097": {
        "op": "SWAP1"
      },
      "11098": {
        "op": "MSTORE"
      },
      "11099": {
        "op": "JUMP"
      },
      "11100": {
        "op": "JUMPDEST"
      },
      "11101": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11103": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11105": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11107": {
        "op": "SHL"
      },
      "11108": {
        "op": "SUB"
      },
      "11109": {
        "op": "DUP10"
      },
      "11110": {
        "op": "AND"
      },
      "11111": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "11113": {
        "op": "DUP4"
      },
      "11114": {
        "op": "ADD"
      },
      "11115": {
        "op": "MSTORE"
      },
      "11116": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11118": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11120": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "11122": {
        "op": "SHL"
      },
      "11123": {
        "op": "SUB"
      },
      "11124": {
        "op": "DUP9"
      },
      "11125": {
        "op": "AND"
      },
      "11126": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11128": {
        "op": "DUP4"
      },
      "11129": {
        "op": "ADD"
      },
      "11130": {
        "op": "MSTORE"
      },
      "11131": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11133": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11135": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "11137": {
        "op": "SHL"
      },
      "11138": {
        "op": "SUB"
      },
      "11139": {
        "op": "DUP8"
      },
      "11140": {
        "op": "AND"
      },
      "11141": {
        "op": "PUSH1",
        "value": "0xC0"
      },
      "11143": {
        "op": "DUP4"
      },
      "11144": {
        "op": "ADD"
      },
      "11145": {
        "op": "MSTORE"
      },
      "11146": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11148": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11150": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "11152": {
        "op": "SHL"
      },
      "11153": {
        "op": "SUB"
      },
      "11154": {
        "op": "DUP7"
      },
      "11155": {
        "op": "AND"
      },
      "11156": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "11158": {
        "op": "DUP4"
      },
      "11159": {
        "op": "ADD"
      },
      "11160": {
        "op": "MSTORE"
      },
      "11161": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11163": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11165": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "11167": {
        "op": "SHL"
      },
      "11168": {
        "op": "SUB"
      },
      "11169": {
        "op": "DUP6"
      },
      "11170": {
        "op": "AND"
      },
      "11171": {
        "op": "PUSH2",
        "value": "0x100"
      },
      "11174": {
        "op": "DUP4"
      },
      "11175": {
        "op": "ADD"
      },
      "11176": {
        "op": "MSTORE"
      },
      "11177": {
        "op": "PUSH2",
        "value": "0x120"
      },
      "11180": {
        "op": "DUP3"
      },
      "11181": {
        "op": "ADD"
      },
      "11182": {
        "op": "SWAP4"
      },
      "11183": {
        "op": "SWAP1"
      },
      "11184": {
        "op": "SWAP4"
      },
      "11185": {
        "op": "MSTORE"
      },
      "11186": {
        "op": "PUSH2",
        "value": "0x140"
      },
      "11189": {
        "op": "ADD"
      },
      "11190": {
        "op": "MSTORE"
      },
      "11191": {
        "op": "SWAP10"
      },
      "11192": {
        "op": "SWAP9"
      },
      "11193": {
        "op": "POP"
      },
      "11194": {
        "op": "POP"
      },
      "11195": {
        "op": "POP"
      },
      "11196": {
        "op": "POP"
      },
      "11197": {
        "op": "POP"
      },
      "11198": {
        "op": "POP"
      },
      "11199": {
        "op": "POP"
      },
      "11200": {
        "op": "POP"
      },
      "11201": {
        "op": "POP"
      },
      "11202": {
        "jump": "o",
        "op": "JUMP"
      },
      "11203": {
        "op": "JUMPDEST"
      },
      "11204": {
        "op": "PUSH4",
        "value": "0x4E487B71"
      },
      "11209": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "11211": {
        "op": "SHL"
      },
      "11212": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11214": {
        "op": "MSTORE"
      },
      "11215": {
        "op": "PUSH1",
        "value": "0x32"
      },
      "11217": {
        "op": "PUSH1",
        "value": "0x4"
      },
      "11219": {
        "op": "MSTORE"
      },
      "11220": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "11222": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11224": {
        "op": "REVERT"
      },
      "11225": {
        "op": "JUMPDEST"
      },
      "11226": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11228": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11230": {
        "op": "DUP3"
      },
      "11231": {
        "op": "ADD"
      },
      "11232": {
        "op": "PUSH2",
        "value": "0x2BEB"
      },
      "11235": {
        "op": "JUMPI"
      },
      "11236": {
        "op": "PUSH2",
        "value": "0x2BEB"
      },
      "11239": {
        "op": "PUSH2",
        "value": "0x2ADC"
      },
      "11242": {
        "jump": "i",
        "op": "JUMP"
      },
      "11243": {
        "op": "JUMPDEST"
      },
      "11244": {
        "op": "POP"
      },
      "11245": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11247": {
        "op": "ADD"
      },
      "11248": {
        "op": "SWAP1"
      },
      "11249": {
        "jump": "o",
        "op": "JUMP"
      },
      "11250": {
        "op": "JUMPDEST"
      },
      "11251": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11253": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "11255": {
        "op": "DUP3"
      },
      "11256": {
        "op": "DUP5"
      },
      "11257": {
        "op": "SUB"
      },
      "11258": {
        "op": "SLT"
      },
      "11259": {
        "op": "ISZERO"
      },
      "11260": {
        "op": "PUSH2",
        "value": "0x2C04"
      },
      "11263": {
        "op": "JUMPI"
      },
      "11264": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11266": {
        "op": "DUP1"
      },
      "11267": {
        "op": "REVERT"
      },
      "11268": {
        "op": "JUMPDEST"
      },
      "11269": {
        "op": "DUP2"
      },
      "11270": {
        "op": "MLOAD"
      },
      "11271": {
        "op": "PUSH1",
        "value": "0xFF"
      },
      "11273": {
        "op": "DUP2"
      },
      "11274": {
        "op": "AND"
      },
      "11275": {
        "op": "DUP2"
      },
      "11276": {
        "op": "EQ"
      },
      "11277": {
        "op": "PUSH2",
        "value": "0x11A7"
      },
      "11280": {
        "op": "JUMPI"
      },
      "11281": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11283": {
        "op": "DUP1"
      },
      "11284": {
        "op": "REVERT"
      },
      "11285": {
        "op": "JUMPDEST"
      },
      "11286": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11288": {
        "op": "DUP2"
      },
      "11289": {
        "op": "DUP2"
      },
      "11290": {
        "op": "JUMPDEST"
      },
      "11291": {
        "op": "DUP1"
      },
      "11292": {
        "op": "DUP6"
      },
      "11293": {
        "op": "GT"
      },
      "11294": {
        "op": "ISZERO"
      },
      "11295": {
        "op": "PUSH2",
        "value": "0x2C50"
      },
      "11298": {
        "op": "JUMPI"
      },
      "11299": {
        "op": "DUP2"
      },
      "11300": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11302": {
        "op": "NOT"
      },
      "11303": {
        "op": "DIV"
      },
      "11304": {
        "op": "DUP3"
      },
      "11305": {
        "op": "GT"
      },
      "11306": {
        "op": "ISZERO"
      },
      "11307": {
        "op": "PUSH2",
        "value": "0x2C36"
      },
      "11310": {
        "op": "JUMPI"
      },
      "11311": {
        "op": "PUSH2",
        "value": "0x2C36"
      },
      "11314": {
        "op": "PUSH2",
        "value": "0x2ADC"
      },
      "11317": {
        "jump": "i",
        "op": "JUMP"
      },
      "11318": {
        "op": "JUMPDEST"
      },
      "11319": {
        "op": "DUP1"
      },
      "11320": {
        "op": "DUP6"
      },
      "11321": {
        "op": "AND"
      },
      "11322": {
        "op": "ISZERO"
      },
      "11323": {
        "op": "PUSH2",
        "value": "0x2C43"
      },
      "11326": {
        "op": "JUMPI"
      },
      "11327": {
        "op": "SWAP2"
      },
      "11328": {
        "op": "DUP2"
      },
      "11329": {
        "op": "MUL"
      },
      "11330": {
        "op": "SWAP2"
      },
      "11331": {
        "op": "JUMPDEST"
      },
      "11332": {
        "op": "SWAP4"
      },
      "11333": {
        "op": "DUP5"
      },
      "11334": {
        "op": "SHR"
      },
      "11335": {
        "op": "SWAP4"
      },
      "11336": {
        "op": "SWAP1"
      },
      "11337": {
        "op": "DUP1"
      },
      "11338": {
        "op": "MUL"
      },
      "11339": {
        "op": "SWAP1"
      },
      "11340": {
        "op": "PUSH2",
        "value": "0x2C1A"
      },
      "11343": {
        "op": "JUMP"
      },
      "11344": {
        "op": "JUMPDEST"
      },
      "11345": {
        "op": "POP"
      },
      "11346": {
        "op": "SWAP3"
      },
      "11347": {
        "op": "POP"
      },
      "11348": {
        "op": "SWAP3"
      },
      "11349": {
        "op": "SWAP1"
      },
      "11350": {
        "op": "POP"
      },
      "11351": {
        "jump": "o",
        "op": "JUMP"
      },
      "11352": {
        "op": "JUMPDEST"
      },
      "11353": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11355": {
        "op": "DUP3"
      },
      "11356": {
        "op": "PUSH2",
        "value": "0x2C67"
      },
      "11359": {
        "op": "JUMPI"
      },
      "11360": {
        "op": "POP"
      },
      "11361": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11363": {
        "op": "PUSH2",
        "value": "0x2CF5"
      },
      "11366": {
        "op": "JUMP"
      },
      "11367": {
        "op": "JUMPDEST"
      },
      "11368": {
        "op": "DUP2"
      },
      "11369": {
        "op": "PUSH2",
        "value": "0x2C74"
      },
      "11372": {
        "op": "JUMPI"
      },
      "11373": {
        "op": "POP"
      },
      "11374": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11376": {
        "op": "PUSH2",
        "value": "0x2CF5"
      },
      "11379": {
        "op": "JUMP"
      },
      "11380": {
        "op": "JUMPDEST"
      },
      "11381": {
        "op": "DUP2"
      },
      "11382": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11384": {
        "op": "DUP2"
      },
      "11385": {
        "op": "EQ"
      },
      "11386": {
        "op": "PUSH2",
        "value": "0x2C8A"
      },
      "11389": {
        "op": "JUMPI"
      },
      "11390": {
        "op": "PUSH1",
        "value": "0x2"
      },
      "11392": {
        "op": "DUP2"
      },
      "11393": {
        "op": "EQ"
      },
      "11394": {
        "op": "PUSH2",
        "value": "0x2C94"
      },
      "11397": {
        "op": "JUMPI"
      },
      "11398": {
        "op": "PUSH2",
        "value": "0x2CB0"
      },
      "11401": {
        "op": "JUMP"
      },
      "11402": {
        "op": "JUMPDEST"
      },
      "11403": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11405": {
        "op": "SWAP2"
      },
      "11406": {
        "op": "POP"
      },
      "11407": {
        "op": "POP"
      },
      "11408": {
        "op": "PUSH2",
        "value": "0x2CF5"
      },
      "11411": {
        "op": "JUMP"
      },
      "11412": {
        "op": "JUMPDEST"
      },
      "11413": {
        "op": "PUSH1",
        "value": "0xFF"
      },
      "11415": {
        "op": "DUP5"
      },
      "11416": {
        "op": "GT"
      },
      "11417": {
        "op": "ISZERO"
      },
      "11418": {
        "op": "PUSH2",
        "value": "0x2CA5"
      },
      "11421": {
        "op": "JUMPI"
      },
      "11422": {
        "op": "PUSH2",
        "value": "0x2CA5"
      },
      "11425": {
        "op": "PUSH2",
        "value": "0x2ADC"
      },
      "11428": {
        "jump": "i",
        "op": "JUMP"
      },
      "11429": {
        "op": "JUMPDEST"
      },
      "11430": {
        "op": "POP"
      },
      "11431": {
        "op": "POP"
      },
      "11432": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11434": {
        "op": "DUP3"
      },
      "11435": {
        "op": "SHL"
      },
      "11436": {
        "op": "PUSH2",
        "value": "0x2CF5"
      },
      "11439": {
        "op": "JUMP"
      },
      "11440": {
        "op": "JUMPDEST"
      },
      "11441": {
        "op": "POP"
      },
      "11442": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "11444": {
        "op": "DUP4"
      },
      "11445": {
        "op": "LT"
      },
      "11446": {
        "op": "PUSH2",
        "value": "0x133"
      },
      "11449": {
        "op": "DUP4"
      },
      "11450": {
        "op": "LT"
      },
      "11451": {
        "op": "AND"
      },
      "11452": {
        "op": "PUSH1",
        "value": "0x4E"
      },
      "11454": {
        "op": "DUP5"
      },
      "11455": {
        "op": "LT"
      },
      "11456": {
        "op": "PUSH1",
        "value": "0xB"
      },
      "11458": {
        "op": "DUP5"
      },
      "11459": {
        "op": "LT"
      },
      "11460": {
        "op": "AND"
      },
      "11461": {
        "op": "OR"
      },
      "11462": {
        "op": "ISZERO"
      },
      "11463": {
        "op": "PUSH2",
        "value": "0x2CD3"
      },
      "11466": {
        "op": "JUMPI"
      },
      "11467": {
        "op": "POP"
      },
      "11468": {
        "op": "DUP2"
      },
      "11469": {
        "op": "DUP2"
      },
      "11470": {
        "op": "EXP"
      },
      "11471": {
        "op": "PUSH2",
        "value": "0x2CF5"
      },
      "11474": {
        "op": "JUMP"
      },
      "11475": {
        "op": "JUMPDEST"
      },
      "11476": {
        "op": "PUSH2",
        "value": "0x2CDD"
      },
      "11479": {
        "op": "DUP4"
      },
      "11480": {
        "op": "DUP4"
      },
      "11481": {
        "op": "PUSH2",
        "value": "0x2C15"
      },
      "11484": {
        "jump": "i",
        "op": "JUMP"
      },
      "11485": {
        "op": "JUMPDEST"
      },
      "11486": {
        "op": "DUP1"
      },
      "11487": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11489": {
        "op": "NOT"
      },
      "11490": {
        "op": "DIV"
      },
      "11491": {
        "op": "DUP3"
      },
      "11492": {
        "op": "GT"
      },
      "11493": {
        "op": "ISZERO"
      },
      "11494": {
        "op": "PUSH2",
        "value": "0x2CF1"
      },
      "11497": {
        "op": "JUMPI"
      },
      "11498": {
        "op": "PUSH2",
        "value": "0x2CF1"
      },
      "11501": {
        "op": "PUSH2",
        "value": "0x2ADC"
      },
      "11504": {
        "jump": "i",
        "op": "JUMP"
      },
      "11505": {
        "op": "JUMPDEST"
      },
      "11506": {
        "op": "MUL"
      },
      "11507": {
        "op": "SWAP1"
      },
      "11508": {
        "op": "POP"
      },
      "11509": {
        "op": "JUMPDEST"
      },
      "11510": {
        "op": "SWAP3"
      },
      "11511": {
        "op": "SWAP2"
      },
      "11512": {
        "op": "POP"
      },
      "11513": {
        "op": "POP"
      },
      "11514": {
        "jump": "o",
        "op": "JUMP"
      },
      "11515": {
        "op": "JUMPDEST"
      },
      "11516": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11518": {
        "op": "PUSH2",
        "value": "0x11A7"
      },
      "11521": {
        "op": "PUSH1",
        "value": "0xFF"
      },
      "11523": {
        "op": "DUP5"
      },
      "11524": {
        "op": "AND"
      },
      "11525": {
        "op": "DUP4"
      },
      "11526": {
        "op": "PUSH2",
        "value": "0x2C58"
      },
      "11529": {
        "jump": "i",
        "op": "JUMP"
      },
      "11530": {
        "op": "JUMPDEST"
      },
      "11531": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11533": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "11535": {
        "op": "DUP3"
      },
      "11536": {
        "op": "DUP5"
      },
      "11537": {
        "op": "SUB"
      },
      "11538": {
        "op": "SLT"
      },
      "11539": {
        "op": "ISZERO"
      },
      "11540": {
        "op": "PUSH2",
        "value": "0x2D1C"
      },
      "11543": {
        "op": "JUMPI"
      },
      "11544": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11546": {
        "op": "DUP1"
      },
      "11547": {
        "op": "REVERT"
      },
      "11548": {
        "op": "JUMPDEST"
      },
      "11549": {
        "op": "POP"
      },
      "11550": {
        "op": "MLOAD"
      },
      "11551": {
        "op": "SWAP2"
      },
      "11552": {
        "op": "SWAP1"
      },
      "11553": {
        "op": "POP"
      },
      "11554": {
        "jump": "o",
        "op": "JUMP"
      },
      "11555": {
        "op": "JUMPDEST"
      },
      "11556": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11558": {
        "op": "DUP2"
      },
      "11559": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11561": {
        "op": "NOT"
      },
      "11562": {
        "op": "DIV"
      },
      "11563": {
        "op": "DUP4"
      },
      "11564": {
        "op": "GT"
      },
      "11565": {
        "op": "DUP3"
      },
      "11566": {
        "op": "ISZERO"
      },
      "11567": {
        "op": "ISZERO"
      },
      "11568": {
        "op": "AND"
      },
      "11569": {
        "op": "ISZERO"
      },
      "11570": {
        "op": "PUSH2",
        "value": "0x2D3D"
      },
      "11573": {
        "op": "JUMPI"
      },
      "11574": {
        "op": "PUSH2",
        "value": "0x2D3D"
      },
      "11577": {
        "op": "PUSH2",
        "value": "0x2ADC"
      },
      "11580": {
        "jump": "i",
        "op": "JUMP"
      },
      "11581": {
        "op": "JUMPDEST"
      },
      "11582": {
        "op": "POP"
      },
      "11583": {
        "op": "MUL"
      },
      "11584": {
        "op": "SWAP1"
      },
      "11585": {
        "jump": "o",
        "op": "JUMP"
      },
      "11586": {
        "op": "JUMPDEST"
      },
      "11587": {
        "op": "PUSH4",
        "value": "0x4E487B71"
      },
      "11592": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "11594": {
        "op": "SHL"
      },
      "11595": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11597": {
        "op": "MSTORE"
      },
      "11598": {
        "op": "PUSH1",
        "value": "0x12"
      },
      "11600": {
        "op": "PUSH1",
        "value": "0x4"
      },
      "11602": {
        "op": "MSTORE"
      },
      "11603": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "11605": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11607": {
        "op": "REVERT"
      },
      "11608": {
        "op": "JUMPDEST"
      },
      "11609": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11611": {
        "op": "DUP3"
      },
      "11612": {
        "op": "PUSH2",
        "value": "0x2D67"
      },
      "11615": {
        "op": "JUMPI"
      },
      "11616": {
        "op": "PUSH2",
        "value": "0x2D67"
      },
      "11619": {
        "op": "PUSH2",
        "value": "0x2D42"
      },
      "11622": {
        "jump": "i",
        "op": "JUMP"
      },
      "11623": {
        "op": "JUMPDEST"
      },
      "11624": {
        "op": "POP"
      },
      "11625": {
        "op": "DIV"
      },
      "11626": {
        "op": "SWAP1"
      },
      "11627": {
        "jump": "o",
        "op": "JUMP"
      },
      "11628": {
        "op": "JUMPDEST"
      },
      "11629": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11631": {
        "op": "DUP3"
      },
      "11632": {
        "op": "DUP3"
      },
      "11633": {
        "op": "LT"
      },
      "11634": {
        "op": "ISZERO"
      },
      "11635": {
        "op": "PUSH2",
        "value": "0x2D7E"
      },
      "11638": {
        "op": "JUMPI"
      },
      "11639": {
        "op": "PUSH2",
        "value": "0x2D7E"
      },
      "11642": {
        "op": "PUSH2",
        "value": "0x2ADC"
      },
      "11645": {
        "jump": "i",
        "op": "JUMP"
      },
      "11646": {
        "op": "JUMPDEST"
      },
      "11647": {
        "op": "POP"
      },
      "11648": {
        "op": "SUB"
      },
      "11649": {
        "op": "SWAP1"
      },
      "11650": {
        "jump": "o",
        "op": "JUMP"
      },
      "11651": {
        "op": "JUMPDEST"
      },
      "11652": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11654": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11656": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11658": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "11660": {
        "op": "SHL"
      },
      "11661": {
        "op": "SUB"
      },
      "11662": {
        "op": "DUP1"
      },
      "11663": {
        "op": "DUP4"
      },
      "11664": {
        "op": "AND"
      },
      "11665": {
        "op": "DUP2"
      },
      "11666": {
        "op": "DUP6"
      },
      "11667": {
        "op": "AND"
      },
      "11668": {
        "op": "DUP2"
      },
      "11669": {
        "op": "DUP4"
      },
      "11670": {
        "op": "DIV"
      },
      "11671": {
        "op": "DUP2"
      },
      "11672": {
        "op": "GT"
      },
      "11673": {
        "op": "DUP3"
      },
      "11674": {
        "op": "ISZERO"
      },
      "11675": {
        "op": "ISZERO"
      },
      "11676": {
        "op": "AND"
      },
      "11677": {
        "op": "ISZERO"
      },
      "11678": {
        "op": "PUSH2",
        "value": "0x2DA9"
      },
      "11681": {
        "op": "JUMPI"
      },
      "11682": {
        "op": "PUSH2",
        "value": "0x2DA9"
      },
      "11685": {
        "op": "PUSH2",
        "value": "0x2ADC"
      },
      "11688": {
        "jump": "i",
        "op": "JUMP"
      },
      "11689": {
        "op": "JUMPDEST"
      },
      "11690": {
        "op": "MUL"
      },
      "11691": {
        "op": "SWAP5"
      },
      "11692": {
        "op": "SWAP4"
      },
      "11693": {
        "op": "POP"
      },
      "11694": {
        "op": "POP"
      },
      "11695": {
        "op": "POP"
      },
      "11696": {
        "op": "POP"
      },
      "11697": {
        "jump": "o",
        "op": "JUMP"
      },
      "11698": {
        "op": "JUMPDEST"
      },
      "11699": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11701": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11703": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11705": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "11707": {
        "op": "SHL"
      },
      "11708": {
        "op": "SUB"
      },
      "11709": {
        "op": "DUP1"
      },
      "11710": {
        "op": "DUP5"
      },
      "11711": {
        "op": "AND"
      },
      "11712": {
        "op": "DUP1"
      },
      "11713": {
        "op": "PUSH2",
        "value": "0x2DCC"
      },
      "11716": {
        "op": "JUMPI"
      },
      "11717": {
        "op": "PUSH2",
        "value": "0x2DCC"
      },
      "11720": {
        "op": "PUSH2",
        "value": "0x2D42"
      },
      "11723": {
        "jump": "i",
        "op": "JUMP"
      },
      "11724": {
        "op": "JUMPDEST"
      },
      "11725": {
        "op": "SWAP3"
      },
      "11726": {
        "op": "AND"
      },
      "11727": {
        "op": "SWAP2"
      },
      "11728": {
        "op": "SWAP1"
      },
      "11729": {
        "op": "SWAP2"
      },
      "11730": {
        "op": "DIV"
      },
      "11731": {
        "op": "SWAP3"
      },
      "11732": {
        "op": "SWAP2"
      },
      "11733": {
        "op": "POP"
      },
      "11734": {
        "op": "POP"
      },
      "11735": {
        "jump": "o",
        "op": "JUMP"
      },
      "11736": {
        "op": "JUMPDEST"
      },
      "11737": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "11739": {
        "op": "DUP1"
      },
      "11740": {
        "op": "DUP3"
      },
      "11741": {
        "op": "MSTORE"
      },
      "11742": {
        "op": "PUSH1",
        "value": "0x2B"
      },
      "11744": {
        "op": "SWAP1"
      },
      "11745": {
        "op": "DUP3"
      },
      "11746": {
        "op": "ADD"
      },
      "11747": {
        "op": "MSTORE"
      },
      "11748": {
        "op": "PUSH32",
        "value": "0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
      },
      "11781": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "11783": {
        "op": "DUP3"
      },
      "11784": {
        "op": "ADD"
      },
      "11785": {
        "op": "MSTORE"
      },
      "11786": {
        "op": "PUSH11",
        "value": "0x6E697469616C697A696E67"
      },
      "11798": {
        "op": "PUSH1",
        "value": "0xA8"
      },
      "11800": {
        "op": "SHL"
      },
      "11801": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "11803": {
        "op": "DUP3"
      },
      "11804": {
        "op": "ADD"
      },
      "11805": {
        "op": "MSTORE"
      },
      "11806": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "11808": {
        "op": "ADD"
      },
      "11809": {
        "op": "SWAP1"
      },
      "11810": {
        "jump": "o",
        "op": "JUMP"
      },
      "11811": {
        "op": "JUMPDEST"
      },
      "11812": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11814": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "11816": {
        "op": "DUP3"
      },
      "11817": {
        "op": "DUP5"
      },
      "11818": {
        "op": "SUB"
      },
      "11819": {
        "op": "SLT"
      },
      "11820": {
        "op": "ISZERO"
      },
      "11821": {
        "op": "PUSH2",
        "value": "0x2E35"
      },
      "11824": {
        "op": "JUMPI"
      },
      "11825": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11827": {
        "op": "DUP1"
      },
      "11828": {
        "op": "REVERT"
      },
      "11829": {
        "op": "JUMPDEST"
      },
      "11830": {
        "op": "DUP2"
      },
      "11831": {
        "op": "MLOAD"
      },
      "11832": {
        "op": "PUSH2",
        "value": "0x11A7"
      },
      "11835": {
        "op": "DUP2"
      },
      "11836": {
        "op": "PUSH2",
        "value": "0x291D"
      },
      "11839": {
        "jump": "i",
        "op": "JUMP"
      },
      "11840": {
        "op": "JUMPDEST"
      },
      "11841": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11843": {
        "op": "JUMPDEST"
      },
      "11844": {
        "op": "DUP4"
      },
      "11845": {
        "op": "DUP2"
      },
      "11846": {
        "op": "LT"
      },
      "11847": {
        "op": "ISZERO"
      },
      "11848": {
        "op": "PUSH2",
        "value": "0x2E5B"
      },
      "11851": {
        "op": "JUMPI"
      },
      "11852": {
        "op": "DUP2"
      },
      "11853": {
        "op": "DUP2"
      },
      "11854": {
        "op": "ADD"
      },
      "11855": {
        "op": "MLOAD"
      },
      "11856": {
        "op": "DUP4"
      },
      "11857": {
        "op": "DUP3"
      },
      "11858": {
        "op": "ADD"
      },
      "11859": {
        "op": "MSTORE"
      },
      "11860": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "11862": {
        "op": "ADD"
      },
      "11863": {
        "op": "PUSH2",
        "value": "0x2E43"
      },
      "11866": {
        "op": "JUMP"
      },
      "11867": {
        "op": "JUMPDEST"
      },
      "11868": {
        "op": "DUP4"
      },
      "11869": {
        "op": "DUP2"
      },
      "11870": {
        "op": "GT"
      },
      "11871": {
        "op": "ISZERO"
      },
      "11872": {
        "op": "PUSH2",
        "value": "0x2106"
      },
      "11875": {
        "op": "JUMPI"
      },
      "11876": {
        "op": "POP"
      },
      "11877": {
        "op": "POP"
      },
      "11878": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11880": {
        "op": "SWAP2"
      },
      "11881": {
        "op": "ADD"
      },
      "11882": {
        "op": "MSTORE"
      },
      "11883": {
        "jump": "o",
        "op": "JUMP"
      },
      "11884": {
        "op": "JUMPDEST"
      },
      "11885": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11887": {
        "op": "DUP3"
      },
      "11888": {
        "op": "MLOAD"
      },
      "11889": {
        "op": "PUSH2",
        "value": "0x2E7E"
      },
      "11892": {
        "op": "DUP2"
      },
      "11893": {
        "op": "DUP5"
      },
      "11894": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "11896": {
        "op": "DUP8"
      },
      "11897": {
        "op": "ADD"
      },
      "11898": {
        "op": "PUSH2",
        "value": "0x2E40"
      },
      "11901": {
        "jump": "i",
        "op": "JUMP"
      },
      "11902": {
        "op": "JUMPDEST"
      },
      "11903": {
        "op": "SWAP2"
      },
      "11904": {
        "op": "SWAP1"
      },
      "11905": {
        "op": "SWAP2"
      },
      "11906": {
        "op": "ADD"
      },
      "11907": {
        "op": "SWAP3"
      },
      "11908": {
        "op": "SWAP2"
      },
      "11909": {
        "op": "POP"
      },
      "11910": {
        "op": "POP"
      },
      "11911": {
        "jump": "o",
        "op": "JUMP"
      },
      "11912": {
        "op": "JUMPDEST"
      },
      "11913": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "11915": {
        "op": "DUP2"
      },
      "11916": {
        "op": "MSTORE"
      },
      "11917": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11919": {
        "op": "DUP3"
      },
      "11920": {
        "op": "MLOAD"
      },
      "11921": {
        "op": "DUP1"
      },
      "11922": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "11924": {
        "op": "DUP5"
      },
      "11925": {
        "op": "ADD"
      },
      "11926": {
        "op": "MSTORE"
      },
      "11927": {
        "op": "PUSH2",
        "value": "0x2EA7"
      },
      "11930": {
        "op": "DUP2"
      },
      "11931": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "11933": {
        "op": "DUP6"
      },
      "11934": {
        "op": "ADD"
      },
      "11935": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "11937": {
        "op": "DUP8"
      },
      "11938": {
        "op": "ADD"
      },
      "11939": {
        "op": "PUSH2",
        "value": "0x2E40"
      },
      "11942": {
        "jump": "i",
        "op": "JUMP"
      },
      "11943": {
        "op": "JUMPDEST"
      },
      "11944": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "11946": {
        "op": "ADD"
      },
      "11947": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "11949": {
        "op": "NOT"
      },
      "11950": {
        "op": "AND"
      },
      "11951": {
        "op": "SWAP2"
      },
      "11952": {
        "op": "SWAP1"
      },
      "11953": {
        "op": "SWAP2"
      },
      "11954": {
        "op": "ADD"
      },
      "11955": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "11957": {
        "op": "ADD"
      },
      "11958": {
        "op": "SWAP3"
      },
      "11959": {
        "op": "SWAP2"
      },
      "11960": {
        "op": "POP"
      },
      "11961": {
        "op": "POP"
      },
      "11962": {
        "jump": "o",
        "op": "JUMP"
      }
    },
    "sha1": "999b1cf657fe93e346223562fe6a4fc52b3ac91a",
    "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.15;\n\n/**\n\n\u2588\u2584\u2584\u2584\u2584 \u2588\u2588   \u2584\u2588\u2588\u2588\u2588  \u2584\u2588\u2588\u2588\u2588  \u2588     \u2584\u2588\u2588\u2588\u2584   \u2584\u2588\u2588\u2588\u2588  \u2584\u2588 \n\u2588  \u2584\u2580 \u2588 \u2588  \u2588\u2580   \u2580 \u2588\u2580   \u2580 \u2588     \u2588\u2580   \u2580  \u2588\u2580   \u2580 \u2588\u2588 \n\u2588\u2580\u2580\u258c  \u2588\u2584\u2584\u2588 \u2588\u2580\u2580    \u2588\u2580\u2580    \u2588     \u2588\u2588\u2584\u2584    \u2588\u2580\u2580    \u2588\u2588 \n\u2588  \u2588  \u2588  \u2588 \u2588      \u2588      \u2588\u2588\u2588\u2584  \u2588\u2584   \u2584\u2580 \u2588      \u2590\u2588 \n  \u2588      \u2588  \u2588      \u2588         \u2580 \u2580\u2588\u2588\u2588\u2580    \u2588      \u2590 \n \u2580      \u2588    \u2580      \u2580                    \u2580       \n       \u2580                                         \n\n Written by: UnT4x3d\n\n RaffleFi\u00a9 2022\n \n */\n\nimport \"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\nimport \"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport {IWETH} from \"./interfaces/IWETH.sol\";\n\ninterface ICurrencyPriceFeed {\n    function getUsdPriceOfToken(address token_) external view returns (uint256);\n}\n\ninterface IERC20Extended is IERC20 {\n    function decimals() external view returns (uint8);\n}\n\ncontract MainnetEscrow is Initializable, OwnableUpgradeable, PausableUpgradeable {\n    using SafeERC20 for IERC20;\n\n    enum RaffleType {\n        ERC721,\n        ERC20\n    }\n\n    struct CallbackInfo {\n        // Address that will receive the payment\n        address receiver;\n        // Contract that will be called to do the transfer for the payment. address(0) = Ether\n        address assetContract;\n        // Is this contract an ERC721? Otherwise it is an ERC20\n        bool isERC721;\n        // Amount/NftID to send to the receiver\n        uint256 amountOrNftIdToReceiver;\n        // If >0 our fees mapping should be increased\n        uint256 increaseTotalAmountClaimable;\n    }\n\n    // ERC20 address => isWhitelisted?\n    mapping(address => bool) public whitelistedCurrencies;\n\n    IWETH private constant WETH = IWETH(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);\n    uint256 public OPENING_FEE; // ~$60 per RaffleCreated\n\n    // 5% FAIR_RAFFLE_FEE\n    uint256 public constant FAIR_RAFFLE_FEE_NUMERATOR = 500;\n    uint256 public constant FAIR_RAFFLE_FEE_DENOMINATOR = 10000;\n    /**\n        Token address => Amount that owners of the contract can claim as fee rewards\n        address(0) = Ether\n     */\n    mapping(address => uint256) public totalAmountClaimable;\n\n    // EOA that will relay the data from Polygon with the results of the raffle\n    address public relayer;\n    // Contract to retrieve from Chainlink Price Feeds the price of different tokens in USD\n    ICurrencyPriceFeed public currencyPriceFeed;\n\n    // Address of Token in Polygon => Address of token in mainnet used to get the price\n    mapping(address => address) public polygonTokenToMainnetAddress;\n    // If this is false the CurrencyPriceFeeds contract will not be used\n    bool public priceFeedsEnabled;\n    // NOTE: Reserved for future upgrades\n    uint256[20] private __gap;\n\n    event RaffleCreated(\n        address assetRaffled,\n        address raffleOwner,\n        RaffleType raffleType,\n        uint128 nftIdOrAmount, \n        address paymentcurrency, \n        uint128 pricePerTicket, \n        uint64 numberOfTotalTickets, \n        uint64 minimumTicketsSold, \n        uint64 endTimestamp, \n        bytes32 merkleRoot,\n        uint256 fairRaffleFee\n    );\n    event ERC20CurrencyAdded(address currency);\n    event ERC20CurrencyRemoved(address currency);\n    event CallbackReceived(\n        address receiver,\n        address assetContract,\n        bool isERC721,\n        uint256 amountOrNftIdToReceiver,\n        uint256 increaseTotalAmountClaimable\n    );\n    event RelayerUpdated(address oldRelayerAddress, address newRelayerAddress);\n    event PriceFeedUpdated(address oldPriceFeedAddress, address newPriceFeedAddress);\n    event OpeningFeeUpdated(uint256 oldOpeningFee, uint256 newOpeningFee);\n\n    function initialize(address _relayer, address _priceFeedContract) public initializer {\n        __Ownable_init();\n        __Pausable_init();\n\n        relayer = _relayer;\n        currencyPriceFeed = ICurrencyPriceFeed(_priceFeedContract);\n        priceFeedsEnabled = true;\n        // WETH address in Polygon\n        whitelistedCurrencies[0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619] = true;\n        // WETH Polygon => WETH Mainnet\n        polygonTokenToMainnetAddress[0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619] = address(WETH);\n        OPENING_FEE = 0.03 ether;\n    }\n\n    modifier onlyRelayer {\n        require(msg.sender == relayer, \"OnlyRelayer\");\n        _;\n    }\n\n    /**\n     * @notice  Allows users to create a raffle of an ERC721 asset\n     * @param   _nftCollection Address of the NFT to raffle\n     * @param   _nftId NFTid of the _nftCollection\n     * @param   _currencyInPolygon Polygon ERC20 token address used to buy tickets. address(0) should be put here if the currency will be MATIC\n     * @param   _pricePerTicket Price per ticket. It can be zero in case of an \"airdrop\"\n     * @param   _numberOfTickets Number of tickets that will be sold as maximum in the raffle\n     * @param   _minimumTicketsSold Number of tickets that should be sold in order to be a success raffle. If this minimum amount is not\n        reached the owner of the raffle will be able to cancel the raffle, returning the users their payment plus a little collateral to cover\n        for the gas fees. If this amount is reached, normal flow will be followed.\n     * @param   _durationInSeconds Duration in seconds of the raffle\n     * @param   _merkleRoot Used so only whitelisted users can buy raffle tickets\n     */\n    function createERC721Raffle(address _nftCollection, uint128 _nftId, address _currencyInPolygon, uint128 _pricePerTicket, uint64 _numberOfTickets, uint64 _minimumTicketsSold, uint64 _durationInSeconds, bytes32 _merkleRoot) external payable whenNotPaused {\n        require(msg.sender == IERC721(_nftCollection).ownerOf(_nftId), \"You do not own this NFT\");\n        require(whitelistedCurrencies[_currencyInPolygon], \"This currency is not whitelisted\");\n        require(_numberOfTickets > 1, \"Raffles must have at least 2 tickets\");\n        require(_minimumTicketsSold <= _numberOfTickets, \"_minimumTicketsSold should <= _numberOfTickets\");\n        require(_durationInSeconds >= 43200, \"Minimum duration is 12 hours\");\n\n        // TOTAL FEES: OPENING_FEE + FAIR_RAFFLE_FEE (5% for all the ERC721 Raffles)\n        uint256 FAIR_RAFFLE_FEE = fairRaffleFeeERC721(_currencyInPolygon, _pricePerTicket, _minimumTicketsSold);\n\n        require(msg.value == (OPENING_FEE + FAIR_RAFFLE_FEE), \"Incorrect fees sent\");\n        totalAmountClaimable[address(0)] += OPENING_FEE;\n\n        // Transfering the NFT into our contract\n        IERC721(_nftCollection).transferFrom(msg.sender, address(this), _nftId);\n        require(address(this) == IERC721(_nftCollection).ownerOf(_nftId), \"Transfer failed\");\n\n        emit RaffleCreated(\n            _nftCollection,\n            msg.sender,\n            RaffleType.ERC721,\n            _nftId, \n            _currencyInPolygon, \n            _pricePerTicket, \n            _numberOfTickets, \n            _minimumTicketsSold, \n            uint64(block.timestamp + _durationInSeconds), \n            _merkleRoot,\n            FAIR_RAFFLE_FEE\n        );\n    }\n\n    /**\n        * @notice  Allows users to create a raffle of an ERC20 asset\n        * @param   _tokenAddress Address of the token amount to raffle\n        * @param   _amount Quantity of tokens to be raffled\n        * @param   _currencyInPolygon Polygon ERC20 token address used to buy tickets. address(0) should be put here if the currency will be MATIC\n        * @param   _pricePerTicket Price per ticket. It can be zero in case of an \"airdrop\"\n        * @param   _numberOfTickets Number of tickets that will be sold as maximum in the raffle\n        * @param   _minimumTicketsSold Number of tickets that should be sold in order to be a success raffle. If this minimum amount is not\n        reached the owner of the raffle will be able to cancel the raffle, returning the users their payment plus a little collateral to cover\n        for the gas fees. If this amount is reached, normal flow will be followed\n        * @param   _durationInSeconds Duration in seconds of the raffle\n        * @param   _merkleRoot Used so only whitelisted users can buy raffle tickets\n    */\n    function createERC20Raffle(address _tokenAddress, uint128 _amount, address _currencyInPolygon, uint128 _pricePerTicket, uint64 _numberOfTickets, uint64 _minimumTicketsSold, uint64 _durationInSeconds, bytes32 _merkleRoot) external payable whenNotPaused {\n        require(whitelistedCurrencies[_currencyInPolygon], \"This currency is not whitelisted\");\n        require(_numberOfTickets > 1, \"Raffles must have at least 2 tickets\");\n        require(_minimumTicketsSold <= _numberOfTickets, \"_minimumTicketsSold should <= _numberOfTickets\");\n        require(_durationInSeconds >= 43200, \"Minimum duration is 12 hours\");\n        \n        uint256 FAIR_RAFFLE_FEE = fairRaffleFeeERC20( _tokenAddress, _amount, _currencyInPolygon, _pricePerTicket, _numberOfTickets, _minimumTicketsSold);\n\n        if (_tokenAddress == address(0)) {\n            require(msg.value == _amount + OPENING_FEE, \"Incorrect fee sent\");\n        } else {\n            require(msg.value == OPENING_FEE, \"Incorrect OPENING_FEE sent\");\n            uint256 balanceBefore = IERC20(_tokenAddress).balanceOf(address(this));\n            // Transfer tokens to the contract\n            IERC20(_tokenAddress).safeTransferFrom(msg.sender, address(this), _amount);\n            uint256 balanceAfter = IERC20(_tokenAddress).balanceOf(address(this));\n            require(_amount == balanceAfter - balanceBefore, \"ERC20 token transfer failed\");\n        }\n\n        totalAmountClaimable[address(0)] += OPENING_FEE;\n        emit RaffleCreated(\n            _tokenAddress,\n            msg.sender,\n            RaffleType.ERC20,\n            _amount, \n            _currencyInPolygon, \n            _pricePerTicket, \n            _numberOfTickets, \n            _minimumTicketsSold, \n            uint64(block.timestamp + _durationInSeconds), \n            _merkleRoot,\n            FAIR_RAFFLE_FEE\n        );\n    }\n\n    /**\n     * @notice  Relayer will call this function to send updates from Polygon\n     */\n    function polygonCallback(CallbackInfo[] memory callbackArr) external onlyRelayer {\n        uint256 len = callbackArr.length;\n        for (uint256 i; i < len; ++i){\n            if(callbackArr[i].isERC721){\n                if(callbackArr[i].receiver != address(0)){\n                    IERC721(callbackArr[i].assetContract).transferFrom(address(this), callbackArr[i].receiver, callbackArr[i].amountOrNftIdToReceiver);\n                }\n            }\n            else{\n                if(callbackArr[i].receiver != address(0)){\n                    if(callbackArr[i].assetContract == address(0)){\n                        _handleEtherTransfer(callbackArr[i].receiver, callbackArr[i].amountOrNftIdToReceiver);\n                    }\n                    else {\n                        IERC20(callbackArr[i].assetContract).safeTransfer(callbackArr[i].receiver, callbackArr[i].amountOrNftIdToReceiver);\n                    }\n                }\n            }\n            if(callbackArr[i].increaseTotalAmountClaimable > 0){\n                totalAmountClaimable[callbackArr[i].assetContract] += callbackArr[i].increaseTotalAmountClaimable;\n            }\n            emit CallbackReceived(\n                callbackArr[i].receiver,\n                callbackArr[i].assetContract,\n                callbackArr[i].isERC721,\n                callbackArr[i].amountOrNftIdToReceiver,\n                callbackArr[i].increaseTotalAmountClaimable\n            );\n        }\n    }\n\n    /**\n     *  Function to handle Ether transfers\n     */\n    function _handleEtherTransfer(address _dest, uint256 _amount) internal {\n        // Handle ETH payment\n        require(address(this).balance >= _amount, \"_handleEtherTransfer insolvent\");\n        uint256 gas =  gasleft();\n        (bool success, ) = _dest.call{value: _amount, gas: gas}(\"\");\n        // If the ETH transfer fails (sigh), wrap the ETH and try send it as WETH.\n        if (!success) {\n            WETH.deposit{value: _amount}();\n            IERC20(address(WETH)).safeTransfer(_dest, _amount);\n        }\n    }\n\n    /** ############################################################################################\n     *              ONLYOWNER FUNCTIONS\n     *  ############################################################################################\n     */\n\n    /**\n     * @notice  Used to pause/unpause the smart contract by the owner\n     */\n    function togglePause() external onlyOwner {\n        if (!paused()) _pause();\n        else _unpause();\n    }\n\n    /**\n     * @notice  Used to set a new relayer account\n     */\n    function setRelayer(address _relayer) external onlyOwner {\n        emit RelayerUpdated(relayer, _relayer);\n        relayer = _relayer;\n    }\n\n    /**\n     * @notice  Used to set a new CurrencyPriceFeed contract\n     */\n    function setPriceFeed(address _currencyPriceFeed) external onlyOwner {\n        emit PriceFeedUpdated(address(currencyPriceFeed), _currencyPriceFeed);\n        currencyPriceFeed = ICurrencyPriceFeed(_currencyPriceFeed);\n    }\n\n    /**\n     * @notice  Used to enable/disable CurrencyPriceFeeds contract\n     */\n    function togglePriceFeed() external onlyOwner {\n        priceFeedsEnabled = !priceFeedsEnabled;\n    }\n\n    /**\n     * @notice  Used to set a new OPENING_FEE\n     */\n    function setOpeningFee(uint256 _openingFee) external onlyOwner {\n        emit OpeningFeeUpdated(OPENING_FEE, _openingFee);\n        OPENING_FEE = _openingFee;\n    }\n\n    /**\n     * @notice  Used to whitelist a new ERC20 token to be used as a payment currency\n    * @param   _ERC20TokenAddressPolygon Address of the token in Polygon\n    * @param   _ERC20TokenAddressMainnet Address of the token in Mainnet\n     */\n    function whitelistCurrency(address _ERC20TokenAddressPolygon, address _ERC20TokenAddressMainnet) external onlyOwner {\n        require(!whitelistedCurrencies[_ERC20TokenAddressPolygon], \"Token is already whitelisted\");\n        whitelistedCurrencies[_ERC20TokenAddressPolygon] = true;\n        polygonTokenToMainnetAddress[_ERC20TokenAddressPolygon] = _ERC20TokenAddressMainnet;\n        emit ERC20CurrencyAdded(_ERC20TokenAddressPolygon);\n    }\n\n    /**\n     * @notice  Used to blacklist a ERC20 token so it can not be used any longer as a payment currency\n     */\n    function blacklistCurrency(address _ERC20TokenAddressPolygon) external onlyOwner {\n        require(whitelistedCurrencies[_ERC20TokenAddressPolygon], \"Token is not whitelisted\");\n        whitelistedCurrencies[_ERC20TokenAddressPolygon] = false;\n        emit ERC20CurrencyRemoved(_ERC20TokenAddressPolygon);\n    }\n\n    /**\n     * @notice  Used by the contract owners to claim the fees accrued\n     * @param   _tokenAddress List of tokens to withdraw the fees\n     * @param   _amounts List of amounts that will be withdrawn\n     * @param   _receiver Address that will receive the fees\n     */\n    function withdrawFees(address[] calldata _tokenAddress, uint256[] calldata _amounts, address _receiver) external onlyOwner {\n        uint256 len = _tokenAddress.length;\n        require(len == _amounts.length, \"Array lengths do not match\");\n        uint256 amount;\n        address tokenAddress;\n        for (uint256 i; i < len; ++i) {\n            tokenAddress = _tokenAddress[i];\n            amount = _amounts[i];\n            require(amount <= totalAmountClaimable[tokenAddress], \"Amount too high\");\n            if(tokenAddress == address(0)){\n                _handleEtherTransfer(_receiver, amount);\n            }\n            else{\n                IERC20(tokenAddress).safeTransfer(_receiver, amount);\n            }\n            // No overflow here as => require(amount <= totalAmountClaimable[tokenAddress])\n            unchecked {\n                totalAmountClaimable[tokenAddress] -= amount;\n            }\n        }\n    }\n\n    /** ############################################################################################\n     *                 VIEW FUNCTIONS\n     *  ############################################################################################\n     */\n\n    function isCurrencyWhitelisted(address _erc20Token) external view returns(bool) {\n        return whitelistedCurrencies[_erc20Token];\n    }\n\n    function fairRaffleFeeERC20(address _tokenAddress, uint128 _amount, address _currencyInPolygon, uint128 _pricePerTicket, uint64 _numberOfTickets, uint64 _minimumTicketsSold) public view returns(uint256) {\n        uint256 FAIR_RAFFLE_FEE;\n        if (!priceFeedsEnabled){\n            FAIR_RAFFLE_FEE = (_minimumTicketsSold * _pricePerTicket * FAIR_RAFFLE_FEE_NUMERATOR) / FAIR_RAFFLE_FEE_DENOMINATOR;\n        }\n        else{\n            uint256 totalRaffleValueInUsd;\n            if (_tokenAddress == address(0)){\n                _tokenAddress = address(WETH);\n                totalRaffleValueInUsd = (currencyPriceFeed.getUsdPriceOfToken(_tokenAddress) * _amount) / (10 ** 18); // As Ether has 18 decimals\n            }\n            else{\n                totalRaffleValueInUsd = (currencyPriceFeed.getUsdPriceOfToken(_tokenAddress) * _amount) / (10 ** IERC20Extended(_tokenAddress).decimals());\n            }\n            uint256 totalValueAllTicketsInUsd = (currencyPriceFeed.getUsdPriceOfToken(polygonTokenToMainnetAddress[_currencyInPolygon]) * _numberOfTickets * _pricePerTicket) / (10 ** IERC20Extended(polygonTokenToMainnetAddress[_currencyInPolygon]).decimals());\n            uint256 ratio = (totalValueAllTicketsInUsd * 10000) / totalRaffleValueInUsd;\n        \n            // If the Raffle is fair, FAIR_RAFFLE_FEE = 0\n            if (ratio <= 10000){\n                FAIR_RAFFLE_FEE = 0;\n            }\n            else if ((ratio > 10000) && (ratio <= 11000)) {\n                // 5%\n                FAIR_RAFFLE_FEE = (_minimumTicketsSold * _pricePerTicket * 500) / 10000;\n            }\n            else if ((ratio > 11000) && (ratio <= 12500)) {\n                // 10%\n                FAIR_RAFFLE_FEE = (_minimumTicketsSold * _pricePerTicket * 1000) / 10000;\n            }\n            else if (ratio > 12500) {\n                // 20%\n                FAIR_RAFFLE_FEE = (_minimumTicketsSold * _pricePerTicket * 2000) / 10000;\n            }\n        }\n        return FAIR_RAFFLE_FEE;\n    }\n\n    function fairRaffleFeeERC721(address _currencyInPolygon, uint128 _pricePerTicket, uint64 _minimumTicketsSold) public view returns(uint256) {\n        uint256 totalRaffledTicketsValueInUsd = (currencyPriceFeed.getUsdPriceOfToken(polygonTokenToMainnetAddress[_currencyInPolygon]) * _pricePerTicket * _minimumTicketsSold) / (10 ** IERC20Extended(polygonTokenToMainnetAddress[_currencyInPolygon]).decimals());\n        uint256 FAIR_RAFFLE_FEE_IN_USD = (totalRaffledTicketsValueInUsd * FAIR_RAFFLE_FEE_NUMERATOR) / FAIR_RAFFLE_FEE_DENOMINATOR;\n        uint256 FAIR_RAFFLE_FEE = (FAIR_RAFFLE_FEE_IN_USD * 1e18) / currencyPriceFeed.getUsdPriceOfToken(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE);\n        return FAIR_RAFFLE_FEE;\n    }\n}",
    "sourceMap": "1336:18074:1:-:0;;;;;;;;;;;;;;;;;;;",
    "sourcePath": "contracts/MainnetEscrow.sol",
    "type": "contract"
  }